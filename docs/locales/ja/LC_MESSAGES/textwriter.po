# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-27 14:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 9cb91ba301fa44bfa375c6ec39efbe32
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 eae168576a3141adbbc52f4038e1cb18
msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
msgstr ""

#: ../../header.rst:-1 a89e459c092d42b382f7890c1da63ce5
msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
msgstr ""

#: ../../textwriter.rst:7 1d4b3da62609403fac74940499c03fff
msgid "TextWriter"
msgstr ""

#: ../../textwriter.rst:9 32f4fbe55074481daccb97ee30e47c4b
msgid "New in v1.16.18"
msgstr ""

#: ../../textwriter.rst:11 48f592646185450bab9b25495d9b85dd
msgid ""
"This class represents a MuPDF *text* object. The basic idea is to "
"**decouple (1) text preparation, and (2) text output** to PDF pages."
msgstr ""

#: ../../textwriter.rst:13 25684dcc253c4dc587e8394eb609fdbb
msgid ""
"During **preparation**, a text writer stores any number of text pieces "
"(\"spans\") together with their positions and individual font "
"information. The **output** of the writer's prepared content may happen "
"multiple times to any PDF page with a compatible page size."
msgstr ""

#: ../../textwriter.rst:15 1e29e62ff26c4ee08564628e1aceeb23
msgid ""
"A text writer is an elegant alternative to methods "
":meth:`Page.insert_text` and friends:"
msgstr ""

#: ../../textwriter.rst:17 9cfa235490684087be0541f02f6ed615
msgid ""
"**Improved text positioning:** Choose any point where insertion of text "
"should start. Storing text returns the \"cursor position\" after the "
"*last character* of the span."
msgstr ""

#: ../../textwriter.rst:18 f65b4cab66404a16b922d3d9a4dd2966
msgid ""
"**Free font choice:** Each text span has its own font and "
":data:`fontsize`. This lets you easily switch when composing a larger "
"text."
msgstr ""

#: ../../textwriter.rst:19 a85e6b65b6a345e6a21e0ebd19986eaf
msgid ""
"**Automatic fallback fonts:** If a character is not supported by the "
"chosen font, alternative fonts are automatically searched. This "
"significantly reduces the risk of seeing unprintable symbols in the "
"output (\"TOFUs\" -- looking like a small rectangle). PyMuPDF now also "
"comes with the **universal font \"Droid Sans Fallback Regular\"**, which "
"supports **all Latin** characters (including Cyrillic and Greek), and "
"**all CJK** characters (Chinese, Japanese, Korean)."
msgstr ""

#: ../../textwriter.rst:20 2abf5df7c02c4fccbff0f0b14b3d313d
msgid ""
"**Cyrillic and Greek Support:** The :ref:`Base-14-fonts` have integrated "
"support of Cyrillic and Greek characters **without specifying encoding.**"
" Your text may be a mixture of Latin, Greek and Cyrillic."
msgstr ""

#: ../../textwriter.rst:21 36b0e5b9d6a542a087f2c772b745b8e8
msgid ""
"**Transparency support:** Parameter *opacity* is supported. This offers a"
" handy way to create watermark-style text."
msgstr ""

#: ../../textwriter.rst:22 c7024eb4bd5a42098e43b9bc1e015e9c
msgid ""
"**Justified text:** Supported for any font -- not just simple fonts as in"
" :meth:`Page.insert_textbox`."
msgstr ""

#: ../../textwriter.rst:23 59022fb68f51448db19e8afd689954f1
msgid ""
"**Reusability:** A TextWriter object exists independent from PDF pages. "
"It can be written multiple times, either to the same or to other pages, "
"in the same or in different PDFs, choosing different colors or "
"transparency."
msgstr ""

#: ../../textwriter.rst:25 6f4857df5e88477383d881606c50ce35
msgid "Using this object entails three steps:"
msgstr ""

#: ../../textwriter.rst:27 8efe94cf119e49349262d6af43e5fba8
msgid ""
"When **created**, a TextWriter requires a fixed **page rectangle** in "
"relation to which it calculates text positions. A text writer can write "
"to pages of this size only."
msgstr ""

#: ../../textwriter.rst:28 28398ed1c5e54db7ad4cbdcae06602ca
msgid ""
"Store text in the TextWriter using methods :meth:`TextWriter.append`, "
":meth:`TextWriter.appendv` and :meth:`TextWriter.fill_textbox` as often "
"as is desired."
msgstr ""

#: ../../textwriter.rst:29 3108a35dec464e6586988fd42d623410
msgid "Output the TextWriter object on some PDF page(s)."
msgstr ""

#: ../../textwriter.rst:33 03c40d488f254afa9baf30c6282c0e8f
msgid ""
"Starting with version 1.17.0, TextWriters **do support** text rotation "
"via the *morph* parameter of :meth:`TextWriter.write_text`."
msgstr ""

#: ../../textwriter.rst:35 3e611df7b7184188a48079708dbf6804
msgid ""
"There also exists :meth:`Page.write_text` which combines one or more "
"TextWriters and jointly writes them to a given rectangle and with a given"
" rotation angle -- much like :meth:`Page.show_pdf_page`."
msgstr ""

#: ../../textwriter.rst:39 04ce69ecf70849039421fbd1ae48a414
msgid "**Method / Attribute**"
msgstr ""

#: ../../textwriter.rst:39 d9da254877b24838a10bb5081a6f36fd
msgid "**Short Description**"
msgstr ""

#: ../../textwriter.rst:41 4a27961dc6b64e8eb6a0ab9bf14b044d
msgid ":meth:`~TextWriter.append`"
msgstr ""

#: ../../textwriter.rst:41 3766bcc851274f80b0406b796adb67c5
msgid "Add text in horizontal write mode"
msgstr ""

#: ../../textwriter.rst:42 a8684163349a402689b984efe7e1adfd
msgid ":meth:`~TextWriter.appendv`"
msgstr ""

#: ../../textwriter.rst:42 fee194eaaa20472cbef73f293404e774
msgid "Add text in vertical write mode"
msgstr ""

#: ../../textwriter.rst:43 3480fc3621834bca8b4f7dab7f039db6
msgid ":meth:`~TextWriter.fill_textbox`"
msgstr ""

#: ../../textwriter.rst:43 515eeb6a43654ff98dd8b092d3b4f14e
msgid "Fill rectangle (horizontal write mode)"
msgstr ""

#: ../../textwriter.rst:44 bfacbcf9816a4bbebd2a6a90923e439f
msgid ":meth:`~TextWriter.write_text`"
msgstr ""

#: ../../textwriter.rst:44 ba3c4fa87342445c868340fdcdac28fc
msgid "Output TextWriter to a PDF page"
msgstr ""

#: ../../textwriter.rst:45 7185005b19264fe2abacc09f93947b9e
msgid ":attr:`~TextWriter.color`"
msgstr ""

#: ../../textwriter.rst:45 006a7acfe1914e8fb6fd49a82792c953
msgid "Text color (can be changed)"
msgstr ""

#: ../../textwriter.rst:46 2f7f12cd68564064873803892e08e6ac
msgid ":attr:`~TextWriter.last_point`"
msgstr ""

#: ../../textwriter.rst:46 0a42cb26fdf54bf49ae3f5235deadd23
msgid "Last written character ends here"
msgstr ""

#: ../../textwriter.rst:47 f05bfe4865304dd3b99ff02744da1b5a
msgid ":attr:`~TextWriter.opacity`"
msgstr ""

#: ../../textwriter.rst:47 79dc48b8cd49487a964197981d21c620
msgid "Text opacity (can be changed)"
msgstr ""

#: ../../textwriter.rst:48 70a36192dfd84b0d80772e21cb35938b
msgid ":attr:`~TextWriter.rect`"
msgstr ""

#: ../../textwriter.rst:48 1ac798ced59d4f908b049d6f36b4d1cb
msgid "Page rectangle used by this TextWriter"
msgstr ""

#: ../../textwriter.rst:49 c7c3f435010f4764804cfde4b0579f6a
msgid ":attr:`~TextWriter.text_rect`"
msgstr ""

#: ../../textwriter.rst:49 8d160f25c96341398c63c363f1ab1a16
msgid "Area occupied so far"
msgstr ""

#: ../../textwriter.rst:53 df936bc5fed0409f9014089f420b263e
msgid "**Class API**"
msgstr ""

#: ../../textwriter.rst 497c5c575a8646a0aa675f7802dc1c85
#: 4a7a4b0107554088accd6eadba197fc9 9b595721104b47a29efe47c8fe86e996
#: bde04c65ec3d422d9a854448d7a3161e ff6670a670564ecfbc72b4901b5d864e
msgid "Parameters"
msgstr ""

#: ../../textwriter.rst:59 6ddaa91965fc4be69f532806a4c86cdb
msgid "rectangle internally used for text positioning computations."
msgstr ""

#: ../../textwriter.rst:60 08d1e550d38541f3a06478bd380a966b
msgid ""
"sets the transparency for the text to store here. Values outside the "
"interval `[0, 1)` will be ignored. A value of e.g. 0.5 means 50% "
"transparency."
msgstr ""

#: ../../textwriter.rst:61 f59ab2bbc17b4321aea6cf43c4b8a9e5
msgid ""
"the color of the text. All colors are specified as floats *0 <= color <= "
"1*. A single float represents some gray level, a sequence implies the "
"colorspace via its length."
msgstr ""

#: ../../textwriter.rst:66 0aa7cfbe24154599941c068ba2a7cc37
msgid "*Changed in v1.18.9*"
msgstr ""

#: ../../textwriter.rst:67 ../../textwriter.rst:98
#: d8339689d3df40f6a8703a57c9871daa f235b2acca7b4c719dc3680a7ce9a282
msgid "*Changed in v1.18.15*"
msgstr ""

#: ../../textwriter.rst:69 bc563516b08f46dbbaea60b6ad663590
msgid "Add some new text in horizontal writing."
msgstr ""

#: ../../textwriter.rst:71 ../../textwriter.rst:102
#: b688a8bc51604de9bb874b2bc0e6f353 c900f4c8df124d98b735b15b2d4449e7
msgid "start position of the text, the bottom left point of the first character."
msgstr ""

#: ../../textwriter.rst:72 909fd10f858c44cabdada0b80327f18e
msgid ""
"a string of arbitrary length. It will be written starting at position "
"\"pos\"."
msgstr ""

#: ../../textwriter.rst:73 ../../textwriter.rst:104
#: e04b82af179d4b56bbae0c0ef6cc85f6 efce4c9d931d4aa7bdcdc695dc300b4c
msgid "a :ref:`Font`. If omitted, `fitz.Font(\"helv\")` will be used."
msgstr ""

#: ../../textwriter.rst:74 8d1330eeb4a14ecbbc77dc259bcdd3ef
msgid "the :data:`fontsize`, a positive number, default 11."
msgstr ""

#: ../../textwriter.rst:75 ../../textwriter.rst:106
#: 11fab8a9ff614a45915f31a73cc44a7b 7677f6c56c04498ba87ea923b826a585
msgid ""
"the language to use, e.g. \"en\" for English. Meaningful values should be"
" compliant with the ISO 639 standards 1, 2, 3 or 5. Reserved for future "
"use: currently has no effect as far as we know."
msgstr ""

#: ../../textwriter.rst:76 254e88b841134578bb0cb622d066fd1b
msgid ""
"*(New in v1.18.9)* whether the text should be written from right to left."
" Applicable for languages like Arabian or Hebrew. Default is *False*. If "
"*True*, any Latin parts within the text will automatically converted. "
"There are no other consequences, i.e. :attr:`TextWriter.last_point` will "
"still be the rightmost character, and there neither is any alignment "
"taking place. Hence you may want to use :meth:`TextWriter.fill_textbox` "
"instead."
msgstr ""

#: ../../textwriter.rst:77 18b86a77acd54bc9913d36bf9bc8ad8b
msgid ""
"*(New in v1.18.15)* look for the character's Small Capital version in the"
" font. If present, take that value instead. Otherwise the original "
"character (this font or the fallback font) will be taken. The fallback "
"font will never return small caps. For example, this snippet::  >>> doc ="
" fitz.open() >>> page = doc.new_page() >>> text = \"PyMuPDF: the Python "
"bindings for MuPDF\" >>> font = fitz.Font(\"figo\")  # choose a font with"
" small caps >>> tw = fitz.TextWriter(page.rect) >>> tw.append((50,100), "
"text, font=font, small_caps=True) >>> tw.write_text(page) >>> "
"doc.ez_save(\"x.pdf\")  will produce this PDF text:  .. image:: images"
"/img-smallcaps.*"
msgstr ""

#: ../../textwriter.rst:77 9731110ee86b4b72b3bee39d068552d1
msgid ""
"*(New in v1.18.15)* look for the character's Small Capital version in the"
" font. If present, take that value instead. Otherwise the original "
"character (this font or the fallback font) will be taken. The fallback "
"font will never return small caps. For example, this snippet::"
msgstr ""

#: ../../textwriter.rst:88 08a557527a3849d99a4d82920b269007
msgid "will produce this PDF text:"
msgstr ""

#: ../../textwriter.rst a550b9cf8c014f8eb576a1148fdcaaa4
#: de6398d8c40344e6b613a80ef1bd2129 eb8fe54e097a48278bfd1dce772f1821
msgid "Returns"
msgstr ""

#: ../../textwriter.rst:93 ../../textwriter.rst:109
#: 26b98e3c31644db4a68d0e5a7d9a9f38 821aa7dd5a03411eb254f375b21a4c01
msgid ""
":attr:`text_rect` and :attr:`last_point`. *(Changed in v1.18.0:)* Raises "
"an exception for an unsupported font -- checked via "
":attr:`Font.is_writable`."
msgstr ""

#: ../../textwriter.rst:100 17b885a357304d23acb5388eec40375c
msgid "Add some new text in vertical, top-to-bottom writing."
msgstr ""

#: ../../textwriter.rst:103 2072d1ae10b34d95996f253142a7dd89
msgid "a string. It will be written starting at position \"pos\"."
msgstr ""

#: ../../textwriter.rst:105 38acc1d4a39f4187bdecddf934baa6f7
msgid "the :data:`fontsize`, a positive float, default 11."
msgstr ""

#: ../../textwriter.rst:107 ../../textwriter.rst:131
#: 5d47be3067da45518edc66c96badff79 73ad5ad60eab49f58da0929bf41efcb5
msgid "*(New in v1.18.15)* see :meth:`append`."
msgstr ""

#: ../../textwriter.rst:113 d8836905ae564b498de2de979fcba749
msgid ""
"Changed in 1.17.3: New parameter `pos` to specify where to start writing "
"within rectangle."
msgstr ""

#: ../../textwriter.rst:114 413bd015f562428ab12b5e9164c94052
msgid ""
"Changed in v1.18.9: Return list of lines which do not fit in rectangle. "
"Support writing right-to-left (e.g. Arabian, Hebrew)."
msgstr ""

#: ../../textwriter.rst:115 46a26e4e6a1641d995373be684207e70
msgid "Changed in v1.18.15: Prefer small caps if supported by the font."
msgstr ""

#: ../../textwriter.rst:117 90e978c6c61b433a8f29917a87a653cb
msgid ""
"Fill a given rectangle with text in horizontal writing mode. This is a "
"convenience method to use as an alternative for :meth:`append`."
msgstr ""

#: ../../textwriter.rst:119 a250c20142894a9eabf84dc6526514f4
msgid "the area to fill. No part of the text will appear outside of this."
msgstr ""

#: ../../textwriter.rst:120 e51196994f2e4b4ea4032398d9ee162a
msgid ""
"the text. Can be specified as a (UTF-8) string or a list / tuple of "
"strings. A string will first be converted to a list using *splitlines()*."
" Every list item will begin on a new line (forced line breaks)."
msgstr ""

#: ../../textwriter.rst:121 c766faeddd80459b9142e652512aab00
msgid ""
"*(new in v1.17.3)* start storing at this point. Default is a point near "
"rectangle top-left."
msgstr ""

#: ../../textwriter.rst:122 18052762be6b42b8af837c5ea119cac8
msgid "the :ref:`Font`, default `fitz.Font(\"helv\")`."
msgstr ""

#: ../../textwriter.rst:123 793e6f1b615f40f1b0459944ad008bc9
msgid "the :data:`fontsize`."
msgstr ""

#: ../../textwriter.rst:124 cf22d7321338429ab826238eaa9740a9
msgid ""
"text alignment. Use one of TEXT_ALIGN_LEFT, TEXT_ALIGN_CENTER, "
"TEXT_ALIGN_RIGHT or TEXT_ALIGN_JUSTIFY."
msgstr ""

#: ../../textwriter.rst:125 d1e588b92de64c4c9438425a68b67590
msgid ""
"*(New in v1.18.9)* whether the text should be written from right to left."
" Applicable for languages like Arabian or Hebrew. Default is *False*. If "
"*True*, any Latin parts are automatically reverted. You must still set "
"the alignment (if you want right alignment), it does not happen "
"automatically -- the other alignment options remain available as well."
msgstr ""

#: ../../textwriter.rst:126 f1a1ea94d82843258cba9bedca33f587
msgid ""
"on text overflow do nothing, warn, or raise an exception. Overflow text "
"will never be written. **Changed in v1.18.9:**  * Default is *None*. * "
"The list of overflow lines will be returned."
msgstr ""

#: ../../textwriter.rst:126 3ea410f6b72047fb8081f9c2958386d6
msgid ""
"on text overflow do nothing, warn, or raise an exception. Overflow text "
"will never be written. **Changed in v1.18.9:**"
msgstr ""

#: ../../textwriter.rst:128 d43836b6be8740e18bca0eef928c0c59
msgid "Default is *None*."
msgstr ""

#: ../../textwriter.rst:129 f0dbaaa61f104ee0aca13d03d95d9f57
msgid "The list of overflow lines will be returned."
msgstr ""

#: ../../textwriter.rst 257385ec113141ed9fbfa6fe8e11462f
#: 2a911921a9e44cabae14592b9203f137 78c0fab814024e489337e562ae095644
#: 7e68896920a44851b106798e0449df4a a5ad9f78a5dc4084b624b90a1f77f315
#: b2788593ebad46b3b1be4abe2ed65a4a
msgid "Return type"
msgstr ""

#: ../../textwriter.rst:134 334912387e7644d2bbecd5af781e7311
msgid ""
"*New in v1.18.9* -- List of lines that did not fit in the rectangle. Each"
" item is a tuple `(text, length)` containing a string and its length (on "
"the page)."
msgstr ""

#: ../../textwriter.rst:136 0c4299be07b84b29b2bd2af10bec6a27
msgid ""
"Use these methods as often as is required -- there is no technical limit "
"(except memory constraints of your system). You can also mix "
":meth:`append` and text boxes and have multiple of both. Text positioning"
" is exclusively controlled by the insertion point. Therefore there is no "
"need to adhere to any order. *(Changed in v1.18.0:)* Raise an exception "
"for an unsupported font -- checked via :attr:`Font.is_writable`."
msgstr ""

#: ../../textwriter.rst:141 0b9689ff9ea044c3b04a698e1cac1bf5
msgid ""
"Write the TextWriter text to a page, which is the only mandatory "
"parameter. The other parameters can be used to temporarily override the "
"values used when the TextWriter was created."
msgstr ""

#: ../../textwriter.rst:143 a3326da673e24aa0aad0ecbccf220b1a
msgid "write to this :ref:`Page`."
msgstr ""

#: ../../textwriter.rst:144 ../../textwriter.rst:145
#: 40c47832a06043e5b71038f3056ea18a bf10008be36248d1bc3a12cbd61184a9
msgid "override the value of the TextWriter for this output."
msgstr ""

#: ../../textwriter.rst:146 3187a8a81ac44bcea1b60384621e379f
msgid ""
"modify the text appearance by applying a matrix to it. If provided, this "
"must be a sequence *(fixpoint, matrix)* with a point-like *fixpoint* and "
"a matrix-like *matrix*. A typical example is rotating the text around "
"*fixpoint*."
msgstr ""

#: ../../textwriter.rst:147 7ea7360918974a709ccb4b27df64cde8
msgid "put in foreground (default) or background."
msgstr ""

#: ../../textwriter.rst:148 42c8a6df7aef467eb6de04e5b09ccad4
msgid "*(new in v1.18.4)* the :data:`xref` of an :data:`OCG` or :data:`OCMD`."
msgstr ""

#: ../../textwriter.rst:149 dc10e1aa6ccc4c61b4033bf8a17016ef
msgid ""
"The PDF `Tr` operator value. Values: 0 (default), 1, 2, 3 (invisible).  "
".. image:: images/img-rendermode.*"
msgstr ""

#: ../../textwriter.rst:149 172970ebd5084925aabd05626dac65c1
msgid "The PDF `Tr` operator value. Values: 0 (default), 1, 2, 3 (invisible)."
msgstr ""

#: ../../textwriter.rst:156 fe80e430912c40179d7017cc9fd8bfee
msgid "The area currently occupied."
msgstr ""

#: ../../textwriter.rst:158 ../../textwriter.rst:182
#: 3362a339b8b14692892d983e713424ff a35585fef4534c3ea67737f47bb23b0e
msgid ":ref:`Rect`"
msgstr ""

#: ../../textwriter.rst:162 ea49169d4aad4dfa83d99d0f62feb8dd
msgid ""
"The \"cursor position\" -- a :ref:`Point` -- after the last written "
"character (its bottom-right)."
msgstr ""

#: ../../textwriter.rst:164 0e926760fcb945b38c162809fd0b60c7
msgid ":ref:`Point`"
msgstr ""

#: ../../textwriter.rst:168 4ed7548ca02648cb84c46fee32b45890
msgid "The text opacity (modifiable)."
msgstr ""

#: ../../textwriter.rst:174 cd8cb3e326734c90bfc096989120cde9
msgid "The text color (modifiable)."
msgstr ""

#: ../../textwriter.rst:180 cd036c6e25fa46149b6d10ce40f617bc
msgid ""
"The page rectangle for which this TextWriter was created. Must not be "
"modified."
msgstr ""

#: ../../textwriter.rst:185 0ec33e55788a437a8111d70f619b313c
msgid ""
"To see some demo scripts dealing with TextWriter, have a look at `this "
"<https://github.com/pymupdf/PyMuPDF-Utilities/tree/master/textwriter>`_ "
"repository."
msgstr ""

#: ../../textwriter.rst:187 1fc7736860c04f91814252edf1578d7a
msgid "Opacity and color apply to **all the text** in this object."
msgstr ""

#: ../../textwriter.rst:188 3274b569e4ee4ae69ec49080af7f253b
msgid ""
"If you need different colors / transparency, you must create a separate "
"TextWriter. Whenever you determine the color should change, simply append"
" the text to the respective TextWriter using the previously returned "
":attr:`last_point` as position for the new text span."
msgstr ""

#: ../../textwriter.rst:189 a0af457a35514521af3629fb568b6d63
msgid ""
"Appending items or text boxes can occur in arbitrary order: only the "
"position parameter controls where text appears."
msgstr ""

#: ../../textwriter.rst:190 3e36b13851dd426caba3a920a6a4b76a
msgid ""
"Font and :data:`fontsize` can freely vary within the same TextWriter. "
"This can be used to let text with different properties appear on the same"
" displayed line: just specify *pos* accordingly, and e.g. set it to "
":attr:`last_point` of the previously added item."
msgstr ""

#: ../../textwriter.rst:191 7ff682f67e87462e9ab93489c060a585
msgid ""
"You can use the *pos* argument of :meth:`TextWriter.fill_textbox` to set "
"the position of the first text character. This allows filling the same "
"textbox with contents from different :ref:`TextWriter` objects, thus "
"allowing for multiple colors, opacities, etc."
msgstr ""

#: ../../textwriter.rst:192 9a9e6bc87bd84f98a4b829f2fddd9595
msgid ""
"MuPDF does not support all fonts with this feature, e.g. no Type3 fonts. "
"Starting with v1.18.0 this can be checked via the font attribute "
":attr:`Font.is_writable`. This attribute is also checked when using "
":ref:`TextWriter` methods."
msgstr ""

#: ../../footer.rst:-1 91142a4f9edf4ef98915fc17db0d71ee
msgid "Discord logo"
msgstr ""

#~ msgid ""
#~ "**Free font choice:** Each text span "
#~ "has its own font and fontsize. "
#~ "This lets you easily switch when "
#~ "composing a larger text."
#~ msgstr ""

#~ msgid "the fontsize, a positive number, default 11."
#~ msgstr ""

#~ msgid "the fontsize, a positive float, default 11."
#~ msgstr ""

#~ msgid "the fontsize."
#~ msgstr ""

#~ msgid ""
#~ "Font and fontsize can freely vary "
#~ "within the same TextWriter. This can "
#~ "be used to let text with different"
#~ " properties appear on the same "
#~ "displayed line: just specify *pos* "
#~ "accordingly, and e.g. set it to "
#~ ":attr:`last_point` of the previously added "
#~ "item."
#~ msgstr ""

