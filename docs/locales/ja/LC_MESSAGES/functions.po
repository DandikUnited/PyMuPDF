# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-28 14:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1
msgid "PyMuPDF is a high-performance Python library for data extraction, analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"

#: ../../header.rst:-1
msgid "PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"

#: ../../functions.rst:5 2575ce03a19b4714a8f57e7f6ae25fa3
msgid "Functions"
msgstr ""

#: ../../functions.rst:6 67d4f4309f114ce291681f9e1747aa30
msgid ""
"The following are miscellaneous functions and attributes on a fairly low-"
"level technical detail."
msgstr ""

#: ../../functions.rst:8 7249777c912f40a3857dbe7d6dc779ed
msgid ""
"Some functions provide detail access to PDF structures. Others are "
"stripped-down, high performance versions of other functions which provide"
" more information."
msgstr ""

#: ../../functions.rst:10 b52d7aa21e724fb4a4c452f88637a1f0
msgid "Yet others are handy, general-purpose utilities."
msgstr ""

#: ../../functions.rst:14 c43d3b09aa4442b09a665032e3af0fb2
msgid "**Function**"
msgstr ""

#: ../../functions.rst:14 d701b9d3115c4b2e8e2a80a408bd7c07
msgid "**Short Description**"
msgstr ""

#: ../../functions.rst:16 6774abccc55440debe574f1cc6eb5e73
msgid ":attr:`Annot.apn_bbox`"
msgstr ""

#: ../../functions.rst:16 5973b9e1d9af4d7295e767ab2da83acb
msgid "PDF only: bbox of the appearance object"
msgstr ""

#: ../../functions.rst:17 6c3ceeef2d784d92a2f2cb6f61b27c8a
msgid ":attr:`Annot.apn_matrix`"
msgstr ""

#: ../../functions.rst:17 417ecef30ae44335b908924c42916a18
msgid "PDF only: the matrix of the appearance object"
msgstr ""

#: ../../functions.rst:18 88e564822cda49acbb9c42547a7d6194
msgid ":attr:`Page.is_wrapped`"
msgstr ""

#: ../../functions.rst:18 a8c72216a6be4198939e72ab3f3cbd92
msgid "check whether contents wrapping is present"
msgstr ""

#: ../../functions.rst:19 cee918f9d4e84138b7ffb1cea9683d91
msgid ":meth:`adobe_glyph_names`"
msgstr ""

#: ../../functions.rst:19 e937b760ae03444c82845704aa2c938f
msgid "list of glyph names defined in **Adobe Glyph List**"
msgstr ""

#: ../../functions.rst:20 252a45ecbf774cdcb2417829a0ccbb4d
msgid ":meth:`adobe_glyph_unicodes`"
msgstr ""

#: ../../functions.rst:20 8a5b3191c6bc4a7091d57a4ca9e95db6
msgid "list of unicodes defined in **Adobe Glyph List**"
msgstr ""

#: ../../functions.rst:21 96f79e41ade441d4b1b0b19fee553d5b
msgid ":meth:`Annot.clean_contents`"
msgstr ""

#: ../../functions.rst:21 0633a104632343f9a692ec93a25a855d
msgid "PDF only: clean the annot's :data:`contents` object"
msgstr ""

#: ../../functions.rst:22 9e43781e0b01489db0bacda94b9b3868
msgid ":meth:`Annot.set_apn_bbox`"
msgstr ""

#: ../../functions.rst:22 0c2e13ad426d4a19896a4bba530620e0
msgid "PDF only: set the bbox of the appearance object"
msgstr ""

#: ../../functions.rst:23 5fbd7724c8a94e64be7b9ce2e5e08665
msgid ":meth:`Annot.set_apn_matrix`"
msgstr ""

#: ../../functions.rst:23 ca3bf9f627d646dbab8bbcbc07b60593
msgid "PDF only: set the matrix of the appearance object"
msgstr ""

#: ../../functions.rst:24 b6703a5832164ac6bf2ec9832bb501ef
msgid ":meth:`ConversionHeader`"
msgstr ""

#: ../../functions.rst:24 72d8c91424bb4cacaf007fef511cb6fa
msgid "return header string for *get_text* methods"
msgstr ""

#: ../../functions.rst:25 5dae82417f1c45ee808cb52c046d909a
msgid ":meth:`ConversionTrailer`"
msgstr ""

#: ../../functions.rst:25 79549655470a49f39a98383248034e4f
msgid "return trailer string for *get_text* methods"
msgstr ""

#: ../../functions.rst:26 663e274431954dd8a375735fe7fd9f0d
msgid ":meth:`Document.del_xml_metadata`"
msgstr ""

#: ../../functions.rst:26 45473306230f4742a3d329fa30cda313
msgid "PDF only: remove XML metadata"
msgstr ""

#: ../../functions.rst:27 40327650665b4311a2402ea6f31296d7
msgid ":meth:`Document.get_char_widths`"
msgstr ""

#: ../../functions.rst:27 8aa702020ec648d89ea0045ac665ea18
msgid "PDF only: return a list of glyph widths of a font"
msgstr ""

#: ../../functions.rst:28 1dbb6b9b19c847eda4d91e6ea37ae209
msgid ":meth:`Document.get_new_xref`"
msgstr ""

#: ../../functions.rst:28 3479acc1f1134ddbb2593dd2d53c4aec
msgid "PDF only: create and return a new :data:`xref` entry"
msgstr ""

#: ../../functions.rst:29 95987c6ea6954554bfc116dfa358d7f2
msgid ":meth:`Document.is_stream`"
msgstr ""

#: ../../functions.rst:29 0d51bfe3030c4825bb42e3eab9b8a8e6
msgid "PDF only: check whether an :data:`xref` is a stream object"
msgstr ""

#: ../../functions.rst:30 3398a6c90c5c4fb09c7d0fb069ab2ea9
msgid ":meth:`Document.xml_metadata_xref`"
msgstr ""

#: ../../functions.rst:30 86077c3657db493e831ad06a5bf27309
msgid "PDF only: return XML metadata :data:`xref` number"
msgstr ""

#: ../../functions.rst:31 2dc9e386c29c4e4d909ccb1800f1fd84
msgid ":meth:`Document.xref_length`"
msgstr ""

#: ../../functions.rst:31 e1138b15639d4074baaeee90722b9200
msgid "PDF only: return length of :data:`xref` table"
msgstr ""

#: ../../functions.rst:32 e12fba62336f4e5880052812412e6e91
msgid ":meth:`EMPTY_IRECT`"
msgstr ""

#: ../../functions.rst:32 ../../functions.rst:34
#: 668204fb0b484443a8545560224a5d1d 6d1e69a1552840edaae509333e2c1a93
msgid "return the (standard) empty / invalid rectangle"
msgstr ""

#: ../../functions.rst:33 9b09b7fc5ef84df9a2ced53ee14b531d
msgid ":meth:`EMPTY_QUAD`"
msgstr ""

#: ../../functions.rst:33 fd4c6fc447834a23a898e41802c21994
msgid "return the (standard) empty / invalid quad"
msgstr ""

#: ../../functions.rst:34 bce057c670954534b5cc54940a85a199
msgid ":meth:`EMPTY_RECT`"
msgstr ""

#: ../../functions.rst:35 7e8e1198bbb448139afee01e22083e25
msgid ":meth:`get_pdf_now`"
msgstr ""

#: ../../functions.rst:35 a4e1cdd785274350a740b13faa05202c
msgid "return the current timestamp in PDF format"
msgstr ""

#: ../../functions.rst:36 b5c1a5154e4f4cccb23f5eb801fc8455
msgid ":meth:`get_pdf_str`"
msgstr ""

#: ../../functions.rst:36 dc304cd20bca480580c8be996c18e328
msgid "return PDF-compatible string"
msgstr ""

#: ../../functions.rst:37 fea434dc6a6240759b0bb1d6bc403638
msgid ":meth:`get_text_length`"
msgstr ""

#: ../../functions.rst:37 493455f9ef76489d89ba3fd566c41ff8
msgid "return string length for a given font & :data:`fontsize`"
msgstr ""

#: ../../functions.rst:38 49774bedd4ba4ff59b739018b5652ddd
msgid ":meth:`glyph_name_to_unicode`"
msgstr ""

#: ../../functions.rst:38 1abc18e4685940458f78b7d011f8fdef
msgid "return unicode from a glyph name"
msgstr ""

#: ../../functions.rst:39 94148d0ae4c245da8727c0f859709a47
msgid ":meth:`image_profile`"
msgstr ""

#: ../../functions.rst:39 546e7098b6d944c2a98bcae136486e30
msgid "return a dictionary of basic image properties"
msgstr ""

#: ../../functions.rst:40 4e15c8de89094190b6719b9d98a90b4c
msgid ":meth:`INFINITE_IRECT`"
msgstr ""

#: ../../functions.rst:40 ../../functions.rst:42
#: 1630a1b42fe84974a58d78f8de81fefe 30a5d062992a41fdb09eafc18722fb1f
msgid "return the (only existing) infinite rectangle"
msgstr ""

#: ../../functions.rst:41 c54152f1d96c4ff381002e5b3f4e61ad
msgid ":meth:`INFINITE_QUAD`"
msgstr ""

#: ../../functions.rst:41 62747086f7934cf7a357cbddf1af6afe
msgid "return the (only existing) infinite quad"
msgstr ""

#: ../../functions.rst:42 aed548e9cb674a25911843ad788ac086
msgid ":meth:`INFINITE_RECT`"
msgstr ""

#: ../../functions.rst:43 78a198af8f444311b9d831c75136b4ec
msgid ":meth:`make_table`"
msgstr ""

#: ../../functions.rst:43 58763c7317ad420e9009604b81837b79
msgid "split rectangle in sub-rectangles"
msgstr ""

#: ../../functions.rst:44 886ddb64631b4b1d9777c337d9960679
msgid ":meth:`Page.clean_contents`"
msgstr ""

#: ../../functions.rst:44 661a31564fd84f46bbd600d8f8a1d0e4
msgid "PDF only: clean the page's :data:`contents` objects"
msgstr ""

#: ../../functions.rst:45 acd4b1a8cbb94a2f9f0c320d4691fb54
msgid ":meth:`Page.get_bboxlog`"
msgstr ""

#: ../../functions.rst:45 ae88359a9a2b4bb9b611ff0c768e3c48
msgid "list of rectangles that envelop text, drawing or image objects"
msgstr ""

#: ../../functions.rst:46 76715e09b3164db8a96d1a7de5cbd229
msgid ":meth:`Page.get_contents`"
msgstr ""

#: ../../functions.rst:46 425bfff5cf0749a19ff2f5b278abd0cc
msgid "PDF only: return a list of content :data:`xref` numbers"
msgstr ""

#: ../../functions.rst:47 de0b7ac116874bbeac8dc12966a8e42b
msgid ":meth:`Page.get_displaylist`"
msgstr ""

#: ../../functions.rst:47 5b44231124b443538b19159ba2ed6ea1
msgid "create the page's display list"
msgstr ""

#: ../../functions.rst:48 4347886cab134af4bcb97b88e68bd3be
msgid ":meth:`Page.get_text_blocks`"
msgstr ""

#: ../../functions.rst:48 2922a3e9ecb1450f95f3919bace8467e
msgid "extract text blocks as a Python list"
msgstr ""

#: ../../functions.rst:49 8bbe217aaaa749778050d1be2219b303
msgid ":meth:`Page.get_text_words`"
msgstr ""

#: ../../functions.rst:49 6304435aa64a4efe8018780000988354
msgid "extract text words as a Python list"
msgstr ""

#: ../../functions.rst:50 e557537c3cea4a4ba20bc39f5e6f426a
msgid ":meth:`Page.get_texttrace`"
msgstr ""

#: ../../functions.rst:50 a4a781ff38ca4361a984d3438a37f3aa
msgid "low-level text information"
msgstr ""

#: ../../functions.rst:51 e1735c09c77f40adaabe924d9662df43
msgid ":meth:`Page.read_contents`"
msgstr ""

#: ../../functions.rst:51 e2d80f4ecedb4220b4899ad1cdfc8abe
msgid "PDF only: get complete, concatenated /Contents source"
msgstr ""

#: ../../functions.rst:52 bdf7af3878204a9094a59be6ff94b426
msgid ":meth:`Page.run`"
msgstr ""

#: ../../functions.rst:52 a82ee99364bc4c719888cdc875b416a9
msgid "run a page through a device"
msgstr ""

#: ../../functions.rst:53 6b35ef66cb8246e7a4e41f336593c57e
msgid ":meth:`Page.set_contents`"
msgstr ""

#: ../../functions.rst:53 c23258fbaac24557b42c66f177cc9783
msgid "PDF only: set page's :data:`contents` to some :data:`xref`"
msgstr ""

#: ../../functions.rst:54 4a51acceaee947068f03fbb7c5962ebb
msgid ":meth:`Page.wrap_contents`"
msgstr ""

#: ../../functions.rst:54 3597de0d33bc481196bfbc226888a48e
msgid "wrap contents with stacking commands"
msgstr ""

#: ../../functions.rst:55 f08676e00d434e18b7af79e4e7b566ae
msgid ":meth:`css_for_pymupdf_font`"
msgstr ""

#: ../../functions.rst:55 ce26f18ef7c54ff2b0c65f2033e5e751
msgid "create CSS source for a font in package pymupdf_fonts"
msgstr ""

#: ../../functions.rst:56 f2694eccc0c84ac291a7cb2988b9fbe3
msgid ":meth:`paper_rect`"
msgstr ""

#: ../../functions.rst:56 73177d7fef6f46e6b6c48998f151556d
msgid "return rectangle for a known paper format"
msgstr ""

#: ../../functions.rst:57 de180e9d2cad41cba2ad4eab4221519b
msgid ":meth:`paper_size`"
msgstr ""

#: ../../functions.rst:57 235670570e974e9ebcc8ab0ad2bb4a05
msgid "return width, height for a known paper format"
msgstr ""

#: ../../functions.rst:58 94964d2e867045c0b5761003ef0c1e3a
msgid ":meth:`paper_sizes`"
msgstr ""

#: ../../functions.rst:58 44082317a97948148d7c20c8e7c2e18b
msgid "dictionary of pre-defined paper formats"
msgstr ""

#: ../../functions.rst:59 7fd8c5f3d69b419889231c96bb466bc4
msgid ":meth:`planish_line`"
msgstr ""

#: ../../functions.rst:59 e4f9beb4a7184a07b98aa8790b954f08
msgid "matrix to map a line to the x-axis"
msgstr ""

#: ../../functions.rst:60 c433f0a0fef6488a88f64e2a619f87fe
msgid ":meth:`recover_char_quad`"
msgstr ""

#: ../../functions.rst:60 ab815f07118542bba06332a7b2d81527
msgid "compute the quad of a char (\"rawdict\")"
msgstr ""

#: ../../functions.rst:61 f2fa338253ac4e298c9f6a2556e219dc
msgid ":meth:`recover_line_quad`"
msgstr ""

#: ../../functions.rst:61 582a5106493249f8996b07d6d57a8022
msgid "compute the quad of a subset of line spans"
msgstr ""

#: ../../functions.rst:62 ../../functions.rst:63
#: 69d0b3bf89774deca89e53df9bd9b387 b4d932214f5f4f09af99cb9adf137973
msgid ":meth:`recover_quad`"
msgstr ""

#: ../../functions.rst:62 e28e333499c74cbc915ec498f977382d
msgid "compute the quad of a span (\"dict\", \"rawdict\")"
msgstr ""

#: ../../functions.rst:63 7aacaa88034a41d3b91dd40505d9d5b5
msgid "return the quad for a text span (\"dict\" / \"rawdict\")"
msgstr ""

#: ../../functions.rst:64 6861975ea10c427a953c95c486e02d57
msgid ":meth:`recover_span_quad`"
msgstr ""

#: ../../functions.rst:64 cee767ac23f4443386c08d51e707c7bb
msgid "compute the quad of a subset of span characters"
msgstr ""

#: ../../functions.rst:65 27bf0741bc554cada846c54105b7e5e7
msgid ":meth:`sRGB_to_pdf`"
msgstr ""

#: ../../functions.rst:65 4eb0039228984041ae2d5f9fd5aa83dc
msgid "return PDF RGB color tuple from an sRGB integer"
msgstr ""

#: ../../functions.rst:66 8e8ccb0aea804067bbb5281d3b660b9b
msgid ":meth:`sRGB_to_rgb`"
msgstr ""

#: ../../functions.rst:66 9f10c53d0fc94397834fa2cf35af6ca9
msgid "return (R, G, B) color tuple from an sRGB integer"
msgstr ""

#: ../../functions.rst:67 7658c584aaca48bcbe224f9b082e6011
msgid ":meth:`unicode_to_glyph_name`"
msgstr ""

#: ../../functions.rst:67 a014af8b643e4738b24beb33329c924d
msgid "return glyph name from a unicode"
msgstr ""

#: ../../functions.rst:68 86837a2a8a874dd7b49989010c8cd817
msgid ":meth:`get_tessdata`"
msgstr ""

#: ../../functions.rst:68 cf378c30fbde484fb0aa24796c1f8838
msgid "locates the language support of the Tesseract-OCR installation"
msgstr ""

#: ../../functions.rst:69 dee7340cc2de451480f65a882f379f2e
msgid ":attr:`fitz_fontdescriptors`"
msgstr ""

#: ../../functions.rst:69 a04df653160440859e6f31efb99b4e35
msgid "dictionary of available supplement fonts"
msgstr ""

#: ../../functions.rst:70 c239344fe66d4503ad9df9b696cc1671
msgid ":attr:`TESSDATA_PREFIX`"
msgstr ""

#: ../../functions.rst:70 ef72158687bd46199ef08da1e3766e4f
msgid "a copy of `os.environ[\"TESSDATA_PREFIX\"]`"
msgstr ""

#: ../../functions.rst:71 5b148b3220a241e28b84de6180cf162d
msgid ":attr:`pdfcolor`"
msgstr ""

#: ../../functions.rst:71 8d2a88df94d1496e9985fab12dcd25f6
msgid "dictionary of almost 500 RGB colors in PDF format."
msgstr ""

#: ../../functions.rst:76 60fc8597b62044ebbc685e90749d855f
msgid ""
"Convenience function to return width and height of a known paper format "
"code. These values are given in pixels for the standard resolution 72 "
"pixels = 1 inch."
msgstr ""

#: ../../functions.rst:78 359cd6352e954f258ee765ae47e756d3
msgid ""
"Currently defined formats include **'A0'** through **'A10'**, **'B0'** "
"through **'B10'**, **'C0'** through **'C10'**, **'Card-4x6'**, **'Card-"
"5x7'**, **'Commercial'**, **'Executive'**, **'Invoice'**, **'Ledger'**, "
"**'Legal'**, **'Legal-13'**, **'Letter'**, **'Monarch'** and **'Tabloid-"
"Extra'**, each in either portrait or landscape format."
msgstr ""

#: ../../functions.rst:80 2872929c79f34d18ac1bf8960d394835
msgid ""
"A format name must be supplied as a string (case **in** \\sensitive), "
"optionally suffixed with \"-L\" (landscape) or \"-P\" (portrait). No "
"suffix defaults to portrait."
msgstr ""

#: ../../functions.rst 1bb53e5fdfe24c0e9f0aa274187f2730
#: 52de4fe92b83450194ea4e4ff31fcf3d 5dcc26f5d88941ec9d9304701a30a4e3
#: 61f8bb6cdbb34437a3e51e99b41ba50e 684313d25ec74b8395cef6974b640a25
#: 6ab95721437a43178830912d6a008127 744cc1d4336a44ea896d80236c324af2
#: 7c4dbd4e26f94071a95c665fd063ffd9 7e1d7e9e93be486696d9bcb3a7b9b302
#: 8c3ddb2cec4045d28a5bce6ff2a8eee7 a695e88cc21f46ffa50d98d1860d45bd
#: afacf0c5ff93490da351bfb96e532b1b bbc8066e735045a1ad50286a7b0e9509
#: bc790572fa974991811923f7d92764e1 cf0578c22aa7432181d41eb33b850ec8
#: cf1481b8163747c691e2dde42100abda cf26877949804a3b8a2e439a88941e38
#: d743cc6fc75e41ac9e290439044a1822 df7d0328b8ec4d1393aff9c09bf083f3
#: e46157fe9f8445baa3c0d55bf4481a3e ef265758e10a4e6ab9e32b9197f8202a
#: f19de25d21c8417488412da7010fc45b fb3888986d75497e8e491b425504c6ab
msgid "Parameters"
msgstr ""

#: ../../functions.rst:82 10b4a0e241fc453d981acc23f57b49df
msgid ""
"any format name from above in upper or lower case, like *\"A4\"* or "
"*\"letter-l\"*."
msgstr ""

#: ../../functions.rst 0fe59533a61c4623a4bef523b50a4b47
#: 19b56ff7bc1a498bb5503d4aefb24c55 1d1d9b29f7504e11ab3ff1c058cb3db7
#: 31709e8e82b84dba887da3a2572c7fb7 34a515545aef4dac98466cd1947dc08c
#: 40719b63de9a4fe090cf495a176f8ece 4afc5c7a4855422b8250dd14f5d2e39a
#: 4d2927eeddab400b9397293464abbe93 543ece7cddec4f5bb5db0c762e30f6a7
#: 70060bd847f7447d9a63840b7bdf3105 7800e70b92ff44789faf80afbab679af
#: 83d5824a478448b4bd76162f157022b9 8511ccd034284ff880bb3a2916d6b6bc
#: 8654544d15a741ddaea8822dd571e892 967933b8639f4c7685e2f02074169318
#: ce40f7be59d046efa1c15953177e27dc d220050f11fb452fa6dcbb9c9165ed86
#: d6fb917852d64c99bd1f12ea2ee6592e e23f15af13c5432bbeb503294e3284d2
#: e440988c97a5489bb8c618e95dde34b9 ec5d14b11d654b4385f2161d95f9e4fa
#: f17f91789f284768bf3b670a56dc4792 fa4e1db90f2149c0b741be0d11026325
#: febbc4df3c544822958b5f66ae519038
msgid "Return type"
msgstr ""

#: ../../functions.rst 00c02d0b1b4c4b6ea196308b6fd65c01
#: 109cf008be654c9f9ccfa38932e85118 1d98930839a645a5a3a1c1ca7a18ef00
#: 39ffdc71dbf14eb7a33faf8abf1a67c2 411e63d77feb445098afbfe600c684af
#: 4210326473484d1d9d523a7617222db3 4e3020b5dac54a28a996c7349bcbe9ef
#: 4eea0d87294542ccb90aedf2dcf78e11 524385ab1fad418d84186751efb70aa6
#: 6aeb5637ee534e2eae234db6c54cec4f 6ef80ca288464759a9c312c9adcd162a
#: 72cac5d0b15341f28d9f9577df2166a4 7d7c63044edb438cab46830520958d0f
#: 845836fd3b414175b37410f264062982 89b48a5ad7c24c2d8a940ab4b6c2c99d
#: 89fd9ab53e42474bba0d7d17acd40850 8c565742d6bd47a5a0876b40ad93bacd
#: 923ca0efea374b5a97fead97eb7b151a 93e96939392e4d8b953095d708ec168b
#: a244ee35ee144cab961858b90cddf76a ace7495f2bc2457286a2b01f1d9bd3f6
#: b17c945b79694be592873254a1b14b8a d2cb6723c5544d5ba440a78e8d66ab68
#: d5ce17f8bfc34c59a3f3ca0496fb0b98 f15f1d0826aa4227bda365dbf6ab83d7
#: f34b06da0c7441bd8ac191ebb7d2bb33 fe49b1a3ba7446b2bc9be87caacdd2f8
msgid "Returns"
msgstr ""

#: ../../functions.rst:85 0b25dc7b888f4f7f9a01b96fdee8c177
msgid ""
"*(width, height)* of the paper format. For an unknown format *(-1, -1)* "
"is returned. Examples: *fitz.paper_size(\"A4\")* returns *(595, 842)* and"
" *fitz.paper_size(\"letter-l\")* delivers *(792, 612)*."
msgstr ""

#: ../../functions.rst:91 5d5abb88a0d1402c864243344f8d5848
msgid "Convenience function to return a :ref:`Rect` for a known paper format."
msgstr ""

#: ../../functions.rst:93 32f9eb1ba76a49b89a7548d335a9cec2
msgid "any format name supported by :meth:`paper_size`."
msgstr ""

#: ../../functions.rst:95 3634297336cd4c6abbc5c2da3ba9b4a2
msgid ":ref:`Rect`"
msgstr ""

#: ../../functions.rst:96 e80368c0f9024a29b6b97530d280b6d0
msgid "*fitz.Rect(0, 0, width, height)* with *width, height=fitz.paper_size(s)*."
msgstr ""

#: ../../functions.rst:107 ../../functions.rst:119 ../../functions.rst:246
#: 2499e203ceca4a80bda758b1cb0e4c69 5e03b1861fc74725b6d574a20e006703
#: ecc40d747e134bac998c530eee8c9992
msgid "*New in v1.17.4*"
msgstr ""

#: ../../functions.rst:109 6ccdb775041d489b9c9fabb737cad178
msgid ""
"Convenience function returning a PDF color triple (red, green, blue) for "
"a given sRGB color integer as it occurs in :meth:`Page.get_text` "
"dictionaries \"dict\" and \"rawdict\"."
msgstr ""

#: ../../functions.rst:111 ../../functions.rst:123
#: 5a2ba28164c14bf0a96723a392153c90 8e61bc5808f54b6eac9ca58d55cc59e0
msgid ""
"an integer of format RRGGBB, where each color component is an integer in "
"range(255)."
msgstr ""

#: ../../functions.rst:113 c07961de95db47bda30eeeb6fe4f545e
msgid ""
"a tuple (red, green, blue) with float items in interval *0 <= item <= 1* "
"representing the same color. Example `sRGB_to_pdf(0xff0000) = (1, 0, 0)` "
"(red)."
msgstr ""

#: ../../functions.rst:121 e8005e1987754a48978567f4c3eb5ebc
msgid ""
"Convenience function returning a color (red, green, blue) for a given "
"*sRGB* color integer."
msgstr ""

#: ../../functions.rst:125 f5be85f277c84b58aa86a2bad5b916e3
msgid ""
"a tuple (red, green, blue) with integer items in `range(256)` "
"representing the same color. Example `sRGB_to_pdf(0xff0000) = (255, 0, "
"0)` (red)."
msgstr ""

#: ../../functions.rst:131 ../../functions.rst:146 ../../functions.rst:161
#: ../../functions.rst:174 041241819a074ca4b105737b35d09bf0
#: 04fd0e51f1384f59b64ca7627c1af464 28b98bbf2c274fd89a671b4a32639a0e
#: 416f5b453c00423ab01f31cf7af43581
msgid "*New in v1.18.0*"
msgstr ""

#: ../../functions.rst:133 1304661bed9748f38e3aed22aac61cc8
msgid ""
"Return the unicode number of a glyph name based on the **Adobe Glyph "
"List**."
msgstr ""

#: ../../functions.rst:135 7186f81113a94aa2bdb1da2aeee54b79
msgid ""
"the name of some glyph. The function is based on the `Adobe Glyph List "
"<https://github.com/adobe-type-tools/agl-"
"aglfn/blob/master/glyphlist.txt>`_."
msgstr ""

#: ../../functions.rst:138 55d718f582a44cc980ae4a31170eb079
msgid "the unicode. Invalid *name* entries return `0xfffd (65533)`."
msgstr ""

#: ../../functions.rst:140 ../../functions.rst:168 ../../functions.rst:181
#: 587454fe7e6e42379676c19f78673dbd d5211e21e903409d9515ac86393ecf63
#: e5eba7b422224d869c9f3ba610ca7470
msgid ""
"A similar functionality is provided by package `fontTools "
"<https://pypi.org/project/fonttools/>`_ in its *agl* sub-package."
msgstr ""

#: ../../functions.rst:148 776f6eed5f7449a9a6ff3607a3c59ceb
msgid ""
"Return the glyph name of a unicode number, based on the **Adobe Glyph "
"List**."
msgstr ""

#: ../../functions.rst:150 81ca7afe6a8445129f2a270d7ae2416e
#: 9836af918552400085d93d17ded7ea4d
msgid ""
"the unicode given by e.g. `ord(\"ß\")`. The function is based on the "
"`Adobe Glyph List <https://github.com/adobe-type-tools/agl-"
"aglfn/blob/master/glyphlist.txt>`_."
msgstr ""

#: ../../functions.rst:153 e53989b1d4f1450691aab4911607c4c3
msgid ""
"the glyph name. E.g. `fitz.unicode_to_glyph_name(ord(\"Ä\"))` returns "
"`'Adieresis'`."
msgstr ""

#: ../../functions.rst:155 77d4b015103f484497bf8d10ce7bbcc1
msgid ""
"A similar functionality is provided by package `fontTools "
"<https://pypi.org/project/fonttools/>`_: in its *agl* sub-package."
msgstr ""

#: ../../functions.rst:163 403717410f284a91805b385d8d6b2f03
msgid "Return a list of glyph names defined in the **Adobe Glyph List**."
msgstr ""

#: ../../functions.rst:166 fabbadbea11b4fa6abc0e92ec883ba45
msgid "list of strings."
msgstr ""

#: ../../functions.rst:176 b08f7cc6d1f94c37b6a90dc045c7b595
msgid ""
"Return a list of unicodes for there exists a glyph name in the **Adobe "
"Glyph List**."
msgstr ""

#: ../../functions.rst:179 d5859ebd27b143b5b39b3ba18df4fd92
msgid "list of integers."
msgstr ""

#: ../../functions.rst:187 c24362baa03c4a09a86a19115f6338c2
msgid "*New in v1.21.0*"
msgstr ""

#: ../../functions.rst:189 43d5bed8168349109dae95edb8fa91b8
msgid "**Utility function for use with \"Story\" applications.**"
msgstr ""

#: ../../functions.rst:191 948511a50a7b4488baff85dd709cc344
msgid ""
"Create CSS `@font-face` items for the given fontcode in pymupdf-fonts. "
"Creates a CSS font-family for all fonts starting with string "
"\"fontcode\"."
msgstr ""

#: ../../functions.rst:193 9fc81ff41fd646bb8fa09dee88c9cf32
msgid ""
"The font naming convention in package pymupdf-fonts is \"fontcode<sf>\", "
"where the suffix \"sf\" is one of \"\" (empty), \"it\"/\"i\", "
"\"bo\"/\"b\" or \"bi\". These suffixes thus represent the regular, "
"italic, bold or bold-italic variants of that font."
msgstr ""

#: ../../functions.rst:195 957b741fd4d743d587b7c92afb083e21
msgid "For example, font code \"notos\" refers to fonts"
msgstr ""

#: ../../functions.rst:197 a3d27b74568b4f5895e24825114d6ae5
msgid "\"notos\" - \"Noto Sans Regular\""
msgstr ""

#: ../../functions.rst:198 d7db859c4a564bf6a9fe7ee3bf07d941
msgid "\"notosit\" - \"Noto Sans Italic\""
msgstr ""

#: ../../functions.rst:199 49b7f8fc561b4b33bec04fda5dbc3c0d
msgid "\"notosbo\" - \"Noto Sans Bold\""
msgstr ""

#: ../../functions.rst:200 28762e9175d84661beb1a97f546cc769
msgid "\"notosbi\" - \"Noto Sans Bold Italic\""
msgstr ""

#: ../../functions.rst:202 c87284b121d44a848a2695a94f1d499d
msgid ""
"The function creates (up to) four CSS `@font-face` definitions and "
"collectively assigns the `font-family` name \"notos\" to them (or the "
"\"name\" value if provided). Associated font buffers are placed / added "
"to the provided archive."
msgstr ""

#: ../../functions.rst:204 546155222da2468390b3c7c963566497
msgid ""
"To use the font in the Python API for :ref:`Story`, execute "
"`.set_font(fontcode)` (or \"name\" if given). The correct font weight or "
"style will automatically be selected as required."
msgstr ""

#: ../../functions.rst:206 5af26686e167431ba6155e45e59c4128
msgid ""
"For example to replace the \"sans-serif\" HTML standard (i.e. Helvetica) "
"with the above \"notos\", execute the following. Whenever \"sans-serif\" "
"is used (whether explicitly or implicitly), the Noto Sans fonts will be "
"selected."
msgstr ""

#: ../../functions.rst:208 41c07d7cd2d74b37b36cc2f6ee04fb5a
msgid ""
"`CSS = fitz.css_for_pymupdf_font(\"notos\", name=\"sans-serif\", "
"archive=...)`"
msgstr ""

#: ../../functions.rst:210 49884f554a324635b65b1c096302b096
msgid "Expects and returns the CSS source, with the new CSS definitions appended."
msgstr ""

#: ../../functions.rst:212 6521079289974980be77c8c81b7ab933
msgid ""
"one of the font codes present in package `pymupdf-fonts "
"<https://pypi.org/project/pymupdf-fonts/>`_ (usually) representing the "
"regular version of the font family."
msgstr ""

#: ../../functions.rst:213 1d9e49c73107453db45b5fd6bcce2785
msgid ""
"any already existing CSS source, or `None`. The function will append its "
"new definitions to this. This is the string that **must be used** as "
"`user_css` when creating the :ref:`Story`."
msgstr ""

#: ../../functions.rst:214 c8869a48ffab4a82bbecd87ef9332cd5
msgid ""
":ref:`Archive`, **mandatory**. All font binaries (i.e. up to four) found "
"for \"fontcode\" will be added to the archive. This is the archive that "
"**must be used** as `archive` when creating the :ref:`Story`."
msgstr ""

#: ../../functions.rst:215 b995b86af1d147d9a455b74baaa860b7
msgid ""
"the name under which the \"fontcode\" fonts should be found. If omitted, "
"\"fontcode\" will be used."
msgstr ""

#: ../../functions.rst:218 8a283cb960fe4267aff8fffa7ff98dc7
msgid ""
"Modified CSS, with appended `@font-face` statements for each font variant"
" of fontcode. Fontbuffers associated with \"fontcode\" will have been "
"added to 'archive'. The function will automatically find up to 4 font "
"variants. All pymupdf-fonts (that are no special purpose like math or "
"music, etc.) have regular, bold, italic and bold-italic variants. To see "
"currently available font codes check `fitz.fitz_fontdescriptors.keys()`. "
"This will show something like `dict_keys(['cascadia', 'cascadiai', "
"'cascadiab', 'cascadiabi', 'figbo', 'figo', 'figbi', 'figit', 'fimbo', "
"'fimo', 'spacembo', 'spacembi', 'spacemit', 'spacemo', 'math', 'music', "
"'symbol1', 'symbol2', 'notosbo', 'notosbi', 'notosit', 'notos', 'ubuntu',"
" 'ubuntubo', 'ubuntubi', 'ubuntuit', 'ubuntm', 'ubuntmbo', 'ubuntmbi', "
"'ubuntmit'])`."
msgstr ""

#: ../../functions.rst:220 752ca4374f54406abbe5296ba0eebd39
msgid ""
"Here is a complete snippet for using the \"Noto Sans\" font instead of "
"\"Helvetica\"::"
msgstr ""

#: ../../functions.rst:231 727276171e6f43e380f25ff79fd66697
msgid "*New in v1.18.9*"
msgstr ""

#: ../../functions.rst:233 839e1cfcd8a849b9b06d1049ec4a1312
msgid ""
"Convenience function returning the quadrilateral enveloping the text of a"
" text span, as returned by :meth:`Page.get_text` using the \"dict\" or "
"\"rawdict\" options."
msgstr ""

#: ../../functions.rst:235 d22b2b429bc14e4ba57a52a9b294c5c9
msgid "the value `line[\"dir\"]` of the span's line."
msgstr ""

#: ../../functions.rst:236 7fc3b6196c564405bf7c99a9c36b31e7
msgid "the span sub-dictionary."
msgstr ""

#: ../../functions.rst:238 a5e9d49f925b435db0642d377c3723e2
msgid "the quadrilateral of the span's text."
msgstr ""

#: ../../functions.rst:248 4d539d34b2014862a2fb4f6bb3b51a87
msgid ""
"Convenience function to split a rectangle into sub-rectangles. Returns a "
"list of *rows* lists, each containing *cols* :ref:`Rect` items. Each sub-"
"rectangle can then be addressed by its row and column index."
msgstr ""

#: ../../functions.rst:250 de6a3b39ad914feaaee3327dc2f0edb9
msgid "the rectangle to split."
msgstr ""

#: ../../functions.rst:251 b8cbfe772f44478ea88fe77092abf9ed
msgid "the desired number of columns."
msgstr ""

#: ../../functions.rst:252 76629683515045008fa7d9957a0b0bd2
msgid "the desired number of rows."
msgstr ""

#: ../../functions.rst:253 2b977c5292f644c483d685fec88d67a1
msgid ""
"a list of :ref:`Rect` objects of equal size, whose union equals *rect*. "
"Here is the layout of a 3x4 table created by `cell = "
"fitz.make_table(rect, cols=4, rows=3)`:"
msgstr ""

#: ../../functions.rst:263 bf79bba2af8d4130befa5a879994707b
msgid "New in version 1.16.2)*"
msgstr ""

#: ../../functions.rst:265 4c8b83826c694d93bda62ea6ab1110ea
msgid ""
"Return a matrix which maps the line from p1 to p2 to the x-axis such that"
" p1 will become (0,0) and p2 a point with the same distance to (0,0)."
msgstr ""

#: ../../functions.rst:267 704a7cd1cf3144deb0c03a29ff0d29fe
msgid "starting point of the line."
msgstr ""

#: ../../functions.rst:268 091e5f9da7cc47c6a368ca8136ceb221
msgid "end point of the line."
msgstr ""

#: ../../functions.rst:270 facae60b4bb74ff68f5c6539914aea3f
msgid ":ref:`Matrix`"
msgstr ""

#: ../../functions.rst:271 c6dd1122925f479b913b1926ab10427c
msgid ""
"a matrix which combines a rotation and a translation::     >>> p1 = "
"fitz.Point(1, 1)    >>> p2 = fitz.Point(4, 5)    >>> abs(p2 - p1)  # "
"distance of points    5.0    >>> m = fitz.planish_line(p1, p2)    >>> p1 "
"* m    Point(0.0, 0.0)    >>> p2 * m    Point(5.0, "
"-5.960464477539063e-08)    >>> # distance of the resulting points    >>> "
"abs(p2 * m - p1 * m)    5.0   .. image:: images/img-planish.png    "
":scale: 40"
msgstr ""

#: ../../functions.rst:271 0f7c60c2de7449fba2343b4535ba06a6
msgid "a matrix which combines a rotation and a translation::"
msgstr ""

#: ../../functions.rst:295 102a641f84a44e2b8bdcdd53ffcc6400
msgid ""
"A dictionary of pre-defines paper formats. Used as basis for "
":meth:`paper_size`."
msgstr ""

#: ../../functions.rst:301 b476564c0b7247f0af5f94a814bcb8cb
msgid "New in v1.17.5"
msgstr ""

#: ../../functions.rst:303 b7d588e1b48e4bc1be8df269b285bd47
msgid ""
"A dictionary of usable fonts from repository `pymupdf-fonts "
"<https://pypi.org/project/pymupdf-fonts/>`_. Items are keyed by their "
"reserved fontname and provide information like this::"
msgstr ""

#: ../../functions.rst:319 998e4d84e89440cfb516784500021a23
msgid "If `pymupdf-fonts` is not installed, the dictionary is empty."
msgstr ""

#: ../../functions.rst:321 e369c187cbac4653906ad74a73a828b6
msgid ""
"The dictionary keys can be used to define a :ref:`Font` via e.g. `font = "
"fitz.Font(\"fimo\")` -- just like you can do it with the builtin fonts "
"\"Helvetica\" and friends."
msgstr ""

#: ../../functions.rst:327 4e746212cfcc483398bce443bb342d20
msgid "New in v1.19.4"
msgstr ""

#: ../../functions.rst:329 50e802f61b4141a29696a4b4aa2b4f93
msgid ""
"Copy of `os.environ[\"TESSDATA_PREFIX\"]` for convenient checking whether"
" there is integrated Tesseract OCR support."
msgstr ""

#: ../../functions.rst:331 2da824264b284d0bbacaaa20ed9788c6
msgid ""
"If this attribute is `None`, Tesseract-OCR is either not installed, or "
"the environment variable is not set to point to Tesseract's language "
"support folder."
msgstr ""

#: ../../functions.rst:333 9ce3085f76d24e66a28925ff5667faee
msgid ""
"This variable is now checked before OCR functions are tried. This "
"prevents verbose messages from MuPDF."
msgstr ""

#: ../../functions.rst:339 fce1ba176286416a8e82e9c4da64bf2b
msgid "New in v1.19.6"
msgstr ""

#: ../../functions.rst:341 7e74797796a64338a11de5ce622c92a5
msgid ""
"Contains about 500 RGB colors in PDF format with the color name as key. "
"To see what is there, you can obviously look at `fitz.pdfcolor.keys()`."
msgstr ""

#: ../../functions.rst:343 6beaeb8984f64a93a9f2e0b1ddb6246d
msgid "Examples:"
msgstr ""

#: ../../functions.rst:345 7a3ce46ea36c4c7ba62d97b108348a78
msgid "`fitz.pdfcolor[\"red\"] = (1.0, 0.0, 0.0)`"
msgstr ""

#: ../../functions.rst:346 bc8406a67cf64ca99bd41707acf1c30b
msgid ""
"`fitz.pdfcolor[\"skyblue\"] = (0.5294117647058824, 0.807843137254902, "
"0.9215686274509803)`"
msgstr ""

#: ../../functions.rst:347 26a34c969ef4452196cda6dbd1283efa
msgid ""
"`fitz.pdfcolor[\"wheat\"] = (0.9607843137254902, 0.8705882352941177, "
"0.7019607843137254)`"
msgstr ""

#: ../../functions.rst:353 4c382abeeed84911b9066d85d9eb9ab2
msgid ""
"Convenience function to return the current local timestamp in PDF "
"compatible format, e.g. *D:20170501121525-04'00'* for local datetime May "
"1, 2017, 12:15:25 in a timezone 4 hours westward of the UTC meridian."
msgstr ""

#: ../../functions.rst:356 338e0bede1ad4b21a06ed90e0ad0c635
msgid "current local PDF timestamp."
msgstr ""

#: ../../functions.rst:362 30b17982ff0b4addaa3939d33a0e67d5
msgid "New in version 1.14.7"
msgstr ""

#: ../../functions.rst:364 7326103c83174ef380e1123769e6c781
msgid ""
"Calculate the length of text on output with a given **builtin** font, "
":data:`fontsize` and encoding."
msgstr ""

#: ../../functions.rst:366 fcb3c1325c754e2fb8325be87a7f281c
msgid "the text string."
msgstr ""

#: ../../functions.rst:367 d2bc6f3c1d5d4430a9310d3efd5a9336
msgid ""
"the fontname. Must be one of either the :ref:`Base-14-Fonts` or the CJK "
"fonts, identified by their \"reserved\" fontnames (see table in "
":meth:`Page.insert_font`)."
msgstr ""

#: ../../functions.rst:368 09617d6d0f7b43e48644b44df00782a6
msgid "the :data:`fontsize`."
msgstr ""

#: ../../functions.rst:369 65c47f46e7a44e35abf8e32db7fe431f
msgid ""
"the encoding to use. Besides 0 = Latin, 1 = Greek and 2 = Cyrillic "
"(Russian) are available. Relevant for Base-14 fonts \"Helvetica\", "
"\"Courier\" and \"Times\" and their variants only. Make sure to use the "
"same value as in the corresponding text insertion."
msgstr ""

#: ../../functions.rst:371 7b45b9f3f9ce4321ab42ba44b8ef7524
msgid ""
"the length in points the string will have (e.g. when used in "
":meth:`Page.insert_text`)."
msgstr ""

#: ../../functions.rst:373 6409710598bb4340a5a97559a1059aa5
msgid ""
"This function will only do the calculation -- it won't insert font nor "
"text."
msgstr ""

#: ../../functions.rst:375 469a20bb0712415c8d19628c96d10721
msgid ""
"The :ref:`Font` class offers a similar method, :meth:`Font.text_length`, "
"which supports Base-14 fonts and any font with a character map (CMap, "
"Type 0 fonts)."
msgstr ""

#: ../../functions.rst:377 008e6498d33c4d438c2493913c8e0b92
msgid ""
"If you use this function to determine the required rectangle width for "
"the (:ref:`Page` or :ref:`Shape`) *insert_textbox* methods, be aware that"
" they calculate on a **by-character level**. Because of rounding effects,"
" this will mostly lead to a slightly larger number: "
"*sum([fitz.get_text_length(c) for c in text]) > "
"fitz.get_text_length(text)*. So either (1) do the same, or (2) use "
"something like *fitz.get_text_length(text + \"'\")* for your calculation."
msgstr ""

#: ../../functions.rst:383 5c791b80e8b245c39a7f15105037974a
msgid ""
"Make a PDF-compatible string: if the text contains code points *ord(c) > "
"255*, then it will be converted to UTF-16BE with BOM as a hexadecimal "
"character string enclosed in \"<>\" brackets like *<feff...>*. Otherwise,"
" it will return the string enclosed in (round) brackets, replacing any "
"characters outside the ASCII range with some special code. Also, every "
"\"(\", \")\" or backslash is escaped with a backslash."
msgstr ""

#: ../../functions.rst:385 aed4030d644d4269bbe0c86440892798
msgid "the object to convert"
msgstr ""

#: ../../functions.rst:388 c87889b4839d42b28a65c4bbc939cebf
msgid "PDF-compatible string enclosed in either *()* or *<>*."
msgstr ""

#: ../../functions.rst:394 518731d63c4c45ddbfcea979a03aead1
msgid "New in v1.16.7"
msgstr ""

#: ../../functions.rst:395 fb189b4d33f94231bb125756706b86f1
msgid ""
"Changed in v1.19.5: also return natural image orientation extracted from "
"EXIF data if present."
msgstr ""

#: ../../functions.rst:396 72e64e9456274464bb0a337acf872d4d
msgid ""
"Changed in v1.22.5: always return `None` in error cases instead of an "
"empty dictionary."
msgstr ""

#: ../../functions.rst:398 b00c81af29464ddf9d040436b7a97a78
msgid ""
"Show important properties of an image provided as a memory area. Its main"
" purpose is to avoid using other Python packages just to determine them."
msgstr ""

#: ../../functions.rst:400 d36ead2895194b82b0287bde41be01a2
msgid ""
"either an image in memory or an **opened** file. An image in memory may "
"be any of the formats `bytes`, `bytearray` or `io.BytesIO`."
msgstr ""

#: ../../functions.rst:403 eb1fdf3dd1fd42e8b9646a409baf52e9
msgid ""
"No exception is ever raised. In case of an error, `None` is returned. "
"Otherwise, there are the following items::     In [2]: "
"fitz.image_profile(open(\"nur-ruhig.jpg\", \"rb\").read())    Out[2]:    "
"{'width': 439,    'height': 501,    'orientation': 0,  # natural "
"orientation (from EXIF)    'transform': (1.0, 0.0, 0.0, 1.0, 0.0, 0.0),  "
"# orientation matrix    'xres': 96,    'yres': 96,    'colorspace': 3,"
"    'bpc': 8,    'ext': 'jpeg',    'cs-name': 'DeviceRGB'}  There is the "
"following relation to **Exif** information encoded in `orientation`, and "
"correspondingly in the `transform` matrix-like (quoted from MuPDF "
"documentation, *ccw* = counter-clockwise):     0. Undefined    1. 0 "
"degree ccw rotation. (Exif = 1)    2. 90 degree ccw rotation. (Exif = 8)"
"    3. 180 degree ccw rotation. (Exif = 3)    4. 270 degree ccw rotation."
" (Exif = 6)    5. flip on X. (Exif = 2)    6. flip on X, then rotate ccw "
"by 90 degrees. (Exif = 5)    7. flip on X, then rotate ccw by 180 "
"degrees. (Exif = 4)    8. flip on X, then rotate ccw by 270 degrees. "
"(Exif = 7)   .. note::     * For some \"exotic\" images (FAX encodings, "
"RAW formats and the like), this method will not work. You can however "
"still work with such images in PyMuPDF, e.g. by using "
":meth:`Document.extract_image` or create pixmaps via `Pixmap(doc, xref)`."
" These methods will automatically convert exotic images to the PNG format"
" before returning results.    * You can also get the properties of images"
" embedded in a PDF, via their :data:`xref`. In this case make sure to "
"extract the raw stream: `fitz.image_profile(doc.xref_stream_raw(xref))`."
"    * Images as returned by the image blocks of :meth:`Page.get_text` "
"using \"dict\" or \"rawdict\" options are also supported."
msgstr ""

#: ../../functions.rst:404 9fae0bc8dd014cde817b2d81a113a175
msgid ""
"No exception is ever raised. In case of an error, `None` is returned. "
"Otherwise, there are the following items::"
msgstr ""

#: ../../functions.rst:419 42734758f1ae43e1b3fc820ec31150be
msgid ""
"There is the following relation to **Exif** information encoded in "
"`orientation`, and correspondingly in the `transform` matrix-like (quoted"
" from MuPDF documentation, *ccw* = counter-clockwise):"
msgstr ""

#: ../../functions.rst:421 539579a70f414a649fd62c73a0d72a80
msgid "Undefined"
msgstr ""

#: ../../functions.rst:422 0cff770acc43432a829f0f58c390c924
msgid "0 degree ccw rotation. (Exif = 1)"
msgstr ""

#: ../../functions.rst:423 82f361ba62754d7ca2a1af35a9c04cbb
msgid "90 degree ccw rotation. (Exif = 8)"
msgstr ""

#: ../../functions.rst:424 c7012bd9fbcb4b34a9861b396f25d2bf
msgid "180 degree ccw rotation. (Exif = 3)"
msgstr ""

#: ../../functions.rst:425 6d58e758281449459fc46494d4d090b2
msgid "270 degree ccw rotation. (Exif = 6)"
msgstr ""

#: ../../functions.rst:426 248ef8e6fb3f4f32bbbad35c51fa9960
msgid "flip on X. (Exif = 2)"
msgstr ""

#: ../../functions.rst:427 d86c3b3721f14ee3878265694cb13785
msgid "flip on X, then rotate ccw by 90 degrees. (Exif = 5)"
msgstr ""

#: ../../functions.rst:428 7729bcd1b07646d38c41f11a124f5873
msgid "flip on X, then rotate ccw by 180 degrees. (Exif = 4)"
msgstr ""

#: ../../functions.rst:429 ef4d6ce33a38437ab205fa05a400da77
msgid "flip on X, then rotate ccw by 270 degrees. (Exif = 7)"
msgstr ""

#: ../../functions.rst:434 4829593122174df1bb7b7cd8ce38a3a1
msgid ""
"For some \"exotic\" images (FAX encodings, RAW formats and the like), "
"this method will not work. You can however still work with such images in"
" PyMuPDF, e.g. by using :meth:`Document.extract_image` or create pixmaps "
"via `Pixmap(doc, xref)`. These methods will automatically convert exotic "
"images to the PNG format before returning results."
msgstr ""

#: ../../functions.rst:435 020d5041215e412ba8e2954301d734a6
msgid ""
"You can also get the properties of images embedded in a PDF, via their "
":data:`xref`. In this case make sure to extract the raw stream: "
"`fitz.image_profile(doc.xref_stream_raw(xref))`."
msgstr ""

#: ../../functions.rst:436 201587b357f34df7b0b85df39dab57be
msgid ""
"Images as returned by the image blocks of :meth:`Page.get_text` using "
"\"dict\" or \"rawdict\" options are also supported."
msgstr ""

#: ../../functions.rst:443 15e2f6cbd980465da7a57e062f98e40b
msgid ""
"Return the header string required to make a valid document out of page "
"text outputs."
msgstr ""

#: ../../functions.rst:445 ../../functions.rst:457
#: 31f07b3723b74dfcbbd4c68935683653 3b0c13aeec3449f3baf1fac7bc0a1db2
msgid "type of document. Use the same as the output parameter of *get_text()*."
msgstr ""

#: ../../functions.rst:447 4d422317e5dd4651b5de0e6e1a62a123
msgid "optional arbitrary name to use in output types \"json\" and \"xml\"."
msgstr ""

#: ../../functions.rst:455 710c28ed513e40fdb7557498ec6ab662
msgid ""
"Return the trailer string required to make a valid document out of page "
"text outputs. See :meth:`Page.get_text` for an example."
msgstr ""

#: ../../functions.rst:465 af69e01d3ca64be78fa4f0a5f8e5d0f6
msgid ""
"Delete an object containing XML-based metadata from the PDF. (Py-) MuPDF "
"does not support XML-based metadata. Use this if you want to make sure "
"that the conventional metadata dictionary will be used exclusively. Many "
"thirdparty PDF programs insert their own metadata in XML format and thus "
"may override what you store in the conventional dictionary. This method "
"deletes any such reference, and the corresponding PDF object will be "
"deleted during next garbage collection of the file."
msgstr ""

#: ../../functions.rst:471 5b2f25fa96e045f68c762893fba8d281
msgid ""
"Return the XML-based metadata :data:`xref` of the PDF if present -- also "
"refer to :meth:`Document.del_xml_metadata`. You can use it to retrieve "
"the content via :meth:`Document.xref_stream` and then work with it using "
"some XML software."
msgstr ""

#: ../../functions.rst:474 eef0842b7e4e4b00abda568cc3b07e2b
msgid ":data:`xref` of PDF file level XML metadata -- or 0 if none exists."
msgstr ""

#: ../../functions.rst:480 1235b2ec63924ca88ae91eca68fe884f
msgid "Run a page through a device."
msgstr ""

#: ../../functions.rst:482 c3450f64cfb04587a7c14edbba61f2ad
msgid "Device, obtained from one of the :ref:`Device` constructors."
msgstr ""

#: ../../functions.rst:485 27df7e200f334a63b3fd873175256d53
msgid ""
"Transformation to apply to the page. Set it to :ref:`Identity` if no "
"transformation is desired."
msgstr ""

#: ../../functions.rst:492 a928a104cc3d47f78319dfb71e02e1e7
msgid "New in v1.19.0"
msgstr ""

#: ../../functions.rst:493 86feb3d086a54fa79c641291285e7800
msgid ""
"Changed in v1.22.0: optionally also return the OCG name applicable to the"
" boundary box."
msgstr ""

#: ../../functions.rst:495 3c2afdedc89b464c98b59473f3ea1d8f
msgid ""
"a list of rectangles that envelop text, image or drawing objects. Each "
"item is a tuple `(type, (x0, y0, x1, y1))` where the second tuple "
"consists of rectangle coordinates, and *type* is one of the following "
"values. If `layers=True`, there is a third item containing the OCG name "
"or `None`: `(type, (x0, y0, x1, y1), None)`.  * `\"fill-text\"` -- normal"
" text (painted without character borders) * `\"stroke-text\"` -- text "
"showing character borders only * `\"ignore-text\"` -- text that should "
"not be displayed (e.g. as used by OCR text layers) * `\"fill-path\"` -- "
"drawing with fill color (and no border) * `\"stroke-path\"` -- drawing "
"with border (and no fill color) * `\"fill-image\"` -- displays an image *"
" `\"fill-shade\"` -- display a shading  The item sequence represents the "
"**sequence in which these commands are executed** to build the page's "
"appearance. Therefore, if an item's bbox intersects or contains that of a"
" previous item, then the previous item may be (partially) covered / "
"hidden.   So this list can be used to detect such situations. An item's "
"index in this list equals the value of a `\"seqno\"` in dictionaries as "
"returned by :meth:`Page.get_drawings` and :meth:`Page.get_texttrace`."
msgstr ""

#: ../../functions.rst:495 42b7ce75cc4f48cc95677206490fc13e
msgid ""
"a list of rectangles that envelop text, image or drawing objects. Each "
"item is a tuple `(type, (x0, y0, x1, y1))` where the second tuple "
"consists of rectangle coordinates, and *type* is one of the following "
"values. If `layers=True`, there is a third item containing the OCG name "
"or `None`: `(type, (x0, y0, x1, y1), None)`."
msgstr ""

#: ../../functions.rst:497 a59cddc07d17415680a26bbf3894098a
msgid "`\"fill-text\"` -- normal text (painted without character borders)"
msgstr ""

#: ../../functions.rst:498 beff1b32a12045c58c1e2a7fba3c62fd
msgid "`\"stroke-text\"` -- text showing character borders only"
msgstr ""

#: ../../functions.rst:499 9e4842c138a64524bb0eb58800a17e60
msgid ""
"`\"ignore-text\"` -- text that should not be displayed (e.g. as used by "
"OCR text layers)"
msgstr ""

#: ../../functions.rst:500 478e09a14a104d649be1d052d2803a62
msgid "`\"fill-path\"` -- drawing with fill color (and no border)"
msgstr ""

#: ../../functions.rst:501 d34ef365274a49b4ab719b1f37128b75
msgid "`\"stroke-path\"` -- drawing with border (and no fill color)"
msgstr ""

#: ../../functions.rst:502 9a8e2ac7a3684bcb833698f0fc6e825f
msgid "`\"fill-image\"` -- displays an image"
msgstr ""

#: ../../functions.rst:503 87d8e48b837a4a80bb9d4f458f6f5660
msgid "`\"fill-shade\"` -- display a shading"
msgstr ""

#: ../../functions.rst:505 dcf3ff45c4f2414c89794a910444dbb8
msgid ""
"The item sequence represents the **sequence in which these commands are "
"executed** to build the page's appearance. Therefore, if an item's bbox "
"intersects or contains that of a previous item, then the previous item "
"may be (partially) covered / hidden."
msgstr ""

#: ../../functions.rst:508 e30f2d8b0c3a436bb470f5733b6bbb84
msgid ""
"So this list can be used to detect such situations. An item's index in "
"this list equals the value of a `\"seqno\"` in dictionaries as returned "
"by :meth:`Page.get_drawings` and :meth:`Page.get_texttrace`."
msgstr ""

#: ../../functions.rst:515 93d3880509054775937bb461ce59ae9c
msgid "New in v1.18.16"
msgstr ""

#: ../../functions.rst:516 8255acf8f5b748de990d605ac021da0a
msgid "Changed in v1.19.0: added key \"seqno\"."
msgstr ""

#: ../../functions.rst:517 a35ca37277014c2e902bdbe15e6cb6d8
msgid ""
"Changed in v1.19.1: stroke and fill colors now always are either RGB or "
"GRAY"
msgstr ""

#: ../../functions.rst:518 da814dae3296419abb9a43f889433d04
msgid ""
"Changed in v1.19.3: span and character bboxes are now also correct if "
"`dir != (1, 0)`."
msgstr ""

#: ../../functions.rst:519 82b1d4c3b04c47c593be3f8ab0c420c3
msgid "Changed in v1.22.0: add new dictionary key \"layer\"."
msgstr ""

#: ../../functions.rst:522 83e5518d275d4dfa8b08da9fa1b6ff5d
msgid ""
"Return low-level text information of the page. The method is available "
"for **all** document types. The result is a list of Python dictionaries "
"with the following content::"
msgstr ""

#: ../../functions.rst:558 7fad60e847844782a63f2402a4976304
msgid "Details:"
msgstr ""

#: ../../functions.rst:560 59fa9709938f43d99a64093051aa1cb2
msgid ""
"Information above tagged with \"(1)\" has the same meaning and value as "
"explained in :ref:`TextPage`."
msgstr ""

#: ../../functions.rst:562 7b08adaa64b045f1a931bc25560ffba3
msgid ""
"Please note that the font `flags` value will never contain a "
"*superscript* flag bit: the detection of superscripts is done within "
"MuPDF :ref:`TextPage` code -- it is not a property of any font."
msgstr ""

#: ../../functions.rst:563 ea040614c4cc447e9511de34619accc6
msgid ""
"Also note, that the text *color* is encoded as the usual tuple of floats "
"0 <= f <= 1 -- not in sRGB format. Depending on `span[\"type\"]`, "
"interpret this as fill color or stroke color."
msgstr ""

#: ../../functions.rst:565 6f5abcb8999e45488198d09dad42e176
msgid "There are 3 text span types:"
msgstr ""

#: ../../functions.rst:567 6e101aa72b3e4943b59ca8f4192252a1
msgid ""
"0: Filled text -- equivalent to PDF text rendering mode 0 (`0 Tr`, the "
"default in PDF), only each character's \"inside\" is shown."
msgstr ""

#: ../../functions.rst:568 ae6fd8eabe124b40bc9a722e78f3d6a8
msgid ""
"1: Stroked text -- equivalent to `1 Tr`, only the character borders are "
"shown."
msgstr ""

#: ../../functions.rst:569 4c6cb9e850c84e949c4d59fbea2bec26
msgid "3: Ignored text -- equivalent to `3 Tr` (hidden text)."
msgstr ""

#: ../../functions.rst:571 aed0c54f0d074c01a982c84e6cb7cd09
#, python-format
msgid ""
"Line width in this context is important only for processing "
"`span[\"type\"] != 0`: it determines the thickness of the character's "
"border line. This value may not be provided at all with the text data. In"
" this case, a value of 5% of the :data:`fontsize` (`span[\"size\"] * "
"0,05`) is generated. Often, an \"artificial\" bold text in PDF is created"
" by `2 Tr`. There is no equivalent span type for this case. Instead, "
"respective text is represented by two consecutive spans -- which are "
"identical in every aspect, except for their types, which are 0, resp 1. "
"It is your responsibility to handle this type of situation - in "
":meth:`Page.get_text`, MuPDF is doing this for you."
msgstr ""

#: ../../functions.rst:572 c79ebcef3cf04416a4082323bf7b274f
msgid ""
"For data compactness, the character's unicode is provided here. Use "
"built-in function `chr()` for the character itself."
msgstr ""

#: ../../functions.rst:573 a1f0773405bc4338bacd0f5e2feba9ef
msgid ""
"The alpha / opacity value of the span's text, `0 <= opacity <= 1`, 0 is "
"invisible text, 1 (100%) is intransparent. Depending on `span[\"type\"]`,"
" interpret this value as *fill* opacity or, resp. *stroke* opacity."
msgstr ""

#: ../../functions.rst:574 9d71921e08624408a2e1fb69d8dba7bd
msgid ""
"*(Changed in v1.19.0)* This value is equal or close to `char[\"bbox\"]` "
"of \"rawdict\". In particular, the bbox **height** value is always "
"computed as if **\"small glyph heights\"** had been requested."
msgstr ""

#: ../../functions.rst:575 ee90f38d97cd43a0b5c85bcdb1ebd332
msgid "*(New in v1.19.0)* This is the union of all character bboxes."
msgstr ""

#: ../../functions.rst:576 becf4f4b3543453c9903d8e059c47f46
msgid ""
"*(New in v1.19.0)* Enumerates the commands that build up the page's "
"appearance. Can be used to find out whether text is effectively hidden by"
" objects, which are painted \"later\", or *over* some object. So if there"
" is a drawing or image with a higher sequence number, whose bbox overlaps"
" (parts of) this text span, one may assume that such an object hides the "
"resp. text. Different text spans have identical sequence numbers if they "
"were created in one go."
msgstr ""

#: ../../functions.rst:577 2e66f76dfd9d4d069336694b926b0e82
msgid ""
"*(New in v1.22.0)* The name of the Optional Content Group (OCG) if "
"applicable or `None`."
msgstr ""

#: ../../functions.rst:579 c8fe2a9f48774c6381844c6dc3ad0073
msgid ""
"Here is a list of similarities and differences of `page.get_texttrace()` "
"compared to `page.get_text(\"rawdict\")`:"
msgstr ""

#: ../../functions.rst:581 f5c7c4b80e7e4b55a6931bf5d6e18bfa
msgid ""
"The method is up to **twice as fast,** compared to \"rawdict\" "
"extraction. Depends on the amount of text."
msgstr ""

#: ../../functions.rst:582 ed4175e92f9c44fdb7d350a97a9f8e30
msgid ""
"The returned data is very **much smaller in size** -- although it "
"provides more information."
msgstr ""

#: ../../functions.rst:583 92b8bc204aff4fd89b4e12fa60bcd4d2
msgid ""
"Additional types of text **invisibility can be detected**: opacity = 0 or"
" type > 1 or overlapping bbox of an object with a higher sequence number."
msgstr ""

#: ../../functions.rst:584 8e55d801d5754ed584e1395f4fae5f53
msgid ""
"If MuPDF returns unicode 0xFFFD (65533) for unrecognized characters, you "
"may still be able to deduct desired information from the glyph id."
msgstr ""

#: ../../functions.rst:585 7768a07e272a45fe8b3a62bed50662dd
msgid ""
"The `span[\"chars\"]` **contains no spaces**, **except** the document "
"creator has explicitly coded them. They **will never be generated** like "
"it happens in :meth:`Page.get_text` methods. To provide some help for "
"doing your own computations here, the width of a space character is "
"given. This value is derived from the font where possible. Otherwise the "
"value of a fallback font is taken."
msgstr ""

#: ../../functions.rst:586 aa90af7acc574ee9a0e2439c19677a97
msgid ""
"There is no effort to organize text like it happens for a :ref:`TextPage`"
" (the hierarchy of blocks, lines, spans, and characters). Characters are "
"simply extracted in sequence, one by one, and put in a span. Whenever any"
" of the span's characteristics changes, a new span is started. So you may"
" find characters with different `origin.y` values in the same span (which"
" means they would appear in different lines). You cannot assume, that "
"span characters are sorted in any particular order -- you must make sense"
" of the info yourself, taking `span[\"dir\"]`, `span[\"wmode\"]`, etc. "
"into account."
msgstr ""

#: ../../functions.rst:604 1e4c83e33ac644418edf7f191027a0b2
msgid "Ligatures are represented like this:"
msgstr ""

#: ../../functions.rst:588 83078fea69084e1d983ed49ec810f107
msgid ""
"MuPDF handles the following ligatures: \"fi\", \"ff\", \"fl\", \"ft\", "
"\"st\", \"ffi\", and \"ffl\" (only the first 3 are mostly ever used). If "
"the page contains e.g. ligature \"fi\", you will find the following two "
"character items subsequent to each other::"
msgstr ""

#: ../../functions.rst:593 c5367cb405fd4c16872116e91df19ed2
msgid ""
"This means that the bbox of the first ligature character is the area "
"containing the complete, compound glyph. Subsequent ligature components "
"are recognizable by their glyph value -1 and a bbox of width zero."
msgstr ""

#: ../../functions.rst:594 10be601aa234440b81b55c7ecd3b34c8
msgid ""
"You may want to replace those 2 or 3 char tuples by one, that represents "
"the ligature itself. Use the following mapping of ligatures to unicodes:"
msgstr ""

#: ../../functions.rst:596 0e01f9666c6d42b7b653ef331d5a433b
msgid "`\"ff\" -> 0xFB00`"
msgstr ""

#: ../../functions.rst:597 11376dbd26e54024940b40e154481a90
msgid "`\"fi\" -> 0xFB01`"
msgstr ""

#: ../../functions.rst:598 b197ef94c32942f6b4beb0c917bd1efe
msgid "`\"fl\" -> 0xFB02`"
msgstr ""

#: ../../functions.rst:599 10a4ae631e3a4369b6e4e1b245987437
msgid "`\"ffi\" -> 0xFB03`"
msgstr ""

#: ../../functions.rst:600 a389433a20614c9cb3961af75b1653a2
msgid "`\"ffl\" -> 0xFB04`"
msgstr ""

#: ../../functions.rst:601 0af6f15bf9a44d08a08f6bd5e8344dda
msgid "`\"ft\" -> 0xFB05`"
msgstr ""

#: ../../functions.rst:602 1b74a0973fc0465d861f98306feb2557
msgid "`\"st\" -> 0xFB06`"
msgstr ""

#: ../../functions.rst:604 e6b15db2c98748ee8458c4d22df9d1eb
msgid ""
"So you may want to replace the two example tuples above by the following "
"single one: `(0xFB01, glyph, (x, y), (x0, y0, x1, y1))` (there is usually"
" no need to lookup the correct glyph id for 0xFB01 in the resp. font, but"
" you may execute `font.has_glyph(0xFB01)` and use its return value)."
msgstr ""

#: ../../functions.rst:606 01405663669344d4bf5effcb32d35bc5
msgid ""
"**Changed in v1.19.3:** Similar to other text extraction methods, the "
"character and span bboxes envelop the character quads. To recover the "
"quads, follow the same methods :meth:`recover_quad`, "
":meth:`recover_char_quad` or :meth:´recover_span_quad` as explained in "
":ref:`textpagedict`. Use either `None` or `span[\"dir\"]` for the writing"
" direction."
msgstr ""

#: ../../functions.rst:608 19f16cd5c56649a88739831b6f8b5f6a
msgid ""
"**Changed in v1.21.1:** If applicable, the name of the OCG is shown in "
"`\"layer\"`."
msgstr ""

#: ../../functions.rst:614 ddf8be0330594f4d8557169645f0271e
msgid ""
"Put string pair \"q\" / \"Q\" before, resp. after a page's */Contents* "
"object(s) to ensure that any \"geometry\" changes are **local** only."
msgstr ""

#: ../../functions.rst:616 ce844f59569644d7822e789171ac24a8
msgid ""
"Use this method as an alternative, minimalist version of "
":meth:`Page.clean_contents`. Its advantage is a small footprint in terms "
"of processing time and impact on the data size of incremental saves. "
"Multiple executions of this method are no problem and have no functional "
"impact: `b\"q q contents Q Q\"` is treated like `b\"q contents Q\"`."
msgstr ""

#: ../../functions.rst:622 3ef74f72e1fd48078b5891fef9a68345
msgid ""
"Indicate whether :meth:`Page.wrap_contents` may be required for object "
"insertions in standard PDF geometry. Note that this is a quick, basic "
"check only: a value of *False* may still be a false alarm. But "
"nevertheless executing :meth:`Page.wrap_contents` will have no negative "
"side effects."
msgstr ""

#: ../../functions.rst:630 048569a9ea39455ba6512935bf4394a3
msgid ""
"Deprecated wrapper for :meth:`TextPage.extractBLOCKS`.  Use "
":meth:`Page.get_text` with the \"blocks\" option instead."
msgstr ""

#: ../../functions.rst:638 c16a9f7beab74fae8000207e5c20f592
msgid ""
"Deprecated wrapper for :meth:`TextPage.extractWORDS`. Use "
":meth:`Page.get_text` with the \"words\" option instead."
msgstr ""

#: ../../functions.rst:646 76984853c4bd4cef9fc042db7b3f08f7
msgid "Run a page through a list device and return its display list."
msgstr ""

#: ../../functions.rst:648 d6cdcb4804a14f02bf1e14859af139e6
msgid ":ref:`DisplayList`"
msgstr ""

#: ../../functions.rst:649 2244f35fca8f49d083b4ef67b822b8d3
msgid "the display list of the page."
msgstr ""

#: ../../functions.rst:655 a6e02e322b6848e0b798bc1e85d997f5
msgid ""
"PDF only: Retrieve a list of :data:`xref` of :data:`contents` objects of "
"a page. May be empty or contain multiple integers. If the page is cleaned"
" (:meth:`Page.clean_contents`), it will be one entry at most. The "
"\"source\" of each `/Contents` object can be individually read by "
":meth:`Document.xref_stream` using an item of this list. Method "
":meth:`Page.read_contents` in contrast walks through this list and "
"concatenates the corresponding sources into one `bytes` object."
msgstr ""

#: ../../functions.rst:663 c2e167802d59465a9da7c9af001a131f
msgid ""
"PDF only: Let the page's `/Contents` key point to this xref. Any "
"previously used contents objects will be ignored and can be removed via "
"garbage collection."
msgstr ""

#: ../../functions.rst:669 e7ee5895dbc34589b913a82e6853cbfa
msgid "Changed in v1.17.6"
msgstr ""

#: ../../functions.rst:671 2275af3c874f451a95de657066375d13
msgid ""
"PDF only: Clean and concatenate all :data:`contents` objects associated "
"with this page. \"Cleaning\" includes syntactical corrections, "
"standardizations and \"pretty printing\" of the contents stream. "
"Discrepancies between :data:`contents` and :data:`resources` objects will"
" also be corrected if sanitize is true. See :meth:`Page.get_contents` for"
" more details."
msgstr ""

#: ../../functions.rst:673 3496e084b0064f42ba23299945a3d2a6
msgid ""
"Changed in version 1.16.0 Annotations are no longer implicitly cleaned by"
" this method. Use :meth:`Annot.clean_contents` separately."
msgstr ""

#: ../../functions.rst:675 86ca2df35a744ccb8f225c552f1feb9d
msgid ""
"*(new in v1.17.6)* if true, synchronization between resources and their "
"actual use in the contents object is snychronized. For example, if a font"
" is not actually used for any text of the page, then it will be deleted "
"from the `/Resources/Font` object."
msgstr ""

#: ../../functions.rst:677 bfeb5ac9cc704e6fbb7f8f550d2c5706
msgid ""
"This is a complex function which may generate large amounts of new data "
"and render old data unused. It is **not recommended** using it together "
"with the **incremental save** option. Also note that the resulting "
"singleton new */Contents* object is **uncompressed**. So you should save "
"to a **new file** using options *\"deflate=True, garbage=3\"*."
msgstr ""

#: ../../functions.rst:683 1c5d70583e3d4c51bf3f3732aebc0d85
msgid ""
"*New in version 1.17.0.* Return the concatenation of all :data:`contents`"
" objects associated with the page -- without cleaning or otherwise "
"modifying them. Use this method whenever you need to parse this source in"
" its entirety without having to bother how many separate contents objects"
" exist."
msgstr ""

#: ../../functions.rst:692 1f78ee9d621b47629b9dec8c6244f77f
msgid ""
"Clean the :data:`contents` streams associated with the annotation. This "
"is the same type of action which :meth:`Page.clean_contents` performs -- "
"just restricted to this annotation."
msgstr ""

#: ../../functions.rst:699 7b7f6e00721e4c058cf69740242cca40
msgid ""
"Return a list of character glyphs and their widths for a font that is "
"present in the document. A font must be specified by its PDF cross "
"reference number :data:`xref`. This function is called automatically from"
" :meth:`Page.insert_text` and :meth:`Page.insert_textbox`. So you should "
"rarely need to do this yourself."
msgstr ""

#: ../../functions.rst:701 00e820a75af84d12ba7a13d031576ec8
msgid ""
"cross reference number of a font embedded in the PDF. To find a font "
":data:`xref`, use e.g. *doc.get_page_fonts(pno)* of page number *pno* and"
" take the first entry of one of the returned list entries."
msgstr ""

#: ../../functions.rst:703 7c6791df4f104183b8c02a62d7ae4efb
msgid ""
"limits the number of returned entries. The default of 256 is enforced for"
" all fonts that only support 1-byte characters, so-called \"simple "
"fonts\" (checked by this method). All :ref:`Base-14-Fonts` are simple "
"fonts."
msgstr ""

#: ../../functions.rst:706 40840d92ff6c4cd9b5ca0cfe09083605
msgid ""
"a list of *limit* tuples. Each character *c* has an entry  *(g, w)* in "
"this list with an index of *ord(c)*. Entry *g* (integer) of the tuple is "
"the glyph id of the character, and float *w* is its normalized width. The"
" actual width for some :data:`fontsize` can be calculated as *w * "
"fontsize*. For simple fonts, the *g* entry can always be safely ignored. "
"In all other cases *g* is the basis for graphically representing *c*."
msgstr ""

#: ../../functions.rst:708 6f9d497b03ab4d5cadf66c1b624abb1a
msgid "This function calculates the pixel width of a string called *text*::"
msgstr ""

#: ../../functions.rst:720 c8ac2f65acc04faaa21af6523322b8f5
msgid "New in version 1.14.14"
msgstr ""

#: ../../functions.rst:722 339b396f11c741fda1371b5690c93f0a
msgid ""
"PDF only: Check whether the object represented by :data:`xref` is a "
":data:`stream` type. Return is *False* if not a PDF or if the number is "
"outside the valid xref range."
msgstr ""

#: ../../functions.rst:724 b539c8ede4a64030b563e582038318eb
msgid ":data:`xref` number."
msgstr ""

#: ../../functions.rst:726 a7f1db27d8b74770be450ba842e67812
msgid ""
"*True* if the object definition is followed by data wrapped in keyword "
"pair *stream*, *endstream*."
msgstr ""

#: ../../functions.rst:732 e5462b44bdff42d5b0880d2759fcfe54
msgid ""
"Increase the :data:`xref` by one entry and return that number. This can "
"then be used to insert a new object."
msgstr ""

#: ../../functions.rst:734 1e9f9bbd80164762bb46d0729034b24c
msgid ""
"int :returns: the number of the new :data:`xref` entry. Please note, that"
" only a new entry in the PDF's cross reference table is created. At this "
"point, there will not yet exist a PDF object associated with it. To "
"create an (empty) object with this number use `doc.update_xref(xref, "
"\"<<>>\")`."
msgstr ""

#: ../../functions.rst:741 67d0ae870487411ba4b120841fce4d98
msgid "Return length of :data:`xref` table."
msgstr ""

#: ../../functions.rst:744 c7bdacbbf4b74244924be89f73c469c7
msgid "the number of entries in the :data:`xref` table."
msgstr ""

#: ../../functions.rst:750 70bee717de514a8a9bd540b7dbee7456
msgid ""
"Compute the quadrilateral of a text span extracted via options \"dict\" "
"or \"rawdict\" of :meth:`Page.get_text`."
msgstr ""

#: ../../functions.rst:752 3eb5a6e619de4c86a6e560ec7425eeec
msgid ""
"`line[\"dir\"]` of the owning line.  Use `None` for a span from "
":meth:`Page.get_texttrace`."
msgstr ""

#: ../../functions.rst:753 ../../functions.rst:763 ../../functions.rst:774
#: 1a3e4535d17a4020b288a7a663f2094d 5800e6d6d38a49fa8f94d544e2749def
#: abca57b62eec49799bb018d7bc433982
msgid "the span."
msgstr ""

#: ../../functions.rst:754 69e3f6bc115f4f4daf9c14a28505b0a6
msgid ""
"the :ref:`Quad` of the span, usable for text marker annotations "
"('Highlight', etc.)."
msgstr ""

#: ../../functions.rst:760 59457e4239ea4fc2a68bcc09cc9c0116
msgid ""
"Compute the quadrilateral of a text character extracted via option "
"\"rawdict\" of :meth:`Page.get_text`."
msgstr ""

#: ../../functions.rst:762 ../../functions.rst:773
#: 12d0a53f1a5d4606b9b7888867c2b66c 3b8291a610004fc1bdca97114464df3d
msgid ""
"`line[\"dir\"]` of the owning line. Use `None` for a span from "
":meth:`Page.get_texttrace`."
msgstr ""

#: ../../functions.rst:764 9207723721c5410c8ae52b5febcc75d4
msgid "the character."
msgstr ""

#: ../../functions.rst:765 b57dab8b373048519c8f422277037496
msgid ""
"the :ref:`Quad` of the character, usable for text marker annotations "
"('Highlight', etc.)."
msgstr ""

#: ../../functions.rst:771 ab967188998c4260a455f44089a4f3be
msgid ""
"Compute the quadrilateral of a subset of characters of a span extracted "
"via option \"rawdict\" of :meth:`Page.get_text`."
msgstr ""

#: ../../functions.rst:775 148d040212794c74aefdc1e9ea12986b
msgid ""
"the characters to consider. If omitted, identical to :meth:`recoer_span`."
" If given, the selected extraction option must be \"rawdict\"."
msgstr ""

#: ../../functions.rst:776 bb3fd845122d45e5915dc275fcf9e30d
msgid ""
"the :ref:`Quad` of the selected characters, usable for text marker "
"annotations ('Highlight', etc.)."
msgstr ""

#: ../../functions.rst:782 4fa4840e7f4e41da8bedb254cfd69137
msgid ""
"Compute the quadrilateral of a subset of spans of a text line extracted "
"via options \"dict\" or \"rawdict\" of :meth:`Page.get_text`."
msgstr ""

#: ../../functions.rst:784 629769fad1754527ab5f52262c2f4184
msgid "the line."
msgstr ""

#: ../../functions.rst:785 1d8357c496d4478d9d389b234b30bf5e
msgid ""
"a sub-list of `line[\"spans\"]`. If omitted, the full line quad will be "
"returned."
msgstr ""

#: ../../functions.rst:786 4b6bb77f8a894d7da17fbc842b955804
msgid ""
"the :ref:`Quad` of the selected line spans, usable for text marker "
"annotations ('Highlight', etc.)."
msgstr ""

#: ../../functions.rst:792 50f3cc02831f499f95a90c042783f9f0
msgid ""
"Return the name of Tesseract's language support folder. Use this function"
" if the environment variable `TESSDATA_PREFIX` has not been set."
msgstr ""

#: ../../functions.rst:794 f829ebde787440b9b3516c94f9cc05a4
msgid ""
"`os.getenv(\"TESSDATA_PREFIX\")` if not `None`. Otherwise, if Tesseract-"
"OCR is installed, locate the name of `tessdata`. If no installation is "
"found, return `False`.  The folder name can be used as parameter "
"`tessdata` in methods :meth:`Page.get_textpage_ocr`, "
":meth:`Pixmap.pdfocr_save` and :meth:`Pixmap.pdfocr_tobytes`."
msgstr ""

#: ../../functions.rst:794 4a1df59281e5488dbb9f903c4c38fcc8
msgid ""
"`os.getenv(\"TESSDATA_PREFIX\")` if not `None`. Otherwise, if Tesseract-"
"OCR is installed, locate the name of `tessdata`. If no installation is "
"found, return `False`."
msgstr ""

#: ../../functions.rst:796 dd803a499dee4f96a0cb5da65d0b7a2f
msgid ""
"The folder name can be used as parameter `tessdata` in methods "
":meth:`Page.get_textpage_ocr`, :meth:`Pixmap.pdfocr_save` and "
":meth:`Pixmap.pdfocr_tobytes`."
msgstr ""

#: ../../functions.rst:806 2f283923109449c8a19068c404333d71
msgid ""
"Return the (unique) infinite rectangle `Rect(-2147483648.0, "
"-2147483648.0, 2147483520.0, 2147483520.0)`, resp. the :ref:`IRect` and "
":ref:`Quad` counterparts. It is the largest possible rectangle: all valid"
" rectangles are contained in it."
msgstr ""

#: ../../functions.rst:816 8301dc780503439caab93ab225d612f1
msgid ""
"Return the \"standard\" empty and invalid rectangle `Rect(2147483520.0, "
"2147483520.0, -2147483648.0, -2147483648.0)` resp. quad. Its top-left and"
" bottom-right point values are reversed compared to the infinite "
"rectangle. It will e.g. be used to indicate empty bboxes in "
"`page.get_text(\"dict\")` dictionaries. There are however infinitely many"
" empty or invalid rectangles."
msgstr ""

#: ../../footer.rst:-1 07e6f53dc4c849eba0ccb95f6153aa87
msgid "Discord logo"
msgstr ""

#~ msgid "return string length for a given font & fontsize"
#~ msgstr ""

#~ msgid ""
#~ "Calculate the length of text on "
#~ "output with a given **builtin** font,"
#~ " fontsize and encoding."
#~ msgstr ""

#~ msgid "the fontsize."
#~ msgstr ""

#~ msgid ""
#~ "Line width in this context is "
#~ "important only for processing `span[\"type\"]"
#~ " != 0`: it determines the thickness"
#~ " of the character's border line. This"
#~ " value may not be provided at "
#~ "all with the text data. In this"
#~ " case, a value of 5% of the "
#~ "fontsize (`span[\"size\"] * 0,05`) is "
#~ "generated. Often, an \"artificial\" bold "
#~ "text in PDF is created by `2 "
#~ "Tr`. There is no equivalent span "
#~ "type for this case. Instead, respective"
#~ " text is represented by two "
#~ "consecutive spans -- which are identical"
#~ " in every aspect, except for their"
#~ " types, which are 0, resp 1. It"
#~ " is your responsibility to handle "
#~ "this type of situation - in "
#~ ":meth:`Page.get_text`, MuPDF is doing this "
#~ "for you."
#~ msgstr ""

#~ msgid ""
#~ "a list of *limit* tuples. Each "
#~ "character *c* has an entry  *(g, "
#~ "w)* in this list with an index "
#~ "of *ord(c)*. Entry *g* (integer) of "
#~ "the tuple is the glyph id of "
#~ "the character, and float *w* is "
#~ "its normalized width. The actual width"
#~ " for some fontsize can be calculated"
#~ " as *w * fontsize*. For simple "
#~ "fonts, the *g* entry can always be"
#~ " safely ignored. In all other cases"
#~ " *g* is the basis for graphically "
#~ "representing *c*."
#~ msgstr ""

#~ msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
#~ msgstr ""

#~ msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
#~ msgstr ""

