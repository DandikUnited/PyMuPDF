# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-28 14:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1
msgid "PyMuPDF is a high-performance Python library for data extraction, analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"

#: ../../header.rst:-1
msgid "PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"

#: ../../story-class.rst:7 a127be4b6bf342eb91799194f80e1975
msgid "Story"
msgstr ""

#: ../../story-class.rst:11 e8ec754eab2948cf898583c023881d7b
msgid "New in v1.21.0"
msgstr ""

#: ../../story-class.rst:14 abcf8d389762471084cf798a8dada61b
msgid "**Method / Attribute**"
msgstr ""

#: ../../story-class.rst:14 36fbc61a68974c03a3e965f653ef85c6
msgid "**Short Description**"
msgstr ""

#: ../../story-class.rst:16 dec5f0a0d2194497acb404f625f38525
msgid ":meth:`Story.reset`"
msgstr ""

#: ../../story-class.rst:16 7729c60035714bc7a9cb8997fc1f43c8
msgid "\"rewind\" story output to its beginning"
msgstr ""

#: ../../story-class.rst:17 4f268999c21140aab7d12d82c8dc6898
msgid ":meth:`Story.place`"
msgstr ""

#: ../../story-class.rst:17 977f6fa73a9045b4b61db33acceede8a
msgid "compute story content to fit in provided rectangle"
msgstr ""

#: ../../story-class.rst:18 9f30e355b46e4979b8a6f7b165bab45f
msgid ":meth:`Story.draw`"
msgstr ""

#: ../../story-class.rst:18 156e98b31570484ba152dcdb6180657b
msgid "write the computed content to current page"
msgstr ""

#: ../../story-class.rst:19 ee1f6406d2614419b670d2d05ff3f6bb
msgid ":meth:`Story.element_positions`"
msgstr ""

#: ../../story-class.rst:19 2caea0b5326e484ca49124ef6051e3c5
msgid "callback function logging currently processed story content"
msgstr ""

#: ../../story-class.rst:20 2e80dc4d12a34a44afc5577b98583c2c
msgid ":attr:`Story.body`"
msgstr ""

#: ../../story-class.rst:20 097d66eba46745a89a336db78bc5fe88
msgid "the story's underlying :htmlTag:`body`"
msgstr ""

#: ../../story-class.rst:21 334f3e6300e64b0e89df08ecdb95da38
msgid ":meth:`Story.write`"
msgstr ""

#: ../../story-class.rst:21 e6043076c3bc4350814548118b66ce1b
msgid "places and draws Story to a DocumentWriter"
msgstr ""

#: ../../story-class.rst:22 e002da4e810344d3bb2485ab3a3136d1
msgid ":meth:`Story.write_stabilized`"
msgstr ""

#: ../../story-class.rst:22 33c85e9c39844555a744f1cec78f359b
msgid "iterative layout of html content to a DocumentWriter"
msgstr ""

#: ../../story-class.rst:23 8df064a75bc54326b2827b3196ee1ca7
msgid ":meth:`Story.write_with_links`"
msgstr ""

#: ../../story-class.rst:23 d974dc1d6deb4b2d8b442e456f9ab612
msgid "like `write()` but also creates PDF links"
msgstr ""

#: ../../story-class.rst:24 6534903a097d4d84864ffc4192a3010b
msgid ":meth:`Story.write_stabilized_with_links`"
msgstr ""

#: ../../story-class.rst:24 ddd44e241e754042be345f16d36c9d5c
msgid "like `write_stabilized()` but also creates PDF links"
msgstr ""

#: ../../story-class.rst:27 88afe8160bc84965a49dbbba679729f6
msgid "**Class API**"
msgstr ""

#: ../../story-class.rst:33 030fe274d353478380ad97ec2e00e0ab
msgid ""
"Create a **story**, optionally providing HTML and CSS source. The HTML is"
" parsed, and held within the Story as a DOM (Document Object Model)."
msgstr ""

#: ../../story-class.rst:36 1d9934deed5b495f81efbee9ff33e169
msgid ""
"This structure may be modified: content (text, images) may be added, "
"copied, modified or removed by using methods of the :ref:`Xml` class."
msgstr ""

#: ../../story-class.rst:39 970f9521b320401dba5f9e7408931093
msgid ""
"When finished, the **story** can be written to any device; in typical "
"usage the device may be provided by a :ref:`DocumentWriter` to make new "
"pages."
msgstr ""

#: ../../story-class.rst:42 cf0ceed1b5b9464f9738cd8802af0995
msgid "Here are some general remarks:"
msgstr ""

#: ../../story-class.rst:44 10d3a02e723243b0bfd7e5441af86172
msgid ""
"The :ref:`Story` constructor parses and validates the provided HTML to "
"create the DOM."
msgstr ""

#: ../../story-class.rst:45 f9e0c26d647a45bfb969200eea805d3c
msgid ""
"PyMuPDF provides a number of ways to manipulate the HTML source by "
"providing access to the *nodes* of the underlying DOM. Documents can be "
"completely built from ground up programmatically, or the existing DOM can"
" be modified pretty arbitrarily. For details of this interface, please "
"see the :ref:`Xml` class."
msgstr ""

#: ../../story-class.rst:50 1fdd2053811a4d9ca5ede085ec27a2d3
msgid ""
"If no (or no more) changes to the DOM are required, the story is ready to"
" be laid out and to be fed to a series of devices (typically devices "
"provided by a :ref:`DocumentWriter` to produce new pages)."
msgstr ""

#: ../../story-class.rst:53 522737d727ee4fa7a2b49a7de91483bf
msgid ""
"The next step is to place the story and write it out. This can either be "
"done directly, by looping around calling `place()` and `draw()`, or "
"alternatively, the looping can handled for you using the `write()` or "
"`write_stabilised()` methods. Which method you choose is largely a matter"
" of taste."
msgstr ""

#: ../../story-class.rst:59 c9f3aa5e934640808f6280317c2597ed
msgid "To work in the first of these styles, the following loop should be used:"
msgstr ""

#: ../../story-class.rst:61 144ad4f73de347e888f5970a5889920a
msgid ""
"Obtain a suitable device to write to; typically by requesting a new, "
"empty page from a :ref:`DocumentWriter`."
msgstr ""

#: ../../story-class.rst:64 3bc0e1063944476b9355efd755649e49
msgid ""
"Determine one or more rectangles on the page, that should receive "
"**story** data. Note that not every page needs to have the same set of "
"rectangles."
msgstr ""

#: ../../story-class.rst:67 00a74e0891b24683ba08ea581bf5ecfa
msgid ""
"Pass each rectangle to the **story** to place it, learning what part of "
"that rectangle has been filled, and whether there is more story data that"
" did not fit. This step can be repeated several times with adjusted "
"rectangles until the caller is happy with the results."
msgstr ""

#: ../../story-class.rst:72 4168ea07f0eb4dc3a5676163c0fe5bf3
msgid ""
"Optionally, at this point, we can request details of where interesting "
"items have been placed, by calling the `element_positions()` method. "
"Items are deemed to be interesting if their integer `heading` attribute "
"is a non-zero (corresponding to HTML tags :htmlTag:`h1` - :htmlTag:`h6`),"
" if their `id` attribute is not `None` (corresponding to HTML tag "
":htmlTag:`id`), or if their `href` attribute is not `None` (responding to"
" HTML tag :htmlTag:`href`). This can conveniently be used for automatic "
"generation of a Table of Contents, an index of images or the like."
msgstr ""

#: ../../story-class.rst:81 af3dd82f504e473f808ebc99ce5dd41a
msgid "Next, draw that rectangle out to the device with the `draw()` method."
msgstr ""

#: ../../story-class.rst:82 7db4d2bd3ad845a5b0988d433f599f37
msgid ""
"If the most recent call to `place()` indicated that all the story data "
"had fitted, stop now."
msgstr ""

#: ../../story-class.rst:84 537b4c667a164e7d8af19ded37acb2fc
msgid ""
"Otherwise, we can loop back. If there are more rectangles to be placed on"
" the current device (page), we jump back to step 3 - if not, we jump back"
" to step 1 to get a new device."
msgstr ""

#: ../../story-class.rst:87 f40cedf783df4b508badad77e2db0fdd
msgid ""
"Alternatively, in the case where you are using a :ref:`DocumentWriter`, "
"the `write()` or `write_stabilized()` methods can be used. These handle "
"all the looping for you, in exchange for being provided with callbacks "
"that control the behaviour (notably a callback that enumerates the "
"rectangles/pages to use)."
msgstr ""

#: ../../story-class.rst:92 e987f460096a42afa3b988b439d42043
msgid ""
"Which part of the **story** will land on which rectangle / which page, is"
" fully under control of the :ref:`Story` object and cannot be predicted."
msgstr ""

#: ../../story-class.rst:94 83392b32289d4f9eb7cf3db66beef4c3
msgid ""
"Images may be part of a **story**. They will be placed together with any "
"surrounding text."
msgstr ""

#: ../../story-class.rst:95 f764375486744f73b47ae0b09c488c68
msgid ""
"Multiple stories may - independently from each other - write to the same "
"page. For example, one may have separate stories for page header, page "
"footer, regular text, comment boxes, etc."
msgstr ""

#: ../../story-class.rst 29d35a930cd440c1985cf771eb63ef1d
#: 5473b32263b84b738b7e072faf9fb244 64da1da5ced04fbba943c901cd629535
#: c18291ead221473e9951044c0053ea02 d439afd318a34eeda8a28a7f9f92cbab
#: eb83dc5e4e9f441385fd3794ba342be4
msgid "Parameters"
msgstr ""

#: ../../story-class.rst:99 dedc390a9fdd49f899bb1c5ec8dbe541
msgid ""
"HTML source code. If omitted, a basic minimum is generated (see below). "
"If provided, not a complete HTML document is needed. The in-built source "
"parser will forgive (many / most) HTML syntax errors and also accepts "
"HTML fragments like `\"<b>Hello, <i>World!</i></b>\"`."
msgstr ""

#: ../../story-class.rst:104 b529f77482824f4990801dafd159f6ac
msgid "CSS source code. If provided, must contain valid CSS specifications."
msgstr ""

#: ../../story-class.rst:105 2a0979a0b5f8486b91bb7f1efc6c5cac
msgid "the default text font size."
msgstr ""

#: ../../story-class.rst:106 e899f0a95c50480e94637904f5e81ca9
msgid ""
"an :ref:`Archive` from which to load resources for rendering. Currently "
"supported resource types are images and text fonts. If omitted, the story"
" will not try to look up any such data and may thus produce incomplete "
"output.  .. note:: Instead of an actual archive, valid arguments for "
"**creating** an :ref:`Archive` can also be provided -- in which case an "
"archive will temporarily be constructed. So, instead of `story = "
"fitz.Story(archive=fitz.Archive(\"myfolder\"))`, one can also shorter "
"write `story = fitz.Story(archive=\"myfolder\")`."
msgstr ""

#: ../../story-class.rst:106 dd274593b33b4a2485f3e8b283e69261
msgid ""
"an :ref:`Archive` from which to load resources for rendering. Currently "
"supported resource types are images and text fonts. If omitted, the story"
" will not try to look up any such data and may thus produce incomplete "
"output."
msgstr ""

#: ../../story-class.rst:108 da3559c174044e3c812fda98705f7822
msgid ""
"Instead of an actual archive, valid arguments for **creating** an "
":ref:`Archive` can also be provided -- in which case an archive will "
"temporarily be constructed. So, instead of `story = "
"fitz.Story(archive=fitz.Archive(\"myfolder\"))`, one can also shorter "
"write `story = fitz.Story(archive=\"myfolder\")`."
msgstr ""

#: ../../story-class.rst:112 2e18053bf8b94516a605bc3dee555513
msgid ""
"Calculate that part of the story's content, that will fit in the provided"
" rectangle. The method maintains a pointer which part of the story's "
"content has already been written and upon the next invocation resumes "
"from that pointer's position."
msgstr ""

#: ../../story-class.rst:114 18b6a31e9c9f4920b41d9909e59b1d79
msgid ""
"layout the current part of the content to fit into this rectangle. This "
"must be a sub-rectangle of the page's :ref:`MediaBox<Glossary_MediaBox>`."
msgstr ""

#: ../../story-class.rst 888be77d32ec4cfc898d9e4dc26c7a9e
msgid "Return type"
msgstr ""

#: ../../story-class.rst 1e080ce3d90d450084e42527afcaf715
msgid "Returns"
msgstr ""

#: ../../story-class.rst:117 36f4edf9bc404de29ccd65043c1f49fe
msgid ""
"a bool (int) `more` and a rectangle `filled`. If `more == 0`, all content"
" of the story has been written, otherwise more is waiting to be written "
"to subsequent rectangles / pages. Rectangle `filled` is the part of "
"`where` that has actually been filled."
msgstr ""

#: ../../story-class.rst:121 d0cb7e6f29c94238ba02c5e34a764d75
msgid "Write the content part prepared by :meth:`Story.place` to the page."
msgstr ""

#: ../../story-class.rst:123 2718d1b94d7c4cc69c9d7c8524e540cf
msgid ""
"the :ref:`Device` created by `dev = writer.begin_page(mediabox)`. The "
"device knows how to call all MuPDF functions needed to write the content."
msgstr ""

#: ../../story-class.rst:124 0cd9ac8aad6a4cd18a4ce5252b84358b
msgid ""
"a matrix for transforming content when writing to the page. An example "
"may be writing rotated text. The default means no transformation (i.e. "
"the :ref:`Identity` matrix)."
msgstr ""

#: ../../story-class.rst:128 2dbe76a0bf5a4d119391c99c75445e4f
msgid ""
"Let the Story provide positioning information about certain HTML elements"
" once their place on the current page has been computed - i.e. invoke "
"this method **directly after** :meth:`Story.place`."
msgstr ""

#: ../../story-class.rst:130 19ae6f95f3334afd913a34a29471ca6a
msgid ""
"*Story* will pass position information to *function*. This information "
"can for example be used to generate a Table of Contents."
msgstr ""

#: ../../story-class.rst:132 b9640c92fa894cb78c79f95c8d46f1a5
msgid ""
"a Python function accepting an :class:`ElementPosition` object. It will "
"be invoked by the Story object to process positioning information. The "
"function **must** be a callable accepting exactly one argument."
msgstr ""

#: ../../story-class.rst:133 44f42875f66343cc8c47eb2d5645bd4c
msgid ""
"an optional dictionary with any **additional** information that should be"
" added to the :class:`ElementPosition` instance passed to `function`. "
"Like for example the current output page number. Every key in this "
"dictionary must be a string that conforms to the rules for a valid Python"
" identifier. The complete set of information is explained below."
msgstr ""

#: ../../story-class.rst:142 6b4db9af74ed4e988c415b48e56ba9bf
msgid "Rewind the story's document to the beginning for starting over its output."
msgstr ""

#: ../../story-class.rst:146 f94251b28bf34fd79d73e31bb138670c
msgid ""
"The :htmlTag:`body` part of the story's DOM. This attribute contains the "
":ref:`Xml` node of :htmlTag:`body`. All relevant content for PDF "
"production is contained between \"<body>\" and \"</body>\"."
msgstr ""

#: ../../story-class.rst:150 1cbcf04ab74b4e31a6fb64e002661db1
msgid ""
"Places and draws Story to a `DocumentWriter`. Avoids the need for calling"
" code to implement a loop that calls `Story.place()` and `Story.draw()` "
"etc, at the expense of having to provide at least the `rectfn()` "
"callback."
msgstr ""

#: ../../story-class.rst:155 ef4ae9b7433a46a9872d18c0cfdae9b5
msgid "a `DocumentWriter` or None."
msgstr ""

#: ../../story-class.rst:156 a77ac7c839f14258ad687fab1cd74cf9
msgid ""
"a callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:     mediabox:         None or rect for new page."
"     rect:         The next rect into which content should be placed."
"     ctm:         None or a `Matrix`."
msgstr ""

#: ../../story-class.rst:156 e0dbd1f20d3847a5aba155236b5320fd
msgid ""
"a callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:"
msgstr ""

#: ../../story-class.rst:158 ../../story-class.rst:200
#: 259607dab79742138ed6f6780ec00e70 76a12ac2e7294bfdbc399c9ef77765eb
msgid "mediabox:"
msgstr ""

#: ../../story-class.rst:159 ../../story-class.rst:201
#: 2b7522c83ed64af8a21ce3e1f6e449ed fda3da8601af462ab433d4c8923e6a3c
msgid "None or rect for new page."
msgstr ""

#: ../../story-class.rst:160 ../../story-class.rst:203
#: 128f419ec38a49c7b418c1958463c8ba f812be7e72f64ee785e52c6870ed9699
msgid "rect:"
msgstr ""

#: ../../story-class.rst:161 ../../story-class.rst:203
#: 0583129c839b4efba070f5c9bbfc17d9 c5b21069522b4f31b5a24b164f430b74
msgid "The next rect into which content should be placed."
msgstr ""

#: ../../story-class.rst:162 ../../story-class.rst:205
#: 512c3e5602f54bc28455e3cb71d4273c 727ec876c42348beb15114a443a30c7d
msgid "ctm:"
msgstr ""

#: ../../story-class.rst:163 44fea9043f024fe782f794b29bb4ea1a
msgid "None or a `Matrix`."
msgstr ""

#: ../../story-class.rst:164 c1136f6d06ad4fccb18f9ec2a589ade1
msgid ""
"None, or a callable taking `(position: ElementPosition)`: position:     "
"An `ElementPosition` with an extra `.page_num` member. Typically called "
"multiple times as we generate elements that are headings or have an id."
msgstr ""

#: ../../story-class.rst:164 2a5974f1823a4bf6b7aaffeb642bac49
msgid "None, or a callable taking `(position: ElementPosition)`: position:"
msgstr ""

#: ../../story-class.rst:166 860dc16f776648c48defbc6f0ad0ebf0
msgid "An `ElementPosition` with an extra `.page_num` member."
msgstr ""

#: ../../story-class.rst:167 b7a8ca5709864d4098792827b97d2c85
msgid ""
"Typically called multiple times as we generate elements that are headings"
" or have an id."
msgstr ""

#: ../../story-class.rst:169 def001ab8348418fa2bacab474d1ba36
msgid ""
"None, or a callable taking `(page_num, mediabox, dev, after)`; called at "
"start (`after=0`) and end (`after=1`) of each page."
msgstr ""

#: ../../story-class.rst:175 f69eb02e335b468b980bd3532fcc9da9
msgid ""
"Static method that does iterative layout of html content to a "
"`DocumentWriter`."
msgstr ""

#: ../../story-class.rst:178 f09312a8efcf4973adb339fb777ac84f
msgid ""
"For example this allows one to add a table of contents section while "
"ensuring that page numbers are patched up until stable."
msgstr ""

#: ../../story-class.rst:181 b2988975d3ea4ba39aed7f0a97072108
msgid ""
"Repeatedly creates a new `Story` from `(contentfn(), user_css, em, "
"archive)` and lays it out with internal call to `Story.write()`; uses a "
"None writer and extracts the list of `ElementPosition`'s which is passed "
"to the next call of `contentfn()`."
msgstr ""

#: ../../story-class.rst:187 cf9cfcab6c1f472e9c13131583e43299
msgid ""
"When the html from `contentfn()` becomes unchanged, we do a final "
"iteration using `writer`."
msgstr ""

#: ../../story-class.rst:190 00674340cbfe4120bdd9a6edc56a3793
msgid "A `DocumentWriter`."
msgstr ""

#: ../../story-class.rst:192 e52639f1371d42ebbd71d38d148ece4f
msgid ""
"A function taking a list of `ElementPositions` and returning a string "
"containing html. The returned html can depend on the list of positions, "
"for example with a table of contents near the start."
msgstr ""

#: ../../story-class.rst:197 892d25e97ffe401bbdb378ca4cd335b6
msgid ""
"A callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:     mediabox:         None or rect for new page."
"     rect:         The next rect into which content should be         "
"placed.     ctm:         A `Matrix`."
msgstr ""

#: ../../story-class.rst:198 2f2c2dab0b8d487397d9a957cc6b6a78
msgid ""
"A callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:"
msgstr ""

#: ../../story-class.rst:206 5ac7f486041f4abc9a262f9e24972476
msgid "A `Matrix`."
msgstr ""

#: ../../story-class.rst:207 9a8fb92e89ac458699f1b66855b2a1d5
msgid ""
"None, or a callable taking `(page_num, medibox, dev, after)`; called at "
"start (`after=0`) and end (`after=1`) of each page."
msgstr ""

#: ../../story-class.rst:211 ../../story-class.rst:212
#: a189eaaab0804015836ef25c6447d6d8 c845b5d860e54f0fac03a1cdfb613c1d
msgid "."
msgstr ""

#: ../../story-class.rst:213 dd7193d3a2dd42999513f583e8866e09
msgid ""
"If true, we add unique ids to all header tags that don't already have an "
"id. This can help automatic generation of tables of contents."
msgstr ""

#: ../../story-class.rst:217 491f9ea2d9424171b72f7f68b3b1e47b
msgid "Returns:"
msgstr ""

#: ../../story-class.rst:218 a0f5a9ac43d64c8bbd086e0351ccb8d1
msgid "None."
msgstr ""

#: ../../story-class.rst:222 9791db0909f34fc089d75d240cb920f5
msgid ""
"Similar to `write()` except that we don't have a `writer` arg and we "
"return a PDF `Document` in which links have been created for each "
"internal html link."
msgstr ""

#: ../../story-class.rst:228 7bf6e91db46f4184ae8e7cb55fa9fdba
msgid ""
"Similar to `write_stabilized()` except that we don't have a `writer` arg "
"and instead return a PDF `Document` in which links have been created for "
"each internal html link."
msgstr ""

#: ../../story-class.rst:234 ac5e43f60f5e4b9194834c78f555b4a6
msgid "Element Positioning CallBack function"
msgstr ""

#: ../../story-class.rst:236 0059d4014b074483800e96a236a582a8
msgid ""
"The callback function can be used to log information about story output. "
"The function's access to the information is read-only: it has no way to "
"influence the story's output."
msgstr ""

#: ../../story-class.rst:238 22481dfec9d04c27a3789b803879a552
msgid ""
"A typical loop for executing a story with using this method would look "
"like this::"
msgstr ""

#: ../../story-class.rst:270 6b821039b52c47f79380864c6bd531d0
msgid "Attributes of the ElementPosition class"
msgstr ""

#: ../../story-class.rst:271 5bd9f49707404bd988dfd8dbffddfeb5
msgid ""
"Exactly one parameter must be passed to the function provided by "
":meth:`Story.element_positions`. It is an object with the following "
"attributes:"
msgstr ""

#: ../../story-class.rst:273 b0399f6ce3694bdb81045211749cc3f4
msgid ""
"The parameter passed to the `recorder` function is an object with the "
"following attributes:"
msgstr ""

#: ../../story-class.rst:275 27dfcbc36f1240ff8e03058661e7e62c
msgid "`elpos.depth` (int) -- depth of this element in the box structure."
msgstr ""

#: ../../story-class.rst:277 04213378c95b41e7a464173eb27db21f
msgid ""
"`elpos.heading` (int) -- the header level, 0 if no header, 1-6 for "
":htmlTag:`h1` - :htmlTag:`h6`."
msgstr ""

#: ../../story-class.rst:279 fdaca490aa4546ebad76aea189fcad25
msgid ""
"`elpos.href` (str) -- value of the `href`attribute, or None if not "
"defined."
msgstr ""

#: ../../story-class.rst:281 be56270d2ffd42ecbd5736708dad5cef
msgid "`elpos.id` (str) -- value of the `id` attribute, or None if not defined."
msgstr ""

#: ../../story-class.rst:283 aa88ed265986451980af1cf4e44776a1
msgid "`elpos.rect` (tuple) -- element position on page."
msgstr ""

#: ../../story-class.rst:285 f2b01be2fe8b4e7db4c2aa8f5f71fe40
msgid "`elpos.text` (str) -- immediate text of the element."
msgstr ""

#: ../../story-class.rst:287 e15669fadf1e4ce18c34930104d69232
msgid ""
"`elpos.open_close` (int bit field) -- bit 0 set: opens element, bit 1 "
"set: closes element. Relevant for elements that may contain other "
"elements and thus may not immediately be closed after being created / "
"opened."
msgstr ""

#: ../../story-class.rst:289 ae4f70be6542472083ee2718e0577465
msgid "`elpos.rect_num` (int) -- count of rectangles filled by the story so far."
msgstr ""

#: ../../story-class.rst:291 f650a0e0376a4a6ab1f645f690a5f817
msgid ""
"`elpos.page_num` (int) -- page number; only present when using "
"`fitz.Story.write*()` functions."
msgstr ""

#: ../../footer.rst:-1 574ff9510aa44e2a8671e6d397a8e157
msgid "Discord logo"
msgstr ""

#~ msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
#~ msgstr ""

#~ msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
#~ msgstr ""

