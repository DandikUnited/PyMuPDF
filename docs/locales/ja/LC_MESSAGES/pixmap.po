# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-27 14:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 792051d763f5430b976bb21fee5a5378
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 b4ec5b10e6544e1587d756a570521aa5
msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
msgstr ""

#: ../../header.rst:-1 514fa7bdf3b84a9dbeb282720d09bdd0
msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
msgstr ""

#: ../../pixmap.rst:7 03d3c4c408d14f2594241e908db2a364
msgid "Pixmap"
msgstr ""

#: ../../pixmap.rst:9 96d1171ae5ab4adc9a01edaf17a9de05
msgid ""
"Pixmaps (\"pixel maps\") are objects at the heart of MuPDF's rendering "
"capabilities. They represent plane rectangular sets of pixels. Each pixel"
" is described by a number of bytes (\"components\") defining its color, "
"plus an optional alpha byte defining its transparency."
msgstr ""

#: ../../pixmap.rst:11 ee5b1031007d4ca2b2728572aedc5f3c
msgid ""
"In PyMuPDF, there exist several ways to create a pixmap. Except the first"
" one, all of them are available as overloaded constructors. A pixmap can "
"be created ..."
msgstr ""

#: ../../pixmap.rst:13 bd149aaf2529443a8dc916c7a6d5dc16
msgid "from a document page (method :meth:`Page.get_pixmap`)"
msgstr ""

#: ../../pixmap.rst:14 2e7dcd392c5248e4bc323c9b32adba71
msgid "empty, based on :ref:`Colorspace` and :ref:`IRect` information"
msgstr ""

#: ../../pixmap.rst:15 eba527b70ed049e88c16d42dc1458c93
msgid "from a file"
msgstr ""

#: ../../pixmap.rst:16 29171d5c45dd457982a48fe065a71adb
msgid "from an in-memory image"
msgstr ""

#: ../../pixmap.rst:17 4f7dfb72c8004a2db49312751a78614f
msgid "from a memory area of plain pixels"
msgstr ""

#: ../../pixmap.rst:18 c497d4b14e9f4fb68975de0ca93aa555
msgid "from an image inside a PDF document"
msgstr ""

#: ../../pixmap.rst:19 c369a85b8f37488790ab62e8ae27e193
msgid "as a copy of another pixmap"
msgstr ""

#: ../../pixmap.rst:21 0c7fae928b21492da5c5c343405a4de9
msgid ""
"A number of image formats is supported as input for points 3. and 4. "
"above. See section :ref:`ImageFiles`."
msgstr ""

#: ../../pixmap.rst:23 9db39b21132642b48c9fa93de2e1f71c
msgid ""
"Have a look at the :ref:`FAQ` section to see some pixmap usage \"at "
"work\"."
msgstr ""

#: ../../pixmap.rst:26 ffa305b3602149089c283cf37e26859e
msgid "**Method / Attribute**"
msgstr ""

#: ../../pixmap.rst:26 35c80dc865e94dba89723ec9181255e9
msgid "**Short Description**"
msgstr ""

#: ../../pixmap.rst:28 f1057984870245f3b8a76984a1053bb3
msgid ":meth:`Pixmap.clear_with`"
msgstr ""

#: ../../pixmap.rst:28 c888103f1dce4267a70fd3450a85fb92
msgid "clear parts of the pixmap"
msgstr ""

#: ../../pixmap.rst:29 57f8a3d853de46c5b3891aaab89c1b33
msgid ":meth:`Pixmap.color_count`"
msgstr ""

#: ../../pixmap.rst:29 cb01c36fcb964ee0b4905388dcd8e726
msgid "determine used colors"
msgstr ""

#: ../../pixmap.rst:30 df685ea8ba1547e08f909cec8a055ebe
msgid ":meth:`Pixmap.color_topusage`"
msgstr ""

#: ../../pixmap.rst:30 3cda8871059c4bca96518a950e1e9e8a
msgid "determine share of most used color"
msgstr ""

#: ../../pixmap.rst:31 24eebe03268543ad8b1b213f53b977bd
msgid ":meth:`Pixmap.copy`"
msgstr ""

#: ../../pixmap.rst:31 63807087d6e04c1f9632ad93032f00a4
msgid "copy parts of another pixmap"
msgstr ""

#: ../../pixmap.rst:32 b37a8065d8124a21b109d6c32c3dc2ca
msgid ":meth:`Pixmap.gamma_with`"
msgstr ""

#: ../../pixmap.rst:32 8e1377afd0a0430d92c8f125be34023d
msgid "apply a gamma factor to the pixmap"
msgstr ""

#: ../../pixmap.rst:33 89a716d048da46d881fbf525cdd5e937
msgid ":meth:`Pixmap.invert_irect`"
msgstr ""

#: ../../pixmap.rst:33 3159c815436242f2afca9bceabe0f77c
msgid "invert the pixels of a given area"
msgstr ""

#: ../../pixmap.rst:34 fa7285e5f7eb47458398fdbe43edeb21
msgid ":meth:`Pixmap.pdfocr_save`"
msgstr ""

#: ../../pixmap.rst:34 ../../pixmap.rst:35 35ac292a9ed842979530b9033d1c55f5
#: 391a7375f5064ae9866f63bd45188241
msgid "save the pixmap as an OCRed 1-page PDF"
msgstr ""

#: ../../pixmap.rst:35 764ef9c5ba7d46b687955676e8d8871d
msgid ":meth:`Pixmap.pdfocr_tobytes`"
msgstr ""

#: ../../pixmap.rst:36 f4a9be6c18144fbb89c7f15e2692c6f9
msgid ":meth:`Pixmap.pil_save`"
msgstr ""

#: ../../pixmap.rst:36 39885e92555e4e85a4bee0f93c0364b9
msgid "save as image using pillow"
msgstr ""

#: ../../pixmap.rst:37 c9ed3e95b93b42a7a62a0eda235f84bb
msgid ":meth:`Pixmap.pil_tobytes`"
msgstr ""

#: ../../pixmap.rst:37 deb3f1ea1b3a474c9766da0357c1fd37
msgid "write to `bytes` object using pillow"
msgstr ""

#: ../../pixmap.rst:38 6d60eadf036f4b60961626e0d85c52f3
msgid ":meth:`Pixmap.pixel`"
msgstr ""

#: ../../pixmap.rst:38 e462e8d949484ae1995724f5d9127026
msgid "return the value of a pixel"
msgstr ""

#: ../../pixmap.rst:39 df500e4816c340aaa282b0e160d2ce54
msgid ":meth:`Pixmap.save`"
msgstr ""

#: ../../pixmap.rst:39 974f2d57aaa14d0985aeec3ebcafe516
msgid "save the pixmap in a variety of formats"
msgstr ""

#: ../../pixmap.rst:40 febbcb209e6e451faf6fa9830e964376
msgid ":meth:`Pixmap.set_alpha`"
msgstr ""

#: ../../pixmap.rst:40 e7ad98255ea847d2b466f03de9f253f5
msgid "set alpha values"
msgstr ""

#: ../../pixmap.rst:41 995442f4296d46e2bc39a1a5d578c3c9
msgid ":meth:`Pixmap.set_dpi`"
msgstr ""

#: ../../pixmap.rst:41 9e4091eaa1fe4079ad7485d199e685e4
msgid "set the image resolution"
msgstr ""

#: ../../pixmap.rst:42 c217dac14ea242349e934450f5fe05bd
msgid ":meth:`Pixmap.set_origin`"
msgstr ""

#: ../../pixmap.rst:42 ae92cebca5954f00ae03b10e12243ae2
msgid "set pixmap x,y values"
msgstr ""

#: ../../pixmap.rst:43 212a0ea80fec493eb93a3cbeebc7ece7
msgid ":meth:`Pixmap.set_pixel`"
msgstr ""

#: ../../pixmap.rst:43 65cc501d0979426eb0348b960d0ac94d
msgid "set color and alpha of a pixel"
msgstr ""

#: ../../pixmap.rst:44 49593691afe347fe8a3bb3a42e48fc5a
msgid ":meth:`Pixmap.set_rect`"
msgstr ""

#: ../../pixmap.rst:44 0ffbb5197857460cbf4ee7131db11798
msgid "set color and alpha of all pixels in a rectangle"
msgstr ""

#: ../../pixmap.rst:45 78497f86218e4d6ba50e914976dea3f4
msgid ":meth:`Pixmap.shrink`"
msgstr ""

#: ../../pixmap.rst:45 755270dc4245402790c1a82e072b99c9
msgid "reduce size keeping proportions"
msgstr ""

#: ../../pixmap.rst:46 3919922845d14311bc7a2a3c93f81c23
msgid ":meth:`Pixmap.tint_with`"
msgstr ""

#: ../../pixmap.rst:46 15f45274a9c04145a8aabab76487ac7b
msgid "tint the pixmap"
msgstr ""

#: ../../pixmap.rst:47 cf4952992f654329977d4893062a0e96
msgid ":meth:`Pixmap.tobytes`"
msgstr ""

#: ../../pixmap.rst:47 2a153092787345b48f7d2207d7a4231b
msgid "return a memory area in a variety of formats"
msgstr ""

#: ../../pixmap.rst:48 1a062c02684c471d827e3263928fe674
msgid ":meth:`Pixmap.warp`"
msgstr ""

#: ../../pixmap.rst:48 6dffe4bfe8e74d66b152f8d95703b4bc
msgid "return a pixmap made from a quad inside"
msgstr ""

#: ../../pixmap.rst:49 8ec2b3fe273143efad26d85ad72a1151
msgid ":attr:`Pixmap.alpha`"
msgstr ""

#: ../../pixmap.rst:49 8669904b0f3647fd97e27b3541aa116c
msgid "transparency indicator"
msgstr ""

#: ../../pixmap.rst:50 7a1e927035914f0cb92df95492abd771
msgid ":attr:`Pixmap.colorspace`"
msgstr ""

#: ../../pixmap.rst:50 39d3d80ac5364d7f865463a70272edb6
msgid "pixmap's :ref:`Colorspace`"
msgstr ""

#: ../../pixmap.rst:51 9901a876e846420d9597d06970a0a0ed
msgid ":attr:`Pixmap.digest`"
msgstr ""

#: ../../pixmap.rst:51 d5abdfdf195d41519b65b43cfb0e79fe
msgid "MD5 hashcode of the pixmap"
msgstr ""

#: ../../pixmap.rst:52 1a7bd6596fa54d66bfa80882c780ea09
msgid ":attr:`Pixmap.height`"
msgstr ""

#: ../../pixmap.rst:52 450488c45e5c4099a63ba81a4db92b66
msgid "pixmap height"
msgstr ""

#: ../../pixmap.rst:53 7ca7c635f9e242bab0eca513f117cbda
msgid ":attr:`Pixmap.interpolate`"
msgstr ""

#: ../../pixmap.rst:53 a5442117ec0c4da09ae77ce4674c6d51
msgid "interpolation method indicator"
msgstr ""

#: ../../pixmap.rst:54 f9a610ca6845456786ce589af7948770
msgid ":attr:`Pixmap.is_monochrome`"
msgstr ""

#: ../../pixmap.rst:54 71a6d3e7106c4335b28bbe7741736ad5
msgid "check if only black and white occur"
msgstr ""

#: ../../pixmap.rst:55 95d9ccfec4f64d3ab62515174fec0d4a
msgid ":attr:`Pixmap.is_unicolor`"
msgstr ""

#: ../../pixmap.rst:55 232e144ed5da47fd90890c17db312ecd
msgid "check if only one color occurs"
msgstr ""

#: ../../pixmap.rst:56 ac91bb03b78043faaf406386861c9a3e
msgid ":attr:`Pixmap.irect`"
msgstr ""

#: ../../pixmap.rst:56 3b5c2005d9c14d2bae478029930f0eff
msgid ":ref:`IRect` of the pixmap"
msgstr ""

#: ../../pixmap.rst:57 c749ea2b7e5d46fd93ae106bc8653299
msgid ":attr:`Pixmap.n`"
msgstr ""

#: ../../pixmap.rst:57 85714650789645f9a3c125b28f4ca608
msgid "bytes per pixel"
msgstr ""

#: ../../pixmap.rst:58 dfe5f10ec2db410d9b6e5dfca198695a
msgid ":attr:`Pixmap.samples_mv`"
msgstr ""

#: ../../pixmap.rst:58 999b029eb8f94074afdb2df91abda34e
msgid "`memoryview` of pixel area"
msgstr ""

#: ../../pixmap.rst:59 16fca537aa17477d860b21bdee6ab77b
msgid ":attr:`Pixmap.samples_ptr`"
msgstr ""

#: ../../pixmap.rst:59 a8faf8e5b3564276bafca3715bb7b548
msgid "Python pointer to pixel area"
msgstr ""

#: ../../pixmap.rst:60 44988ce9947a4ccaafb3f04f0310ff73
msgid ":attr:`Pixmap.samples`"
msgstr ""

#: ../../pixmap.rst:60 9ea8bfdb89f7419591327d30b56e07ae
msgid "`bytes` copy of pixel area"
msgstr ""

#: ../../pixmap.rst:61 93a651e85a52400a947701e305746a77
msgid ":attr:`Pixmap.size`"
msgstr ""

#: ../../pixmap.rst:61 c77e1cb13df14529bb2f7a7b2e7a67d5
msgid "pixmap's total length"
msgstr ""

#: ../../pixmap.rst:62 aae68c29fb95475399b20585cb3f275a
msgid ":attr:`Pixmap.stride`"
msgstr ""

#: ../../pixmap.rst:62 ff6eeb368ec24c1ca4709eacf37ff8d6
msgid "size of one image row"
msgstr ""

#: ../../pixmap.rst:63 3be32effa8c3447ab941be475fd9a62b
msgid ":attr:`Pixmap.width`"
msgstr ""

#: ../../pixmap.rst:63 335043db3e6c49e3985dde4daf7be4ba
msgid "pixmap width"
msgstr ""

#: ../../pixmap.rst:64 ae774662ce8040a58fe7b69a7ef408ad
msgid ":attr:`Pixmap.x`"
msgstr ""

#: ../../pixmap.rst:64 c327ab825a1a4988b8debd9ec4d52f2f
msgid "X-coordinate of top-left corner"
msgstr ""

#: ../../pixmap.rst:65 81cf72b5725f4110898e0972c2fdc7ca
msgid ":attr:`Pixmap.xres`"
msgstr ""

#: ../../pixmap.rst:65 a67bc7080ef541deb9c751059fdf8017
msgid "resolution in X-direction"
msgstr ""

#: ../../pixmap.rst:66 8b81b01d49834aa4962d59582f992da8
msgid ":attr:`Pixmap.y`"
msgstr ""

#: ../../pixmap.rst:66 2e42e73d77b74f088177972b832b92f7
msgid "Y-coordinate of top-left corner"
msgstr ""

#: ../../pixmap.rst:67 2095ca1339604971af22efd5fe7e2faf
msgid ":attr:`Pixmap.yres`"
msgstr ""

#: ../../pixmap.rst:67 8861e4bd3ccb41f78cf4f9d83f1557e7
msgid "resolution in Y-direction"
msgstr ""

#: ../../pixmap.rst:70 0bf7d8aac06f49368947630d7a1f899a
msgid "**Class API**"
msgstr ""

#: ../../pixmap.rst:76 44d64f01ee2245e4956e3c315d10c054
msgid ""
"**New empty pixmap:** Create an empty pixmap of size and origin given by "
"the rectangle. So, *irect.top_left* designates the top left corner of the"
" pixmap, and its width and height are *irect.width* resp. *irect.height*."
" Note that the image area is **not initialized** and will contain crap "
"data -- use eg. :meth:`clear_with` or :meth:`set_rect` to be sure."
msgstr ""

#: ../../pixmap.rst 0267f7c040b34838bc7d13366069db8f
#: 0e3c50e028544187a678729270ca61d0 207c3083471f4644bb736acf9fd303d9
#: 2cfb2ec2a78b4db19a272200f95fc4d7 2e78519367794d66b2f1b6385bf46e86
#: 34c3140cacce4cb191db44ccb4203b1e 3b4060a506e94b0e990a1404865a9133
#: 3c194862e42b4741b134bdea19a6f9e9 474899934d194344ad62c2b3c7214f4d
#: 4834b45edb174671b8bcaafbb0306e21 50db8c9f1474430bbd54b136d26d5af6
#: 52b2dc4940354e159aa1147c85bd9423 55a86c5426f14cc6a680898cb9103b5a
#: 5b617da0a5fb4ffba24f0edf267a8c80 5cefc4a3921c4745a265532e4e00d123
#: 637e2fa9914740799bba6b8e15dc0871 6f5fa9a8e71247f184994e7a9eb007fc
#: 7228d47782d941328a9fcdfa5c6a0664 74b33afa63b448f8a27d6d61b7d5a04f
#: 7e625f60e5944553a0f53218f82a9d5f a872480734cf4905879b681df6923f39
#: b8f59f8c216b47e4aca60f1024c0dfd4 baabcc360e8140be93cb975247f350ae
#: c4e8c7fbf7914db28c70484a9aaaff02 d365cda8f9d14929b8a260a675908f19
#: dd130602adce4bf98f8257881d621b41 f549db7675e549908d09a34cece39ac0
msgid "Parameters"
msgstr ""

#: ../../pixmap.rst:78 36c8521988e346108bab047a04097406
msgid "colorspace."
msgstr ""

#: ../../pixmap.rst:81 c427b7ed1c9943408861454b62d42ad1
msgid "The pixmap's position and dimension."
msgstr ""

#: ../../pixmap.rst:83 39399b33814741a6b92f059e2c9519a7
msgid ""
"Specifies whether transparency bytes should be included. Default is "
"*False*."
msgstr ""

#: ../../pixmap.rst:87 793041056fda4f54bc14d58a42034d42
msgid ""
"**Copy and set colorspace:** Copy *source* pixmap converting colorspace. "
"Any colorspace combination is possible, but source colorspace must not be"
" *None*."
msgstr ""

#: ../../pixmap.rst:89 f5107fae7d664d2685f340093072aaf9
msgid ""
"desired **target** colorspace. This **may also be** *None*. In this case,"
" a \"masking\" pixmap is created: its :attr:`Pixmap.samples` will consist"
" of the source's alpha bytes only."
msgstr ""

#: ../../pixmap.rst:92 ../../pixmap.rst:111 a81c0fd0425f4e94990188195b4a01e5
#: e15e156a16094cbe8f8c308b5b85b680
msgid "the source pixmap."
msgstr ""

#: ../../pixmap.rst:97 33a5a88a2a2b4454bd4012b52e887d6a
msgid "New in v1.18.18"
msgstr ""

#: ../../pixmap.rst:99 fdcc65e622d24d2eb7b0e8976b6400e9
msgid ""
"**Copy and add image mask:** Copy *source* pixmap, add an alpha channel "
"with transparency data from a mask pixmap."
msgstr ""

#: ../../pixmap.rst:101 76fdb2eee2b64f448679389c6d06137a
msgid "pixmap without alpha channel."
msgstr ""

#: ../../pixmap.rst:104 f1a0c5e38b3e4957b0bccf469836f6f6
msgid "a mask pixmap. Must be a graysale pixmap."
msgstr ""

#: ../../pixmap.rst:109 6114afded9f9492f89262bf98b94a728
msgid ""
"**Copy and scale:** Copy *source* pixmap, scaling new width and height "
"values -- the image will appear stretched or shrunk accordingly. Supports"
" partial copying. The source colorspace may be *None*."
msgstr ""

#: ../../pixmap.rst:114 0d0db581e46f4e61a3511dd1f6bd8454
msgid "desired target width."
msgstr ""

#: ../../pixmap.rst:116 c916fc91de864ba1bca7e951ce6fd2af
msgid "desired target height."
msgstr ""

#: ../../pixmap.rst:118 f2268a61389c444ba8786690f7156637
msgid "restrict the resulting pixmap to this region of the **scaled** pixmap."
msgstr ""

#: ../../pixmap.rst:120 a569e81dcc364cf4a20b6587f8a9c13d
msgid ""
"If width or height do not *represent* integers (i.e. `value.is_integer() "
"!= True`), then the resulting pixmap **will have an alpha channel**."
msgstr ""

#: ../../pixmap.rst:124 ea628ab08b0242aabb26312be6ff9b07
msgid ""
"**Copy and add or drop alpha:** Copy *source* and add or drop its alpha "
"channel. Identical copy if *alpha* equals *source.alpha*. If an alpha "
"channel is added, its values will be set to 255."
msgstr ""

#: ../../pixmap.rst:126 ../../pixmap.rst:304 614f54aa2d854751929c069218d65f4d
#: f4597e8cf547480084623470a71b6aa8
msgid "source pixmap."
msgstr ""

#: ../../pixmap.rst:129 4df1fd77e9cd4bd3929fed440668b656
msgid ""
"whether the target will have an alpha channel, default and mandatory if "
"source colorspace is *None*."
msgstr ""

#: ../../pixmap.rst:131 098f658780764fd0aef8f630689777e8
msgid ""
"A typical use includes separation of color and transparency bytes in "
"separate pixmaps. Some applications require this like e.g. "
"*wx.Bitmap.FromBufferAndAlpha()* of *wxPython*:"
msgstr ""

#: ../../pixmap.rst:141 ba69d48fdc084b6c93fd5c46b6c3075c
msgid ""
"**From a file:** Create a pixmap from *filename*. All properties are "
"inferred from the input. The origin of the resulting pixmap is *(0, 0)*."
msgstr ""

#: ../../pixmap.rst:143 ee0b4dd38a1143179905cf58df1d3832
msgid "Path of the image file."
msgstr ""

#: ../../pixmap.rst:147 deb59bc05c1148418adf2268d84d22ea
msgid ""
"**From memory:** Create a pixmap from a memory area. All properties are "
"inferred from the input. The origin of the resulting pixmap is *(0, 0)*."
msgstr ""

#: ../../pixmap.rst:149 11e734e8b82a4b1f8db529b7dec7f2a9
msgid ""
"Data containing a complete, valid image. Could have been created by e.g. "
"*stream = bytearray(open('image.file', 'rb').read())*. Type *bytes* is "
"supported in **Python 3 only**, because *bytes == str* in Python 2 and "
"the method will interpret the stream as a filename.  *Changed in version "
"1.14.13:* *io.BytesIO* is now also supported."
msgstr ""

#: ../../pixmap.rst:149 ac9c1d3739fb45139fc3003f989ec799
msgid ""
"Data containing a complete, valid image. Could have been created by e.g. "
"*stream = bytearray(open('image.file', 'rb').read())*. Type *bytes* is "
"supported in **Python 3 only**, because *bytes == str* in Python 2 and "
"the method will interpret the stream as a filename."
msgstr ""

#: ../../pixmap.rst:151 44d8cfab31404e16bf834439cd84cb9e
msgid "*Changed in version 1.14.13:* *io.BytesIO* is now also supported."
msgstr ""

#: ../../pixmap.rst:156 5ea851e2f9784f7798d9ce6ca6da8ffa
msgid ""
"**From plain pixels:** Create a pixmap from *samples*. Each pixel must be"
" represented by a number of bytes as controlled by the *colorspace* and "
"*alpha* parameters. The origin of the resulting pixmap is *(0, 0)*. This "
"method is useful when raw image data are provided by some other program "
"-- see :ref:`FAQ`."
msgstr ""

#: ../../pixmap.rst:158 181e8de5281f4efcb3cd5c9de22e2547
msgid "Colorspace of image."
msgstr ""

#: ../../pixmap.rst:161 4e8f22237f4e403d8ba816395a75360c
msgid "image width"
msgstr ""

#: ../../pixmap.rst:163 9a561256df824c959d570fad42c9cb79
msgid "image height"
msgstr ""

#: ../../pixmap.rst:165 2c22532f23194b1fa049957dc96751ec
msgid ""
"an area containing all pixels of the image. Must include alpha values if "
"specified.  *Changed in version 1.14.13:* (1) *io.BytesIO* can now also "
"be used. (2) Data are now **copied** to the pixmap, so may safely be "
"deleted or become unavailable."
msgstr ""

#: ../../pixmap.rst:165 b857e6a85bcc4c6da6c4ebb517c3720b
msgid ""
"an area containing all pixels of the image. Must include alpha values if "
"specified."
msgstr ""

#: ../../pixmap.rst:167 84f370860e4b47ee870d558169ce9fad
msgid ""
"*Changed in version 1.14.13:* (1) *io.BytesIO* can now also be used. (2) "
"Data are now **copied** to the pixmap, so may safely be deleted or become"
" unavailable."
msgstr ""

#: ../../pixmap.rst:169 8769f29aa6864f02aeb36d283711ab53
msgid "whether a transparency channel is included."
msgstr ""

#: ../../pixmap.rst:173 0e3f0110d1c94e9ba5269e5c903ab031
msgid ""
"The following equation **must be true**: *(colorspace.n + alpha) * width "
"* height == len(samples)*."
msgstr ""

#: ../../pixmap.rst:174 f3e3e71eb0374843b8f0d248c7f28840
msgid ""
"Starting with version 1.14.13, the samples data are **copied** to the "
"pixmap."
msgstr ""

#: ../../pixmap.rst:179 73a9fb43e3ec49c8b449d3083ed70668
msgid ""
"**From a PDF image:** Create a pixmap from an image **contained in PDF** "
"*doc* identified by its :data:`xref`. All pimap properties are set by the"
" image. Have a look at `extract-img1.py "
"<https://github.com/pymupdf/PyMuPDF/tree/master/demo/extract-img1.py>`_ "
"and `extract-img2.py <https://github.com/pymupdf/PyMuPDF/tree/master/demo"
"/extract-img2.py>`_ to see how this can be used to recover all of a PDF's"
" images."
msgstr ""

#: ../../pixmap.rst:181 eab445ba9fd24df8aaacfae5a5b90e16
msgid "an opened **PDF** document."
msgstr ""

#: ../../pixmap.rst:184 ad3ffd98bd4d4da38100ad933b59080f
msgid ""
"the :data:`xref` of an image object. For example, you can make a list of "
"images used on a particular page with :meth:`Document.get_page_images`, "
"which also shows the :data:`xref` numbers of each image."
msgstr ""

#: ../../pixmap.rst:188 9d5eef6e7db640cbb8c0e599329aa9fa
msgid "Initialize the samples area."
msgstr ""

#: ../../pixmap.rst:190 0d8018f0f2f04a2eb56039b5a4341ba6
msgid ""
"if specified, values from 0 to 255 are valid. Each color byte of each "
"pixel will be set to this value, while alpha will be set to 255 (non-"
"transparent) if present. If omitted, then all bytes (including any alpha)"
" are cleared to *0x00*."
msgstr ""

#: ../../pixmap.rst:192 898fb5f583244028ae2a2723211f0d90
msgid ""
"the area to be cleared. Omit to clear the whole pixmap. Can only be "
"specified, if *value* is also specified."
msgstr ""

#: ../../pixmap.rst:196 ecfc097bc0db4352ba5d66a7a95d1a37
msgid ""
"Colorize a pixmap by replacing black and / or white with colors given as "
"**sRGB integer** values. Only colorspaces :data:`CS_GRAY` and "
":data:`CS_RGB` are supported, others are ignored with a warning."
msgstr ""

#: ../../pixmap.rst:198 1b2f99dc565e434388219a1a5ea06881
msgid ""
"If the colorspace is :data:`CS_GRAY`, the average *(red + green + "
"blue)/3* will be taken. The pixmap will be changed in place."
msgstr ""

#: ../../pixmap.rst:200 7d7092fd33ac45669b43c341e88ac8b5
msgid "replace black with this value. Specifying 0x000000 makes no changes."
msgstr ""

#: ../../pixmap.rst:201 74a8014b18f4452db82ea7f190bfd846
msgid "replace white with this value. Specifying 0xFFFFFF makes no changes."
msgstr ""

#: ../../pixmap.rst:203 fd790081d18446fc96204e82a5e1586d
msgid "Examples:"
msgstr ""

#: ../../pixmap.rst:205 690ec755403a47fdaba1f51eedd5b185
msgid "`tint_with(0x000000, 0xFFFFFF)` is a no-op."
msgstr ""

#: ../../pixmap.rst:206 1c9194d1d0174b75a1e484594f05313f
msgid ""
"`tint_with(0x00FF00, 0xFFFFFF)` changes black to green, leaves white "
"intact."
msgstr ""

#: ../../pixmap.rst:207 2125a1af494f4edbbc81e16fe29a911f
msgid "`tint_with(0xFF0000, 0x0000FF)` changes black to red and white to blue."
msgstr ""

#: ../../pixmap.rst:212 aeb955e449d24676b7d0cabc346b6583
msgid ""
"Apply a gamma factor to a pixmap, i.e. lighten or darken it. Pixmaps with"
" colorspace *None* are ignored with a warning."
msgstr ""

#: ../../pixmap.rst:214 c14263029dd140918cde4ed6b51d7d0b
msgid ""
"*gamma = 1.0* does nothing, *gamma < 1.0* lightens, *gamma > 1.0* darkens"
" the image."
msgstr ""

#: ../../pixmap.rst:218 283e34a6c35b4781a4b2daceb027c65d
msgid "Shrink the pixmap by dividing both, its width and height by 2\\ :sup:`n`."
msgstr ""

#: ../../pixmap.rst:220 b5d10510b3ad4e1195553bbd946ece7d
msgid ""
"determines the new pixmap (samples) size. For example, a value of 2 "
"divides width and height by 4 and thus results in a size of one 16\\ "
":sup:`th` of the original. Values less than 1 are ignored with a warning."
msgstr ""

#: ../../pixmap.rst:222 157f58b8a9114caaa3f9e89228256fe0
msgid ""
"Use this methods to reduce a pixmap's size retaining its proportion. The "
"pixmap is changed \"in place\". If you want to keep original and also "
"have more granular choices, use the resp. copy constructor above."
msgstr ""

#: ../../pixmap.rst:226 296ada505d8e48a7bedac8f26f9a0f64
msgid ""
"*New in version:: 1.14.5:* Return the value of the pixel at location (x, "
"y) (column, line)."
msgstr ""

#: ../../pixmap.rst:228 ../../pixmap.rst:238 0f07b085906d444687bdffdcd1a29f89
#: 78f868bf2b644d108144cdb675b1e2d9
msgid "the column number of the pixel. Must be in `range(pix.width)`."
msgstr ""

#: ../../pixmap.rst:229 b17c77a0ad454999b4774799c1112474
msgid "the line number of the pixel, Must be in `range(pix.height)`."
msgstr ""

#: ../../pixmap.rst 006cf4e77a5e4281ba4610047d7eb8b7
#: 066330faddfc4b87afbe228a6ec7658a 51ff060596c64928afdeb35ad7eb4d09
#: a7133611533440559086822ca869fc1a b502ab2de20f42d3a2fc96df95955ea9
#: d2b096a3dba84b428faad9fa9501d374 eb213179ddb74f20b203e6a8d12e1683
msgid "Return type"
msgstr ""

#: ../../pixmap.rst 0b47e646ebad4caba7e792d65db18424
#: 0b7a3fae549e4ff79bfe1c1ea60302e1 6c3f00c52eeb449d883da1d4ee8a0433
#: 7693d13d98044b92a8b6cbb9d0a2af88 a6112e82c20a4105b8d2bb66213c12e2
#: f04c926ff8544cb7b4e7e9e6d716a271
msgid "Returns"
msgstr ""

#: ../../pixmap.rst:232 2451e1a90b00403d897e2ca5f611c73e
msgid ""
"a list of color values and, potentially the alpha value. Its length and "
"content depend on the pixmap's colorspace and the presence of an alpha. "
"For RGBA pixmaps the result would e.g. be *[r, g, b, a]*. All items are "
"integers in `range(256)`."
msgstr ""

#: ../../pixmap.rst:236 43c47900f505401b877b5f8901b8d2e9
msgid ""
"*New in version 1.14.7:* Manipulate the pixel at location (x, y) (column,"
" line)."
msgstr ""

#: ../../pixmap.rst:239 b5ea7e3dd38941beaea2506cf0c11950
msgid "the line number of the pixel. Must be in `range(pix.height)`."
msgstr ""

#: ../../pixmap.rst:240 f22153db552242f3a504e53f7a7ba276
msgid ""
"the desired pixel value given as a sequence of integers in `range(256)`. "
"The length of the sequence must equal :attr:`Pixmap.n`, which includes "
"any alpha byte."
msgstr ""

#: ../../pixmap.rst:244 e4e4a111e8c248dfaeaa6604673637e1
msgid "*New in version 1.14.8:* Set the pixels of a rectangle to a value."
msgstr ""

#: ../../pixmap.rst:246 5892e81aac2c4ace9f324a77155db219
msgid ""
"the rectangle to be filled with the value. The actual area is the "
"intersection of this parameter and :attr:`Pixmap.irect`. For an empty "
"intersection (or an invalid parameter), no change will happen."
msgstr ""

#: ../../pixmap.rst:247 97abed6771dd48338a2dca02c6963cca
msgid ""
"the desired value, given as a sequence of integers in `range(256)`. The "
"length of the sequence must equal :attr:`Pixmap.n`, which includes any "
"alpha byte."
msgstr ""

#: ../../pixmap.rst:250 900126f15c4e42408f98c74c67029b79
msgid ""
"*False* if the rectangle was invalid or had an empty intersection with "
":attr:`Pixmap.irect`, else *True*."
msgstr ""

#: ../../pixmap.rst:254 b9f19db4046e42a2afc6a75ccfe56ff7
msgid ""
"This method is equivalent to :meth:`Pixmap.set_pixel` executed for each "
"pixel in the rectangle, but is obviously **very much faster** if many "
"pixels are involved."
msgstr ""

#: ../../pixmap.rst:255 acc9c90426974c4ab68fba909e3ac30f
msgid ""
"This method can be used similar to :meth:`Pixmap.clear_with` to "
"initialize a pixmap with a certain color like this: "
"*pix.set_rect(pix.irect, (255, 255, 0))* (RGB example, colors the "
"complete pixmap with yellow)."
msgstr ""

#: ../../pixmap.rst:259 f6439952133f464fb094f62328706f8a
msgid "New in v1.17.7"
msgstr ""

#: ../../pixmap.rst:261 7563d354d0d6430a8b922d133f7f532a
msgid "Set the x and y values of the pixmap's top-left point."
msgstr ""

#: ../../pixmap.rst:263 2757b00f5ebe46e48a6ec14f22b0b559
msgid "x coordinate"
msgstr ""

#: ../../pixmap.rst:264 546fcde3cf9040e98850af44f646ddf0
msgid "y coordinate"
msgstr ""

#: ../../pixmap.rst:269 0f102bce23ba4d07bc1213c289f9a86f
msgid "New in v1.16.17"
msgstr ""

#: ../../pixmap.rst:271 ca827fcbcbf04c9593104568de2e4e71
msgid ""
"Changed in v1.18.0: When saving as a PNG image, these values will be "
"stored now."
msgstr ""

#: ../../pixmap.rst:273 84797ee74b1b41739d45bf20d275072e
msgid "Set the resolution (dpi) in x and y direction."
msgstr ""

#: ../../pixmap.rst:275 99bd9255e106415f96f35db461865eb2
msgid "resolution in x direction."
msgstr ""

#: ../../pixmap.rst:276 35ca8e2814b54f8692342cee9287ad02
msgid "resolution in y direction."
msgstr ""

#: ../../pixmap.rst:281 160b728bcc9e4f76b4c9e65fef540783
msgid "Changed in v 1.18.13"
msgstr ""

#: ../../pixmap.rst:283 a6a60f42bb9343e3a3500a8f714c9840
msgid "Change the alpha values. The pixmap must have an alpha channel."
msgstr ""

#: ../../pixmap.rst:285 5b5646c98b91458ca91a82972769792b
msgid ""
"the new alpha values. If provided, its length must be at least *width * "
"height*. If omitted (`None`), all alpha values are set to 255 (no "
"transparency). *Changed in version 1.14.13:* *io.BytesIO* is now also "
"accepted."
msgstr ""

#: ../../pixmap.rst:286 16a635bbbfdf4b3bb1b60b9148c19bb5
msgid ""
"*New in v1.18.13:* whether to premultiply color components with the alpha"
" value."
msgstr ""

#: ../../pixmap.rst:287 feaf4470f3c94f718f0d3939c58deae4
msgid ""
"ignore the alpha value and set this color to fully transparent. A "
"sequence of integers in `range(256)` with a length of :attr:`Pixmap.n`. "
"Default is *None*. For example, a typical choice for RGB would be "
"`opaque=(255, 255, 255)` (white)."
msgstr ""

#: ../../pixmap.rst:292 63c8d627738c43eb9700dc5939a30088
msgid ""
"Invert the color of all pixels in :ref:`IRect` *irect*. Will have no "
"effect if colorspace is *None*."
msgstr ""

#: ../../pixmap.rst:294 443d8415c0984ebe92fde5af5b10d438
msgid "The area to be inverted. Omit to invert everything."
msgstr ""

#: ../../pixmap.rst:298 590a354d065348c2bdfd04884b816475
msgid ""
"Copy the *irect* part of the *source* pixmap into the corresponding area "
"of this one. The two pixmaps may have different dimensions and can each "
"have :data:`CS_GRAY` or :data:`CS_RGB` colorspaces, but they currently "
"**must** have the same alpha property [#f2]_. The copy mechanism "
"automatically adjusts discrepancies between source and target like so:"
msgstr ""

#: ../../pixmap.rst:300 9200ee7af5aa49338d9716d21b789d45
msgid ""
"If copying from :data:`CS_GRAY` to :data:`CS_RGB`, the source gray-shade "
"value will be put into each of the three rgb component bytes. If the "
"other way round, *(r + g + b) / 3* will be taken as the gray-shade value "
"of the target."
msgstr ""

#: ../../pixmap.rst:302 0ea26c9edda840ff92e6f076a8516ea8
msgid ""
"Between *irect* and the target pixmap's rectangle, an \"intersection\" is"
" calculated at first. This takes into account the rectangle coordinates "
"and the current attribute values :attr:`Pixmap.x` and :attr:`Pixmap.y` "
"(which you are free to modify for this purpose via "
":meth:`Pixmap.set_origin`). Then the corresponding data of this "
"intersection are copied. If the intersection is empty, nothing will "
"happen."
msgstr ""

#: ../../pixmap.rst:307 ca93f62d98f145ba8300b45741612b9d
msgid "The area to be copied."
msgstr ""

#: ../../pixmap.rst:309 3d6232809d2c49788af28e57f7ee3a95
msgid ""
"Example: Suppose you have two pixmaps, `pix1` and `pix2` and you want to "
"copy the lower right quarter of `pix2` to `pix1` such that it starts at "
"the top-left point of `pix1`. Use the following snippet::"
msgstr ""

#: ../../pixmap.rst:328 a1c37dfe93a141949bf8c1872c000ba4
msgid ""
"Changed in v1.22.0: Added **direct support of JPEG** images. Image "
"quality can be controlled via parameter \"jpg_quality\"."
msgstr ""

#: ../../pixmap.rst:330 d26343d462284462932eeb9ffdd23857
msgid ""
"Save pixmap as an image file. Depending on the output chosen, only some "
"or all colorspaces are supported and different file extensions can be "
"chosen. Please see the table below."
msgstr ""

#: ../../pixmap.rst:332 e17469834bc142048a3b59d2e72ff387
msgid ""
"The file to save to. May be provided as a string, as a ``pathlib.Path`` "
"or as a Python file object. In the latter two cases, the filename is "
"taken from the resp. object. The filename's extension determines the "
"image format, which can be overruled by the output parameter."
msgstr ""

#: ../../pixmap.rst:334 3649158ce11f41be9273518a23e2f1f6
msgid ""
"The desired image format. The default is the filename's extension. If "
"both, this value and the file extension are unsupported, an exception is "
"raised. For possible values see :ref:`PixmapOutput`."
msgstr ""

#: ../../pixmap.rst:335 ../../pixmap.rst:345 8647e089ca34498781f6615f45f8f64b
#: cea2294274354ed188399c55784019af
msgid ""
"The desired image quality, default 95. Only applies to JPEG images, else "
"ignored. This parameter trades quality against file size. A value of 98 "
"is close to lossless. Higher values should not lead to better quality."
msgstr ""

#: ../../pixmap.rst c371179614af4cee8bb48ba0cdfe7c7c
#: dfa1566d80144135b31593c3e6dffc0a e6957c008116485b866772e339a3fda1
msgid "Raises"
msgstr ""

#: ../../pixmap.rst:337 ../../pixmap.rst:347 2033d51660cc484381f209c6bee74552
#: 78b5c74ffe9c4c5ab3d2510a84e09f42
msgid "For unsupported image formats."
msgstr ""

#: ../../pixmap.rst:341 27daab5122d3459488251459eeec7087
msgid ""
"New in version 1.14.5: Return the pixmap as a *bytes* memory object of "
"the specified format -- similar to :meth:`save`."
msgstr ""

#: ../../pixmap.rst:342 c4f2a6e002524d9ca09d7cf335d3ad0b
msgid ""
"Changed in v1.22.0: Added **direct JPEG support**. Image quality can be "
"influenced via new parameter \"jpg_quality\"."
msgstr ""

#: ../../pixmap.rst:344 e24eb58d96544198872b18b73c634260
msgid ""
"The desired image format. The default is \"png\". For possible values see"
" :ref:`PixmapOutput`."
msgstr ""

#: ../../pixmap.rst:350 6de550447f5640799cec205fe52531cd
msgid ""
"The requested image format. The default is \"png\". For other possible "
"values see :ref:`PixmapOutput`."
msgstr ""

#: ../../pixmap.rst:354 ../../pixmap.rst:369 44710ffd4c5946e1bd1c289655c47663
#: 4c4e42ff496549bba2692088e4ab148c
msgid "New in v1.19.0"
msgstr ""

#: ../../pixmap.rst:356 ../../pixmap.rst:371 ba0daba9f6604fae8524571a106254b1
#: c30a4bde01634d3fae9fae21c3d14a3f
msgid "Changed in v1.22.5: Support of new parameter for Tesseract's tessdata."
msgstr ""

#: ../../pixmap.rst:358 d621c8121dca4edb8a0c33325c0bbd89
msgid ""
"Perform text recognition using Tesseract and save the image as a 1-page "
"PDF with an OCR text layer."
msgstr ""

#: ../../pixmap.rst:360 190f97640e0844219020b80ce9e88f70
msgid ""
"identifies the file to save to. May be either a string or a pointer to a "
"file opened with \"wb\" (includes `io.BytesIO()` objects)."
msgstr ""

#: ../../pixmap.rst:361 6dc119ee123046d69542e4f80c816ca9
msgid "whether to compress the resulting PDF, default is `True`."
msgstr ""

#: ../../pixmap.rst:362 5c70a2bf5c23442c917d4a78e2f26abd
msgid ""
"the languages occurring in the image. This must be specified in Tesseract"
" format. Default is \"eng\" for English. Use \"+\"-separated Tesseract "
"language codes for multiple languages, like \"eng+spa\" for English and "
"Spanish."
msgstr ""

#: ../../pixmap.rst:363 7c6d0534593f457ebf5afe00eaa8d932
msgid ""
": arg str tessdata: folder name of Tesseract's language support. If "
"omitted, this information must be present as environment variable "
"`TESSDATA_PREFIX`."
msgstr ""

#: ../../pixmap.rst:365 b393703cee8341ac8680c6fafa40158b
msgid ""
"**Will fail** if Tesseract is not installed or if the environment "
"variable \"TESSDATA_PREFIX\" is not set to the `tessdata` folder name and"
" not provided as parameter."
msgstr ""

#: ../../pixmap.rst:373 b5f90d942f534532924f78d2492cfc5c
msgid ""
"Perform text recognition using Tesseract and convert the image to a "
"1-page PDF with an OCR text layer. Internally invokes "
":meth:`Pixmap.pdfocr_save`."
msgstr ""

#: ../../pixmap.rst:375 e5d2ed183f7744df9133e79a25372d8a
msgid ""
"A 1-page PDF file in memory. Could be opened like `doc=fitz.open(\"pdf\","
" pix.pdfocr_tobytes())`, and text extractions could be performed on its "
"`page=doc[0]`.  .. note::     Another possible use is insertion into some"
" pdf. The following snippet reads the images of a folder and stores them "
"as pages in a new PDF that contain an OCR text layer::        doc = "
"fitz.open()       for imgfile in os.listdir(folder):          pix = "
"fitz.Pixmap(imgfile)          imgpdf = fitz.open(\"pdf\", "
"pix.pdfocr_tobytes())          doc.insert_pdf(imgpdf)          pix = None"
"          imgpdf.close()       doc.save(\"ocr-images.pdf\")"
msgstr ""

#: ../../pixmap.rst:375 f9b36814cf9c48a6ab15d9811ef07f28
msgid ""
"A 1-page PDF file in memory. Could be opened like `doc=fitz.open(\"pdf\","
" pix.pdfocr_tobytes())`, and text extractions could be performed on its "
"`page=doc[0]`."
msgstr ""

#: ../../pixmap.rst:379 f34cac08636a48f891d0ca102df984d2
msgid ""
"Another possible use is insertion into some pdf. The following snippet "
"reads the images of a folder and stores them as pages in a new PDF that "
"contain an OCR text layer::"
msgstr ""

#: ../../pixmap.rst:393 ../../pixmap.rst:409 2813965671054edc9a74f7ee104396e6
#: fb1c584907a04c7e950f7e2fe05d9262
msgid "New in v1.17.3"
msgstr ""

#: ../../pixmap.rst:395 d94d15c30ebf4f84b27a03ef1585a4c5
msgid ""
"Write the pixmap as an image file using Pillow. Use this method for "
"output unsupported by MuPDF. Examples are"
msgstr ""

#: ../../pixmap.rst:397 c7b8b8d687b54bd094329486e337a6c7
msgid "Formats JPX, J2K, WebP, etc."
msgstr ""

#: ../../pixmap.rst:398 ca38dfe2255b445ab15f2b9584c319f0
msgid "Storing EXIF information."
msgstr ""

#: ../../pixmap.rst:399 f3bd9b0078e64d828b8083274378f9df
msgid ""
"If you do not provide dpi information, the values *xres*, *yres* stored "
"with the pixmap are automatically used."
msgstr ""

#: ../../pixmap.rst:401 7e40b1f67bfb4d0c8051e81b856ff105
msgid ""
"A simple example: `pix.pil_save(\"some.webp\", optimize=True, dpi=(150, "
"150))`. For details on other parameters see the Pillow documentation."
msgstr ""

#: ../../pixmap.rst:403 86728d35350949d3844448287022d633
msgid ""
"Since v1.22.0, PyMuPDF supports JPEG output directly. For both, "
"performance reasons and for reducing external dependencies, the use of "
"this method is no longer recommended when outputting JPEG images."
msgstr ""

#: ../../pixmap.rst:405 58b93509c2494706843a02749177dc4b
msgid "if Pillow is not installed."
msgstr ""

#: ../../pixmap.rst:411 92e3ed3557184bd1bc3e086e34529b99
msgid ""
"Return an image as a bytes object in the specified format using Pillow. "
"For example `stream = pix.pil_tobytes(format=\"WEBP\", optimize=True)`. "
"Also see above. For details on other parameters see the Pillow "
"documentation."
msgstr ""

#: ../../pixmap.rst:413 9dc18ae5e2c34a34ae2d0bbb8967dcb3
msgid ".raises ImportError: if Pillow is not installed."
msgstr ""

#: ../../pixmap.rst:420 ../../pixmap.rst:455 88720d2891db4e918a2ba0566b1ccabf
#: f17c4db9d04b42f2811dfb7a97328d61
msgid "New in v1.19.3"
msgstr ""

#: ../../pixmap.rst:422 b46090ab92ea46e8a81e0669e7b929f1
msgid ""
"Return a new pixmap by \"warping\" the quad such that the quad corners "
"become the new pixmap's corners. The target pixmap's `irect` will be `(0,"
" 0, width, height)`."
msgstr ""

#: ../../pixmap.rst:424 8e0061f9c71b459e81ba3b9f3c611b6f
msgid ""
"a convex quad with coordinates inside :attr:`Pixmap.irect` (including the"
" border points)."
msgstr ""

#: ../../pixmap.rst:425 dbca8332e438480e9de760b297df5f3f
msgid "desired resulting width."
msgstr ""

#: ../../pixmap.rst:426 26788c2c6df04932bfbd415579e695a9
msgid "desired resulting height."
msgstr ""

#: ../../pixmap.rst:427 7d36badf037f4ed9a57606839fce33d3
msgid ""
"A new pixmap where the quad corners are mapped to the pixmap corners in a"
" clockwise fashion: `quad.ul -> irect.tl`, `quad.ur -> irect.tr`, etc."
msgstr ""

#: ../../pixmap.rst:428 e0f0fefb90c743f4bc874aab0eba610c
msgid ""
":ref:`Pixmap`  .. image:: images/img-warp.*      :scale: 40      :align: "
"center"
msgstr ""

#: ../../pixmap.rst:428 4180198fa1004737aa846af90b609938
msgid ":ref:`Pixmap`"
msgstr ""

#: ../../pixmap.rst:437 ../../pixmap.rst:494 ../../pixmap.rst:503
#: 37b736d5c9bd4d308853e7629b1eebf7 6da610edee1e4e34bf301e1122e92ad2
#: b3597d8d4f4f467daa242af68018b52c
msgid "New in v1.19.2"
msgstr ""

#: ../../pixmap.rst:438 c72b497e2f9941668014e2acd4d1b042
msgid "Changed in v1.19.3"
msgstr ""

#: ../../pixmap.rst:440 3331a945e2c54c42a0757135e1fb66ef
msgid "Determine the pixmap's unique colors and their count."
msgstr ""

#: ../../pixmap.rst:442 725eb37f851343929fdb8137a045d841
msgid ""
"*(changed in v1.19.3)* If `True` return a dictionary of color pixels and "
"their usage count, else just the number of unique colors."
msgstr ""

#: ../../pixmap.rst:443 ed0eb668cfed4b1982d273adf9009150
msgid ""
"a rectangle inside :attr:`Pixmap.irect`. If provided, only those pixels "
"are considered. This allows inspecting sub-rectangles of a given pixmap "
"directly -- instead of building sub-pixmaps."
msgstr ""

#: ../../pixmap.rst:445 8167dfe278524a15bd97074df87373e4
msgid ""
"either the number of colors, or a dictionary with the items `pixel: "
"count`. The pixel key is a `bytes` object of length :attr:`Pixmap.n`.  .."
" note:: To recover the **tuple** of a pixel, use "
"`tuple(colors.keys()[i])` for the i-th item.     * The response time "
"depends on the pixmap's samples size and may be more than a second for "
"very large pixmaps.    * Where applicable, pixels with different alpha "
"values will be treated as different colors."
msgstr ""

#: ../../pixmap.rst:445 4fd89e923f0a42bbbd79762cf4426193
msgid ""
"either the number of colors, or a dictionary with the items `pixel: "
"count`. The pixel key is a `bytes` object of length :attr:`Pixmap.n`."
msgstr ""

#: ../../pixmap.rst:447 82420a5c93104105b0736bc8a94e97ec
msgid ""
"To recover the **tuple** of a pixel, use `tuple(colors.keys()[i])` for "
"the i-th item."
msgstr ""

#: ../../pixmap.rst:449 6b95dbc6bb8b419895f930056f0eef1f
msgid ""
"The response time depends on the pixmap's samples size and may be more "
"than a second for very large pixmaps."
msgstr ""

#: ../../pixmap.rst:450 5748d50d2e464c66952d3aeceff3cf85
msgid ""
"Where applicable, pixels with different alpha values will be treated as "
"different colors."
msgstr ""

#: ../../pixmap.rst:457 8c3580f0c692460b8218a6de93cc2832
msgid "Return the most frequently used color and its relative frequency."
msgstr ""

#: ../../pixmap.rst:459 962c6a914dd74e82b5bf157da41aaf51
msgid ""
"A rectangle inside :attr:`Pixmap.irect`. If provided, only those pixels "
"are considered. This allows inspecting sub-rectangles of a given pixmap "
"directly -- instead of building sub-pixmaps."
msgstr ""

#: ../../pixmap.rst:461 999453ea04da46c3935ad7fdcf45315c
#, python-format
msgid ""
"A tuple `(ratio, pixel)` where `0 < ratio <= 1` and *pixel* is the pixel "
"value of the color. Use this to decide if the image is \"almost\" "
"unicolor: a response `(0.95, b\"\\x00\\x00\\x00\")` means that 95% of all"
" pixels are black. See an example here :ref:`RecipesImages_P`."
msgstr ""

#: ../../pixmap.rst:466 12b1023917e14082a9d107bf61d82eda
msgid "Indicates whether the pixmap contains transparency information."
msgstr ""

#: ../../pixmap.rst 05b621674b1e409ea90b015041c36049
#: 18da92c429624252a6f6e561e74b1e84 1d0c19fe542a43c38251337d58018b4b
#: 256e1ab56de04874a4b1e56d818249ae 3d189d363ec1406fbabcd974ee116f45
#: 4c0efa58dfc545dba1539e6a7ceb5804 5b78494ee1684b3495be738faf3b8b58
#: 77094d4f040d41e688a45d5677a6dc84 895f1dae585442e6803ba436dc7f0d8b
#: 9ce3f8e32f9446c983544fe0cbb7410f 9d771bf3764c4177a0e35ed3522f072d
#: acdbd221c78f4af48421c2d8e57cdf62 b1e60942e5ea49b1bad86a31b01c9aad
#: b276753a5a5846a09d58f1fb042d5942 b654d772d99344fd88dd87f3ab01a4a9
#: bbea49b51cf0482cbde6f7802a351fdd dbd95a34295c4388a4bc59309997bcd7
#: f99e87e0ef394d7da6e10ad5509f126a feb5b310033948988b19cd667a9c6669
msgid "type"
msgstr ""

#: ../../pixmap.rst:468 ../../pixmap.rst:498 ../../pixmap.rst:507
#: ../../pixmap.rst:616 8b8d6825c2e04f838ad2d9edcfcd9fe7
#: 92167760f1394a11b4c3d709479f8db6 be7b36a302144cb59222f5304fb49de4
#: da5e56e9d62a4287b2c1c75e8a2705c6
msgid "bool"
msgstr ""

#: ../../pixmap.rst:472 9990c5dbed344e08a1355ed548b3ee1c
msgid ""
"The MD5 hashcode (16 bytes) of the pixmap. This is a technical value used"
" for unique identifications."
msgstr ""

#: ../../pixmap.rst:474 ../../pixmap.rst:526 44540f021ca142e6b8478b51938fb868
#: c0bba1d5e0d747af995d410c770714b9
msgid "bytes"
msgstr ""

#: ../../pixmap.rst:478 debc5618b0d247bbb323cd0e9fc76af9
msgid ""
"The colorspace of the pixmap. This value may be *None* if the image is to"
" be treated as a so-called *image mask* or *stencil mask* (currently "
"happens for extracted PDF document images only)."
msgstr ""

#: ../../pixmap.rst:480 7b1d6bcdb6d4461fb9a9fd50c8e2c69c
msgid ":ref:`Colorspace`"
msgstr ""

#: ../../pixmap.rst:484 fcee0fb6629947f7b8e4815f93b2d9b8
msgid ""
"Contains the length of one row of image data in :attr:`Pixmap.samples`. "
"This is primarily used for calculation purposes. The following "
"expressions are true:"
msgstr ""

#: ../../pixmap.rst:486 80bda295e4ef4166858a2c933baf81b0
msgid "`len(samples) == height * stride`"
msgstr ""

#: ../../pixmap.rst:487 90281cffdb9a43d685ef9f90880c0a45
msgid "`width * n == stride`"
msgstr ""

#: ../../pixmap.rst:489 ../../pixmap.rst:558 ../../pixmap.rst:564
#: ../../pixmap.rst:572 ../../pixmap.rst:580 ../../pixmap.rst:586
#: ../../pixmap.rst:592 ../../pixmap.rst:598 ../../pixmap.rst:604
#: ../../pixmap.rst:610 1c90e83c3f2442519c93bc309f966299
#: 24dbe4117ab94d20b9925d99a5e20570 6a4c7df343ca4e2893b04b538f92b85a
#: 6cc91f587f654be0a8aa4939b76ab64c 8faa47783be445f6ae035931406b3205
#: a079faef72e74e0b82a056e0759d9b02 a3ab5d7b652645a19cf2b01e6505909c
#: c92e13a6ae714fe4b1160097373908ba dabb02347e704bc2bfab122affd5773d
#: f41ba85989ab4363a44b64b43ae6d4fe
msgid "int"
msgstr ""

#: ../../pixmap.rst:496 3bb1555785944be3b61411173cc6c123
msgid "Is `True` for a gray pixmap which only has the colors black and white."
msgstr ""

#: ../../pixmap.rst:505 237fb801dd6d4b4fb75b51f4bdc6b08a
msgid ""
"Is `True` if all pixels are identical (any colorspace). Where applicable,"
" pixels with different alpha values will be treated as different colors."
msgstr ""

#: ../../pixmap.rst:512 796ba8b8b5854b438ca88258ad9a8e17
msgid "Contains the :ref:`IRect` of the pixmap."
msgstr ""

#: ../../pixmap.rst:514 5e3058d9facf4bba80272fff4a5e96bc
msgid ":ref:`IRect`"
msgstr ""

#: ../../pixmap.rst:518 9fc813dfd6e549d892b9b449688b11b5
msgid ""
"The color and (if :attr:`Pixmap.alpha` is true) transparency values for "
"all pixels. It is an area of `width * height * n` bytes. Each n bytes "
"define one pixel. Each successive n bytes yield another pixel in scanline"
" order. Subsequent scanlines follow each other with no padding. E.g. for "
"an RGBA colorspace this means, *samples* is a sequence of bytes like "
"*..., R, G, B, A, ...*, and the four byte values R, G, B, A define one "
"pixel."
msgstr ""

#: ../../pixmap.rst:520 7ae18bf1c56741628fdeaccb1e141ec3
msgid ""
"This area can be passed to other graphics libraries like PIL (Python "
"Imaging Library) to do additional processing like saving the pixmap in "
"other image formats."
msgstr ""

#: ../../pixmap.rst:523 274ea76fff1743fd99e662a40f993726
msgid ""
"The underlying data is typically a **large** memory area, from which a "
"`bytes` copy is made for this attribute ... each time you access it: for "
"example an RGB-rendered letter page has a samples size of almost 1.4 MB. "
"So consider assigning a new variable to it or use the `memoryview` "
"version :attr:`Pixmap.samples_mv` (new in v1.18.17)."
msgstr ""

#: ../../pixmap.rst:524 c27b9acd7fce4c769f15ea1fd5a9424a
msgid ""
"Any changes to the underlying data are available only after accessing "
"this attribute again. This is different from using the memoryview "
"version."
msgstr ""

#: ../../pixmap.rst:530 ../../pixmap.rst:549 82c56c40f5d9447ebc07af568d5560e2
#: a236f249824843468f5e1d430cedee35
msgid "New in v1.18.17"
msgstr ""

#: ../../pixmap.rst:532 c250fa1a07e446018f6b08cdfac4967c
msgid ""
"Like :attr:`Pixmap.samples`, but in Python `memoryview` format. It is "
"built pointing to the memory in the pixmap -- not from a copy of it. So "
"its creation speed is independent from the pixmap size, and any changes "
"to pixels will be available immediately."
msgstr ""

#: ../../pixmap.rst:534 2ba6631bf0b7475094479766dd730805
msgid ""
"Copies like `bytearray(pix.samples_mv)`, or `bytes(pixmap.samples_mv)` "
"are equivalent to and can be used in place of `pix.samples`."
msgstr ""

#: ../../pixmap.rst:536 80553417a5c64c389b5de1fb7353acd8
msgid "We also have `len(pix.samples) == len(pix.samples_mv)`."
msgstr ""

#: ../../pixmap.rst:538 7592c1b85ed44e68888bdf8bbb08c39e
msgid ""
"Look at this example from a 2 MB JPEG: the memoryview is **ten thousand "
"times faster**::"
msgstr ""

#: ../../pixmap.rst:545 60b7fa9433c346e4939d0ecb431bb7b5
msgid "memoryview"
msgstr ""

#: ../../pixmap.rst:551 1a28861aaa2848dbb566ce62b2bdf97b
msgid ""
"Python pointer to the pixel area. This is a special integer format, which"
" can be used by supporting applications (such as PyQt) to directly "
"address the samples area and thus build their images extremely fast. For "
"example::"
msgstr ""

#: ../../pixmap.rst:556 e8be64590b334a4e99731a55a647de85
msgid ""
"Both of the above lead to the same Qt image, but (2) can be **many "
"hundred times faster**, because it avoids an additional copy of the pixel"
" area."
msgstr ""

#: ../../pixmap.rst:562 e181d78f7edb4ad59440670b349dec84
msgid ""
"Contains *len(pixmap)*. This will generally equal *len(pix.samples)* plus"
" some platform-specific value for defining other attributes of the "
"object."
msgstr ""

#: ../../pixmap.rst:570 cf9e9399f7484c5cab9c5fa5c65e92b8
msgid "Width of the region in pixels."
msgstr ""

#: ../../pixmap.rst:578 e27f9e6c87524696aba66054f6377f6d
msgid "Height of the region in pixels."
msgstr ""

#: ../../pixmap.rst:584 f814b98777f748e192cdfa975441ab39
msgid ""
"X-coordinate of top-left corner in pixels. Cannot directly be changed -- "
"use :meth:`Pixmap.set_origin`."
msgstr ""

#: ../../pixmap.rst:590 6d060d3e82c64e7d9f5b870e2d86b206
msgid ""
"Y-coordinate of top-left corner in pixels. Cannot directly be changed -- "
"use :meth:`Pixmap.set_origin`."
msgstr ""

#: ../../pixmap.rst:596 008d24d0604b4ce6bb45a730d6a9864c
msgid ""
"Number of components per pixel. This number depends on colorspace and "
"alpha. If colorspace is not *None* (stencil masks), then *Pixmap.n - "
"Pixmap.aslpha == pixmap.colorspace.n* is true. If colorspace is *None*, "
"then *n == alpha == 1*."
msgstr ""

#: ../../pixmap.rst:602 bffcca4ed1ec4dc1b6157bb32b0a60d4
msgid ""
"Horizontal resolution in dpi (dots per inch). Please also see "
":data:`resolution`. Cannot directly be changed -- use "
":meth:`Pixmap.set_dpi`."
msgstr ""

#: ../../pixmap.rst:608 827f7d37c05d4defa274ebb6d6bedea2
msgid ""
"Vertical resolution in dpi (dots per inch). Please also see "
":data:`resolution`. Cannot directly be changed -- use "
":meth:`Pixmap.set_dpi`."
msgstr ""

#: ../../pixmap.rst:614 7b0500eb2f14423996a534191f2fdfa7
msgid ""
"An information-only boolean flag set to *True* if the image will be drawn"
" using \"linear interpolation\". If *False* \"nearest neighbour "
"sampling\" will be used."
msgstr ""

#: ../../pixmap.rst:621 63a1c1227caf4d6f89d72f89dcb77acf
msgid "Supported Input Image Formats"
msgstr ""

#: ../../pixmap.rst:622 0adb39c894a345478a09880e88bb2342
msgid ""
"The following file types are supported as **input** to construct pixmaps:"
" **BMP, JPEG, GIF, TIFF, JXR, JPX**, **PNG**, **PAM** and all of the "
"**Portable Anymap** family (**PBM, PGM, PNM, PPM**). This support is two-"
"fold:"
msgstr ""

#: ../../pixmap.rst:624 f4fbf0c21e00455698a0b0d0081760ce
msgid ""
"Directly create a pixmap with *Pixmap(filename)* or *Pixmap(byterray)*. "
"The pixmap will then have properties as determined by the image."
msgstr ""

#: ../../pixmap.rst:626 60d3c8f9d9404f57adf6271480cbcc1d
msgid ""
"Open such files with *fitz.open(...)*. The result will then appear as a "
"document containing one single page. Creating a pixmap of this page "
"offers all the options available in this context: apply a matrix, choose "
"colorspace and alpha, confine the pixmap to a clip area, etc."
msgstr ""

#: ../../pixmap.rst:628 abe8a34607d544c6b02a58235f48c574
msgid ""
"**SVG images** are only supported via method 2 above, not directly as "
"pixmaps. But remember: the result of this is a **raster image** as is "
"always the case with pixmaps [#f1]_."
msgstr ""

#: ../../pixmap.rst:633 1727e18650854d329d33fc8dfe0bd995
msgid "Supported Output Image Formats"
msgstr ""

#: ../../pixmap.rst:634 aa0ce340d46841448144c528372c2d49
msgid ""
"A number of image **output** formats are supported. You have the option "
"to either write an image directly to a file (:meth:`Pixmap.save`), or to "
"generate a bytes object (:meth:`Pixmap.tobytes`). Both methods accept a "
"string identifying the desired format (**Format** column below). Please "
"note that not all combinations of pixmap colorspace, transparency support"
" (alpha) and image format are possible."
msgstr ""

#: ../../pixmap.rst:637 33ab9c75604448f8bb79a27c2cd12700
msgid "**Format**"
msgstr ""

#: ../../pixmap.rst:637 fac1a754e21e4d17af04825976e37df7
msgid "**Colorspaces**"
msgstr ""

#: ../../pixmap.rst:637 a16ddb57e18b40d7899a611565aad76a
msgid "**alpha**"
msgstr ""

#: ../../pixmap.rst:637 94c0b954bbf243bcad9dd6f9beae17fe
msgid "**Extensions**"
msgstr ""

#: ../../pixmap.rst:637 0c316f708125497aa99a542cfad76721
msgid "**Description**"
msgstr ""

#: ../../pixmap.rst:639 1a10c29044cb4cff96c935a99c1b9ae2
msgid "jpg, jpeg"
msgstr ""

#: ../../pixmap.rst:639 ../../pixmap.rst:640 ../../pixmap.rst:646
#: ../../pixmap.rst:647 025dcaeb145344a6aa58affe0c4bb39c
#: 5cab733c753742e1b79b321c7b1b20a7 c35fdfc9d40449ca84e7eb373b1e80bf
#: ed01a4e5c7b248e9b76af1580e20d5db
msgid "gray, rgb, cmyk"
msgstr ""

#: ../../pixmap.rst:639 ../../pixmap.rst:641 ../../pixmap.rst:642
#: ../../pixmap.rst:644 ../../pixmap.rst:645 ../../pixmap.rst:646
#: 1da825f24235464ca4ce2b396ca02ee8 3827f4b996df471e9940dc0a2de4342a
#: 520fa53e570b4605bde6ee3ebebec0ba 58f75082188447b49f5510a3591c9c8c
#: 77d20daf6d124122a1f39a699ebde2bd d02494fbe7b9451d922cce659474adbe
msgid "no"
msgstr ""

#: ../../pixmap.rst:639 88b28e762b734b25a5b52657b7615883
msgid ".jpg, .jpeg"
msgstr ""

#: ../../pixmap.rst:639 36bfddcffd5845fd8b17cbb459f7a6e1
msgid "Joint Photographic Experts Group"
msgstr ""

#: ../../pixmap.rst:640 a1410d4c5ad6474faa74df6a0afef8bd
msgid "pam"
msgstr ""

#: ../../pixmap.rst:640 ../../pixmap.rst:643 ../../pixmap.rst:647
#: 674656aff7734d32aede8179e2d871b1 7d9e0f6cbc5d4170ad78ae519e87215e
#: cdceefd29d024149930f52328026a44a
msgid "yes"
msgstr ""

#: ../../pixmap.rst:640 7fd558a4d3f34da59f158a228df503d4
msgid ".pam"
msgstr ""

#: ../../pixmap.rst:640 a9cdfb61442b481b8bdbcdf4ecee98e7
msgid "Portable Arbitrary Map"
msgstr ""

#: ../../pixmap.rst:641 4204c06cd1cb42f8bcc18789a26d0a6d
msgid "pbm"
msgstr ""

#: ../../pixmap.rst:641 ../../pixmap.rst:642 ../../pixmap.rst:643
#: ../../pixmap.rst:644 ../../pixmap.rst:645 367fba1b2af247be9d3cefa15cccca04
#: 4febf0ae96dc427fab5e7972c2f6b348 bd292d2ff3e948488e465d403ab06a5c
#: c26a60f39e574f378ccf3cc825d0fea2 ea6b0cf01ed84b61bca03602f98bf007
msgid "gray, rgb"
msgstr ""

#: ../../pixmap.rst:641 51b6a70a51df4935b244546b6ca3e93a
msgid ".pbm"
msgstr ""

#: ../../pixmap.rst:641 289dd7833b4d4b32a74616347d9f8095
msgid "Portable Bitmap"
msgstr ""

#: ../../pixmap.rst:642 b3168e3c27684f3897f49b7576b85368
msgid "pgm"
msgstr ""

#: ../../pixmap.rst:642 0175d58c22be40d7947b0e1520981160
msgid ".pgm"
msgstr ""

#: ../../pixmap.rst:642 831baef9bf4a432aa94d63db414ba3d8
msgid "Portable Graymap"
msgstr ""

#: ../../pixmap.rst:643 ab3e298d6ecd42bea010b613fc43369b
msgid "png"
msgstr ""

#: ../../pixmap.rst:643 7e22ea2f7d804a1ba1c0629072024c1d
msgid ".png"
msgstr ""

#: ../../pixmap.rst:643 fb6939598ea040ef8498c1c508dfb5fb
msgid "Portable Network Graphics"
msgstr ""

#: ../../pixmap.rst:644 a0e1ac7f28e34dd0862cda60f2493c8a
msgid "pnm"
msgstr ""

#: ../../pixmap.rst:644 1fd4768138fc43068fb6198cc4a7510c
msgid ".pnm"
msgstr ""

#: ../../pixmap.rst:644 5119e4e4b50149a19ef885475d4298c1
msgid "Portable Anymap"
msgstr ""

#: ../../pixmap.rst:645 c3bf28efc9ed44bfaabdc7dfe7077063
msgid "ppm"
msgstr ""

#: ../../pixmap.rst:645 64728ef6093f44ec923cc375812fe18f
msgid ".ppm"
msgstr ""

#: ../../pixmap.rst:645 4a103c25639f49cb9b6d53abb577cfca
msgid "Portable Pixmap"
msgstr ""

#: ../../pixmap.rst:646 cd6077f8312e4c13b7c5cdeee05cffd4
msgid "ps"
msgstr ""

#: ../../pixmap.rst:646 6dc32dcf890a4281846c440c49c577d6
msgid ".ps"
msgstr ""

#: ../../pixmap.rst:646 6ee439fe6752465b99305b6ae4aa09e7
msgid "Adobe PostScript Image"
msgstr ""

#: ../../pixmap.rst:647 72e790d3ea1645438cb1fdffb0878950
msgid "psd"
msgstr ""

#: ../../pixmap.rst:647 dcc90edf66d345d59754f1d26a532774
msgid ".psd"
msgstr ""

#: ../../pixmap.rst:647 ff627033bd3e4c2b8a8369e5a9137ac5
msgid "Adobe Photoshop Document"
msgstr ""

#: ../../pixmap.rst:651 53ddc13ee993479fb15ef6d68aa2f676
msgid ""
"Not all image file types are supported (or at least common) on all OS "
"platforms. E.g. PAM and the Portable Anymap formats are rare or even "
"unknown on Windows."
msgstr ""

#: ../../pixmap.rst:652 181fc7e2e8ad42a8880a992115c79ef0
msgid ""
"Especially pertaining to CMYK colorspaces, you can always convert a CMYK "
"pixmap to an RGB pixmap with *rgb_pix = fitz.Pixmap(fitz.csRGB, "
"cmyk_pix)* and then save that in the desired format."
msgstr ""

#: ../../pixmap.rst:653 7e5cdb236a124e02a7c61efdf78cf2e0
msgid ""
"As can be seen, MuPDF's image support range is different for input and "
"output. Among those supported both ways, PNG and JPEG are probably the "
"most popular."
msgstr ""

#: ../../pixmap.rst:654 6df0f34f09d64449b7ca05e73660c2cb
msgid ""
"We also recommend using \"ppm\" formats as input to tkinter's "
"*PhotoImage* method like this: *tkimg = "
"tkinter.PhotoImage(data=pix.tobytes(\"ppm\"))* (also see the tutorial). "
"This is **very** fast (**60 times** faster than PNG)."
msgstr ""

#: ../../pixmap.rst:659 067696001a1c4888ab7b5dd2a4176463
msgid "Footnotes"
msgstr ""

#: ../../pixmap.rst:660 d23e7035d2c0403b9c9442d05f73f31d
msgid ""
"If you need a **vector image** from the SVG, you must first convert it to"
" a PDF. Try :meth:`Document.convert_to_pdf`. If this is not good enough, "
"look for other SVG-to-PDF conversion tools like the Python packages "
"`svglib <https://pypi.org/project/svglib>`_, `CairoSVG "
"<https://pypi.org/project/cairosvg>`_, `Uniconvertor "
"<https://sk1project.net/modules.php?name=Products&product=uniconvertor&op=download>`_"
" or the Java solution `Apache Batik <https://github.com/apache/batik>`_. "
"Have a look at our Wiki for more examples."
msgstr ""

#: ../../pixmap.rst:662 8ca7f186e7bb4a8a95ddb21543a288b0
msgid ""
"To also set the alpha property, add an additional step to this method by "
"dropping or adding an alpha channel to the result."
msgstr ""

#: ../../footer.rst:-1 cb78b118777749f698f09f0e91e09050
msgid "Discord logo"
msgstr ""

