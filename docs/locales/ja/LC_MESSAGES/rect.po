# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-27 14:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 466f13deecd446e1bd7e022dd8963958
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 c8637fe018fa4dfdbb7993259e8a4969
msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
msgstr ""

#: ../../header.rst:-1 ec88a501aa2d4a1ea281b2463614370f
msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
msgstr ""

#: ../../rect.rst:7 91593755d66a43f18f8515e9361c79d6
msgid "Rect"
msgstr ""

#: ../../rect.rst:9 d117801c861e427494000cf6b413829d
msgid ""
"*Rect* represents a rectangle defined by four floating point numbers x0, "
"y0, x1, y1. They are treated as being coordinates of two diagonally "
"opposite points. The first two numbers are regarded as the \"top left\" "
"corner P\\ :sub:`(x0,y0)` and P\\ :sub:`(x1,y1)` as the \"bottom right\" "
"one. However, these two properties need not coincide with their intuitive"
" meanings -- read on."
msgstr ""

#: ../../rect.rst:11 bbab2cf6aeb048e8a92f888ea2fba511
msgid "The following remarks are also valid for :ref:`IRect` objects:"
msgstr ""

#: ../../rect.rst:13 82eac85bb10841b6a0bf247bb4f0daaf
msgid ""
"A rectangle in the sense of (Py-) MuPDF **(and PDF)** always has "
"**borders parallel to the x- resp. y-axis**. A general orthogonal "
"tetragon **is not a rectangle** -- in contrast to the mathematical "
"definition."
msgstr ""

#: ../../rect.rst:14 17098dea9a434df4ac0609521b7e1f4b
msgid ""
"The constructing points can be (almost! -- see below) anywhere in the "
"plane -- they need not even be different, and e.g. \"top left\" need not "
"be the geometrical \"north-western\" point."
msgstr ""

#: ../../rect.rst:15 51f269b50bb44943a66fef6c4cb4941b
msgid "Units are in points, where 72 points is 1 inch."
msgstr ""

#: ../../rect.rst:20 78142599ba084190b7701ce1a487635f
msgid ""
"For any given quadruple of numbers, the geometrically \"same\" rectangle "
"can be defined in four different ways:"
msgstr ""

#: ../../rect.rst:17 c80f42ea223049e89c72e2edf41a7a7a
msgid "Rect(P\\ :sub:`(x0,y0)`, P\\ :sub:`(x1,y1)`\\ )"
msgstr ""

#: ../../rect.rst:18 e43dd5ee44be4e03a106f3c2a41117ac
msgid "Rect(P\\ :sub:`(x1,y1)`, P\\ :sub:`(x0,y0)`\\ )"
msgstr ""

#: ../../rect.rst:19 e7dcabc7b50445e8bb452e9a0a4c3ae6
msgid "Rect(P\\ :sub:`(x0,y1)`, P\\ :sub:`(x1,y0)`\\ )"
msgstr ""

#: ../../rect.rst:20 f00d6d3fa3f6486eabb4a7b1835f7c9e
msgid "Rect(P\\ :sub:`(x1,y0)`, P\\ :sub:`(x0,y1)`\\ )"
msgstr ""

#: ../../rect.rst:22 ad079faa9f354066aaa2a2b25d098d8d
msgid "**(Changed in v1.19.0)** Hence some classification:"
msgstr ""

#: ../../rect.rst:24 29853cbede904ade9e23fe0efdd4f717
msgid ""
"A rectangle is called **valid** if `x0 <= x1` and `y0 <= y1` (i.e. the "
"bottom right point is \"south-eastern\" to the top left one), otherwise "
"**invalid**. Of the four alternatives above, **only the first** is valid."
" Please take into account, that in MuPDF's coordinate system, the y-axis "
"is oriented from **top to bottom**. Invalid rectangles have been called "
"infinite in earlier versions."
msgstr ""

#: ../../rect.rst:26 30d2ed81bb9c41f3826f9964efb00fd4
msgid ""
"A rectangle is called **empty** if `x0 >= x1` or `y0 >= y1`. This "
"implies, that **invalid rectangles are also always empty.** And `width` "
"(resp. `height`) is **set to zero** if `x0 > x1` (resp. `y0 > y1`). In "
"previous versions, a rectangle was empty only if one of width or height "
"was zero."
msgstr ""

#: ../../rect.rst:28 27d38bf126c6464ea169b6ae34c4513a
msgid ""
"Rectangle coordinates **cannot be outside** the number range from "
"`FZ_MIN_INF_RECT = -2147483648` to `FZ_MAX_INF_RECT = 2147483520`. Both "
"values have been chosen, because they are the smallest / largest 32bit "
"integers that survive C float conversion roundtrips. In previous versions"
" there was no limit for coordinate values."
msgstr ""

#: ../../rect.rst:30 fcde1aadf9784534b633304aab50c552
msgid ""
"There is **exactly one \"infinite\" rectangle**, defined by `x0 = y0 = "
"FZ_MIN_INF_RECT` and `x1 = y1 = FZ_MAX_INF_RECT`. It contains every other"
" rectangle. It is mainly used for technical purposes -- e.g. when a "
"function call should ignore a formally required rectangle argument. This "
"rectangle is not empty."
msgstr ""

#: ../../rect.rst:32 5820e1232de34faca563d4a83dd216b8
msgid ""
"**Rectangles are (semi-) open:** The right and the bottom edges "
"(including the resp. corners) are not considered part of the rectangle. "
"This implies, that only the top-left corner `(x0, y0)` can ever belong to"
" the rectangle - the other three corners never do. An empty rectangle "
"contains no corners at all."
msgstr ""

#: ../../rect.rst:38 5276a88a89e5406ba5248521c42a122d
msgid "Here is an overview of the changes."
msgstr ""

#: ../../rect.rst:41 abdc1d2a523b4e4d9769826c7c97edd6
msgid "Notion"
msgstr ""

#: ../../rect.rst:41 96fe9c8ca24b48918c9967aa33e03a3e
msgid "Versions < 1.19.0"
msgstr ""

#: ../../rect.rst:41 80d5881cd39441b4a5991799a95fe9f7
msgid "Versions 1.19.*"
msgstr ""

#: ../../rect.rst:43 7cc4d7c401ce4d258371592a96baf6d6
msgid "empty"
msgstr ""

#: ../../rect.rst:43 1942b4fcb4324b7f93a78a1853eaf95e
msgid "x0 = x1 or y0 = y1"
msgstr ""

#: ../../rect.rst:43 b7352722444645bc8b2581680bde5189
msgid "x0 >= x1 or y0 >= y1 -- includes invalid rects"
msgstr ""

#: ../../rect.rst:44 86e05fc074894215bea9097d70490d7e
msgid "valid"
msgstr ""

#: ../../rect.rst:44 277e29486d7046d7880d70aad9db5ff9
msgid "n/a"
msgstr ""

#: ../../rect.rst:44 e1d566cd40604969a02af10684b980cd
msgid "x0 <= x1 and y0 <= y1"
msgstr ""

#: ../../rect.rst:45 f545449d9c2c44c797b2532ab1b66e72
msgid "infinite"
msgstr ""

#: ../../rect.rst:45 b60b5bf50def46228492d1e19a5bc4d7
msgid "all rects where x0 > x1 or y1 > y0"
msgstr ""

#: ../../rect.rst:45 16aa2886d53341ada087faadd1c05075
msgid "**exactly one infinite rect / irect!**"
msgstr ""

#: ../../rect.rst:46 8d4dea6517c5446a873646b49ab17a0e
msgid "coordinate values"
msgstr ""

#: ../../rect.rst:46 69302565b88c479ea600ebba634a6ed9
msgid "all numbers"
msgstr ""

#: ../../rect.rst:46 65bf05e06a6441dc915c9bb9adb69042
msgid "`FZ_MIN_INF_RECT <= number <= FZ_MAX_INF_RECT`"
msgstr ""

#: ../../rect.rst:47 b4536f11681940e38a3bd0a110807098
msgid "borders, corners"
msgstr ""

#: ../../rect.rst:47 1b852297dce747a6bd0d987bda3c48af
msgid "are parts of the rectangle"
msgstr ""

#: ../../rect.rst:47 19bd9d17aae3426da3c995796005ffbd
msgid "right and bottom corners and edges **are outside**"
msgstr ""

#: ../../rect.rst:50 c1cf8a1e69a64386b5c2e2c2589da973
msgid ""
"There are new top level functions defining infinite and standard empty "
"rectangles and quads, see :meth:`INFINITE_RECT` and friends."
msgstr ""

#: ../../rect.rst:54 98120c80015a40f7955923beb991dc13
msgid "**Methods / Attributes**"
msgstr ""

#: ../../rect.rst:54 17de6088f374418788f7751ad3f16cf7
msgid "**Short Description**"
msgstr ""

#: ../../rect.rst:56 ba8e476ddb23414891a833d7fcff28d6
msgid ":meth:`Rect.contains`"
msgstr ""

#: ../../rect.rst:56 8db5aa43d4ff4a56802d4bfa5c83d0e9
msgid "checks containment of point_likes and rect_likes"
msgstr ""

#: ../../rect.rst:57 5940018acdcf4624a2fe079b3f454962
msgid ":meth:`Rect.get_area`"
msgstr ""

#: ../../rect.rst:57 0114a1a6892542a2b324c866cfe839ae
msgid "calculate rectangle area"
msgstr ""

#: ../../rect.rst:58 888f4654af414c26a177d5473f512029
msgid ":meth:`Rect.include_point`"
msgstr ""

#: ../../rect.rst:58 21a3153b70a647daa1a77fda6facb3ce
msgid "enlarge rectangle to also contain a point"
msgstr ""

#: ../../rect.rst:59 68938dd4ddc849949e32bbc15d93ecbc
msgid ":meth:`Rect.include_rect`"
msgstr ""

#: ../../rect.rst:59 698d7821adc843339af2b388d4474251
msgid "enlarge rectangle to also contain another one"
msgstr ""

#: ../../rect.rst:60 ce727d2802a24462add91ad7a9c3e27c
msgid ":meth:`Rect.intersect`"
msgstr ""

#: ../../rect.rst:60 90a3f3ea390740b784c4364702359614
msgid "common part with another rectangle"
msgstr ""

#: ../../rect.rst:61 d5c9dd7567b1424e98414c7f2de2003c
msgid ":meth:`Rect.intersects`"
msgstr ""

#: ../../rect.rst:61 705b047ece7041d2a9207dcad12f3001
msgid "checks for non-empty intersections"
msgstr ""

#: ../../rect.rst:62 442ff6bfd0e149d8ba16fb94e0de481e
msgid ":meth:`Rect.morph`"
msgstr ""

#: ../../rect.rst:62 ce8369b446254b36bcc2fcc09355954d
msgid "transform with a point and a matrix"
msgstr ""

#: ../../rect.rst:63 30a20eebd62d44dd997795b832ab407c
msgid ":meth:`Rect.torect`"
msgstr ""

#: ../../rect.rst:63 e261b19a2d534752b38114961c886cec
msgid "the matrix that transforms to another rectangle"
msgstr ""

#: ../../rect.rst:64 ad0fb19b29b1435fb3ad47f80f409448
msgid ":meth:`Rect.norm`"
msgstr ""

#: ../../rect.rst:64 6f2cb158a43b4d48827a2da1a8934e86
msgid "the Euclidean norm"
msgstr ""

#: ../../rect.rst:65 910e16fc7a0b4bcca1ba226c34953074
msgid ":meth:`Rect.normalize`"
msgstr ""

#: ../../rect.rst:65 108267b95fcc459db28735e360df4596
msgid "makes a rectangle valid"
msgstr ""

#: ../../rect.rst:66 8b4718736dbd432cbddadfac342dd17f
msgid ":meth:`Rect.round`"
msgstr ""

#: ../../rect.rst:66 b7d5984a8a574d0e9970e2b26d9e1cc5
msgid "create smallest :ref:`Irect` containing rectangle"
msgstr ""

#: ../../rect.rst:67 5e6517df087240948ac417d73ff176a1
msgid ":meth:`Rect.transform`"
msgstr ""

#: ../../rect.rst:67 971b7c36ffe14f3fa499cc360820f235
msgid "transform rectangle with a matrix"
msgstr ""

#: ../../rect.rst:68 e2d8a2b3c45847958e4ad3c622ee1d22
msgid ":attr:`Rect.bottom_left`"
msgstr ""

#: ../../rect.rst:68 fe23158f78af4f899c39aed5685e8359
msgid "bottom left point, synonym *bl*"
msgstr ""

#: ../../rect.rst:69 730e15798fb846d0b4482739c00c95f6
msgid ":attr:`Rect.bottom_right`"
msgstr ""

#: ../../rect.rst:69 b7bfef418b924f96a61943a91a294c02
msgid "bottom right point, synonym *br*"
msgstr ""

#: ../../rect.rst:70 c87f59d0360a4e839480598afe818152
msgid ":attr:`Rect.height`"
msgstr ""

#: ../../rect.rst:70 15a57fc746d3478281a826005e2f245e
msgid "rectangle height"
msgstr ""

#: ../../rect.rst:71 0e24ef9ebf8640ba93ea541bee3909c7
msgid ":attr:`Rect.irect`"
msgstr ""

#: ../../rect.rst:71 705f42af06aa470f91a0cca0faa2dca3
msgid "equals result of method *round()*"
msgstr ""

#: ../../rect.rst:72 dbc19698eefa49a39702f03fbb45efb2
msgid ":attr:`Rect.is_empty`"
msgstr ""

#: ../../rect.rst:72 d303fe7ac68f42cd913249f0fd4482ec
msgid "whether rectangle is empty"
msgstr ""

#: ../../rect.rst:73 57bbea7eeba040b3ba246078b307451a
msgid ":attr:`Rect.is_valid`"
msgstr ""

#: ../../rect.rst:73 7cb3ede202ec4e63b19bb83a6460d0d5
msgid "whether rectangle is valid"
msgstr ""

#: ../../rect.rst:74 f51432946f4a4daa9290ab040183497e
msgid ":attr:`Rect.is_infinite`"
msgstr ""

#: ../../rect.rst:74 d672ef6e12424def8ae51f7712547801
msgid "whether rectangle is infinite"
msgstr ""

#: ../../rect.rst:75 98d868d397104cb2ae4e086309ac90f9
msgid ":attr:`Rect.top_left`"
msgstr ""

#: ../../rect.rst:75 d50dac56bf234fb1b395769331daa66c
msgid "top left point, synonym *tl*"
msgstr ""

#: ../../rect.rst:76 8c80488804494cd9a08751862c6e4080
msgid ":attr:`Rect.top_right`"
msgstr ""

#: ../../rect.rst:76 0031127c88c14d32b59ff2b244782fa3
msgid "top_right point, synonym *tr*"
msgstr ""

#: ../../rect.rst:77 5b14beed9925483ea53577574d5d5459
msgid ":attr:`Rect.quad`"
msgstr ""

#: ../../rect.rst:77 b96c203dbb8844c7a710c43d8b3d297b
msgid ":ref:`Quad` made from rectangle corners"
msgstr ""

#: ../../rect.rst:78 ac799a307af142bd9c8c4a5abaa501a9
msgid ":attr:`Rect.width`"
msgstr ""

#: ../../rect.rst:78 3470449e7e034c298142869943f47b4f
msgid "rectangle width"
msgstr ""

#: ../../rect.rst:79 4e15cc37af1643ddb56a6d71e1378e1e
msgid ":attr:`Rect.x0`"
msgstr ""

#: ../../rect.rst:79 30aafefc1b71447cb4f974630e2206c3
msgid "left corners' x coordinate"
msgstr ""

#: ../../rect.rst:80 2818b0e5683f480eb7eac93fbb9801eb
msgid ":attr:`Rect.x1`"
msgstr ""

#: ../../rect.rst:80 ef2050f588c946a18a6c3a53c0fc5710
msgid "right corners' x -coordinate"
msgstr ""

#: ../../rect.rst:81 9f4217635fb64dfa8bdbb9f2d4c98c89
msgid ":attr:`Rect.y0`"
msgstr ""

#: ../../rect.rst:81 d1149c6bb8464df7a77beb2c12b33853
msgid "top corners' y coordinate"
msgstr ""

#: ../../rect.rst:82 6aec792abac34b1a8c7de782efe1e609
msgid ":attr:`Rect.y1`"
msgstr ""

#: ../../rect.rst:82 671a8c86e8f64fc9bdf0d60e57463fe7
msgid "bottom corners' y coordinate"
msgstr ""

#: ../../rect.rst:85 6e17b00f928741f79061ae2638f84d12
msgid "**Class API**"
msgstr ""

#: ../../rect.rst:103 2667fd580df54f23afacc89105efabec
msgid ""
"Overloaded constructors: *top_left*, *bottom_right* stand for "
":data:`point_like` objects, \"sequence\" is a Python sequence type of 4 "
"numbers (see :ref:`SequenceTypes`), \"rect\" means another "
":data:`rect_like`, while the other parameters mean coordinates."
msgstr ""

#: ../../rect.rst:105 7850fbc380b54453ab2d1bc2dd601176
msgid "If \"rect\" is specified, the constructor creates a **new copy** of it."
msgstr ""

#: ../../rect.rst:107 a8cc0b06b673497e8a1faa3c2ada671c
msgid ""
"Without parameters, the empty rectangle *Rect(0.0, 0.0, 0.0, 0.0)* is "
"created."
msgstr ""

#: ../../rect.rst:111 53e7f381d4d5432fba57947cd29aa2fe
msgid ""
"Creates the smallest containing :ref:`IRect`. This is **not** the same as"
" simply rounding the rectangle's edges: The top left corner is rounded "
"upwards and to the left while the bottom right corner is rounded "
"downwards and to the right."
msgstr ""

#: ../../rect.rst:116 1d2ff5c85c064524aedf2ce4b3c95848
msgid "If the rectangle is **empty**, the result is also empty."
msgstr ""

#: ../../rect.rst:117 d0dcb74b91b446beaff9cb547971e4c3
msgid ""
"**Possible paradox:** The result may be empty, **even if** the rectangle "
"is **not** empty! In such cases, the result obviously does **not** "
"contain the rectangle. This is because MuPDF's algorithm allows for a "
"small tolerance (1e-3). Example:"
msgstr ""

#: ../../rect.rst 2e451d3bc3e6432a947c16598cd24fec
#: 326048206e1e4ea9b224937da3776aa3 38605c9d02cf4a00b61e42fab5790687
#: 47c9051bd0ef40629bfa44413fd728a4 577cd1451c194608bad4898c1a0299b5
#: a0a815d6730242ad9a5f0ade4dfb54f4 a1d6307c26b74227860fada36de643fc
#: bd293feb5db7455ba9aee36fa560c0bd
msgid "Return type"
msgstr ""

#: ../../rect.rst:127 0e9527eebf4446cbb57018ae6f09db68
msgid ":ref:`IRect`"
msgstr ""

#: ../../rect.rst:131 d0b55e2d55f846ccaa87574578ef8438
msgid ""
"Transforms the rectangle with a matrix and **replaces the original**. If "
"the rectangle is empty or infinite, this is a no-operation."
msgstr ""

#: ../../rect.rst 376138bd30ac405ea9a93da3121378ac
#: 5b2cc4ec23fc4af4bf6a7d4393e66e02 5b58932abfff41ca9b342c5fc1cf8549
#: 65413c7139b04103bdb4a6edae50d66f 7910d9a4798147db95ec173c7135fb54
#: a71e492014f54e58a480387ce6f53c74 b4a3fbb063a248f28e99ff2c63fcc6e0
#: c94e46b653cf413f84a06151042460f9 e9bee561192b4e17ad00dd777aa2378e
msgid "Parameters"
msgstr ""

#: ../../rect.rst:133 96aefa2164f240209c00e2e0dabfeb8d
msgid "The matrix for the transformation."
msgstr ""

#: ../../rect.rst:136 defc2dc19d054cb4bd680580cc5bd994
msgid "*Rect*"
msgstr ""

#: ../../rect.rst 04d769dd83304ecaa51ec1a84a97e4af
#: 4fa83c24b0bf4168b8c58d243a6378c9 c98cace250764f2eb72151786fc024ed
msgid "Returns"
msgstr ""

#: ../../rect.rst:137 23510c1ba04d40cb87d5eff4e4d388d9
msgid "the smallest rectangle that contains the transformed original."
msgstr ""

#: ../../rect.rst:141 46a21dfd0e8449d6ab1b7f513d980746
msgid ""
"The intersection (common rectangular area, largest rectangle contained in"
" both) of the current rectangle and *r* is calculated and **replaces the "
"current** rectangle. If either rectangle is empty, the result is also "
"empty. If *r* is infinite, this is a no-operation. If the rectangles are "
"(mathematically) disjoint sets, then the result is invalid. If the result"
" is valid but empty, then the rectangles touch each other in a corner or "
"(part of) a side."
msgstr ""

#: ../../rect.rst:143 ../../rect.rst:150 28618c75089b44d89b1bf8f41c70c75f
#: 8b6033d9899240cf8611f5f9f510210e
msgid "Second rectangle"
msgstr ""

#: ../../rect.rst:148 9fbe0087aafc4cec8e089d5bc9fd5216
msgid ""
"The smallest rectangle containing the current one and *r* is calculated "
"and **replaces the current** one. If either rectangle is infinite, the "
"result is also infinite. If one is empty, the other one will be taken as "
"the result."
msgstr ""

#: ../../rect.rst:155 e74560b7b84d4378a3e80647408a475b
msgid ""
"The smallest rectangle containing the current one and point *p* is "
"calculated and **replaces the current** one. **The infinite rectangle "
"remains unchanged.** To create a rectangle containing a series of points,"
" start with (the empty) *fitz.Rect(p1, p1)* and successively include the "
"remaining points."
msgstr ""

#: ../../rect.rst:157 e0920c3298714fefafc909d975d708f8
msgid "Point to include."
msgstr ""

#: ../../rect.rst:163 c5550eab5f6f4893af9ebe2ce8782314
msgid ""
"Calculate the area of the rectangle and, with no parameter, equals "
"*abs(rect)*. Like an empty rectangle, the area of an infinite rectangle "
"is also zero. So, at least one of *fitz.Rect(p1, p2)* and *fitz.Rect(p2, "
"p1)* has a zero area."
msgstr ""

#: ../../rect.rst:165 1eb098a0170940b8864181f4d3f87e8f
msgid ""
"Specify required unit: respective squares of *px* (pixels, default), *in*"
" (inches), *cm* (centimeters), or *mm* (millimeters)."
msgstr ""

#: ../../rect.rst:170 49d00bcb25084d94bafb74c26d9c83ee
msgid ""
"Checks whether *x* is contained in the rectangle. It may be an *IRect*, "
"*Rect*, *Point* or number. If *x* is an empty rectangle, this is always "
"true. If the rectangle is empty this is always *False* for all non-empty "
"rectangles and for all points. `x in rect` and `rect.contains(x)` are "
"equivalent."
msgstr ""

#: ../../rect.rst:172 eb7385ef4d59485192fa0001dc23b997
msgid "the object to check."
msgstr ""

#: ../../rect.rst:179 69a09e43f51b4b1cbb19e25ebc578882
msgid ""
"Checks whether the rectangle and a :data:`rect_like` \"r\" contain a "
"common non-empty :ref:`Rect`. This will always be *False* if either is "
"infinite or empty."
msgstr ""

#: ../../rect.rst:181 dddf6752333741f2903c5268beb5b889
msgid "the rectangle to check."
msgstr ""

#: ../../rect.rst:187 680510f0961245df844599f41faeeae8
msgid "New in version 1.19.3"
msgstr ""

#: ../../rect.rst:189 4661a5204e8741cdb9f7ce71f0b601ae
msgid "Compute the matrix which transforms this rectangle to a given one."
msgstr ""

#: ../../rect.rst:191 a4c7de553cea4a9986eae4623f5df06d
msgid "the target rectangle. Must not be empty or infinite."
msgstr ""

#: ../../rect.rst:192 95686fb279d642718f7edd17f66d9c7d
msgid ":ref:`Matrix`"
msgstr ""

#: ../../rect.rst:193 075a5446ceae47359aea9b17da193e43
msgid ""
"a matrix `mat` such that `self * mat = rect`. Can for example be used to "
"transform between the page and the pixmap coordinates. See an example use"
" here :ref:`RecipesImages_P`."
msgstr ""

#: ../../rect.rst:197 a4cf07da39d34559ab475ba2ed7cc0fc
msgid "New in version 1.17.0"
msgstr ""

#: ../../rect.rst:199 7940cdab13b6486792ac10b241dd7aa1
msgid ""
"Return a new quad after applying a matrix to the rectangle using the "
"fixed point `fixpoint`."
msgstr ""

#: ../../rect.rst:201 5f87ac2597e04dd3b3f8211dc62dea97
msgid "the fixed point."
msgstr ""

#: ../../rect.rst:202 e79ddaef0c5a4ea9bde479e8d506de22
msgid "the matrix."
msgstr ""

#: ../../rect.rst:203 bf34e95ad03e4726897abc40c9d74156
msgid ""
"a new :ref:`Quad`. This a wrapper for the same-named quad method. If "
"infinite, the infinite quad is returned."
msgstr ""

#: ../../rect.rst:207 d8c70d1d815c46c896810eabb6245fbb
msgid "New in version 1.16.0"
msgstr ""

#: ../../rect.rst:209 2a135549a2f746b9aa0761eb9b2f772c
msgid ""
"Return the Euclidean norm of the rectangle treated as a vector of four "
"numbers."
msgstr ""

#: ../../rect.rst:213 f35cec1682444eb980712bf614bbf7a4
msgid ""
"**Replace** the rectangle with its valid version. This is done by "
"shuffling the rectangle corners. After completion of this method, the "
"bottom right corner will indeed be south-eastern to the top left one (but"
" may still be empty)."
msgstr ""

#: ../../rect.rst:217 848e5af2e11d451bafa97efced847d62
msgid "Equals result of method *round()*."
msgstr ""

#: ../../rect.rst:223 8e1e514b89e64d5b89e9c6b9f19bd694
msgid "Equals *Point(x0, y0)*."
msgstr ""

#: ../../rect.rst 0bc12b7ca9fe4b17882ae1d03f6456c8
#: 1eade3153bcb417b899acf7a61f290d3 32cb99d793ef4429adfa30eadf8d7672
#: 645e04bcce2a4bf194d3ebfc3da2fede 8093150ede1b4bf89a741000bfccaef3
#: 85e35fec57864ceaae6d1fb7501b4791 a096620908dd405d9cc037f6a0bc4401
#: a5375dd93ad14830b9666e85c5a65c26 aa194dfd296d4b6fa1966cd7afd957d4
#: cc28ed1390da451c88643ad07fba55aa d5f81d5d208d464fb327bfca7b93c247
#: fcd78c4ae177454589c0190a0cbcad93
msgid "type"
msgstr ""

#: ../../rect.rst:225 ../../rect.rst:233 ../../rect.rst:241 ../../rect.rst:249
#: 2436eeb3625a424a9cd40d688fd7c13d 59628d33d36d41f38940ef24755a34c7
#: 849fdcaefab947d9adccf148561c98d6 db8e2129723c4995831e7d93026ca710
msgid ":ref:`Point`"
msgstr ""

#: ../../rect.rst:231 a147720941da43e48cc3ab7e9663ade8
msgid "Equals `Point(x1, y0)`."
msgstr ""

#: ../../rect.rst:239 5a3b0480541048a5a54d6837fa1a9b33
msgid "Equals `Point(x0, y1)`."
msgstr ""

#: ../../rect.rst:247 94055cf69b484c9c8bee26f394a64dd7
msgid "Equals `Point(x1, y1)`."
msgstr ""

#: ../../rect.rst:253 68b78906bef84a65a4ee738b248c793a
msgid "The quadrilateral `Quad(rect.tl, rect.tr, rect.bl, rect.br)`."
msgstr ""

#: ../../rect.rst:255 8c26d9a173f54ef8a347e47136744f27
msgid ":ref:`Quad`"
msgstr ""

#: ../../rect.rst:259 821ea53b5e364c92b46a861cd575691c
msgid "Width of the rectangle. Equals `max(x1 - x0, 0)`."
msgstr ""

#: ../../rect.rst:265 5301f10c40bf413888e8d4730dad6e29
msgid "Height of the rectangle. Equals `max(y1 - y0, 0)`."
msgstr ""

#: ../../rect.rst:271 7542dd8345a048feb2fa77285d2192c7
msgid "X-coordinate of the left corners."
msgstr ""

#: ../../rect.rst:273 ../../rect.rst:279 ../../rect.rst:285 ../../rect.rst:291
#: 170ffcf13a1e4066bacd8a186231abd9 48f6b8631d354d868dc4b822ccff1d4b
#: 83dd0162b5f84934b4d3a1c282e4c136 99e77d83d2054261854383f6a3d72c68
msgid "float"
msgstr ""

#: ../../rect.rst:277 682614bfd54040f59be14610d6218022
msgid "Y-coordinate of the top corners."
msgstr ""

#: ../../rect.rst:283 b2316d0aee71484fb8bd8c8cf7fd0c10
msgid "X-coordinate of the right corners."
msgstr ""

#: ../../rect.rst:289 e818bd63ce624f1195a8c4e0c55f6be4
msgid "Y-coordinate of the bottom corners."
msgstr ""

#: ../../rect.rst:295 34286b7d8a794bd89062d7b3ae447d78
msgid "`True` if this is the infinite rectangle."
msgstr ""

#: ../../rect.rst:297 ../../rect.rst:303 ../../rect.rst:309
#: 5441020f22de4be1878a5702f7f34959 840dbdb8ea684cd88b5c76348a38017b
#: f999ba83ab604dbabb86d6f25e5824be
msgid "bool"
msgstr ""

#: ../../rect.rst:301 239d926831244169bc0fead5f06f521f
msgid "`True` if rectangle is empty."
msgstr ""

#: ../../rect.rst:307 afd742dfa4c546c496ef3cf4a961edad
msgid "`True` if rectangle is valid."
msgstr ""

#: ../../rect.rst:313 2200470cd05543d48a7462faae952116
msgid ""
"This class adheres to the Python sequence protocol, so components can be "
"accessed via their index, too. Also refer to :ref:`SequenceTypes`."
msgstr ""

#: ../../rect.rst:314 9ed8c8dba52e4930b61a36ddd1091a28
msgid ""
"Rectangles can be used with arithmetic operators -- see chapter "
":ref:`Algebra`."
msgstr ""

#: ../../footer.rst:-1 51ccd0394a4a45c792234b03e2c0d8d4
msgid "Discord logo"
msgstr ""

